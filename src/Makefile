# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/sirannon
pkgincludedir = $(includedir)/sirannon
pkglibdir = $(libdir)/sirannon
pkglibexecdir = $(libexecdir)/sirannon
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = sirannon$(EXEEXT)
#am__append_1 = libsirannon.la
#am__append_2 = Private/AQUAServer.cpp Private/DIORSession.h Private/AQUAServer.h Private/AQUAWriter.cpp Private/DIORServer.cpp Private/DIORServer.h Private/AQUASession.cpp Private/AQUAMonitor.h Private/AQUAMonitor.cpp Private/DIORSession.cpp Private/AQUAWriter.h Private/AQUASession.h 
#am__append_3 = Local/test.h Local/IConcealClassifier.cpp Local/IConcealClassifier.h Local/test.cpp Local/Telefoonlijst_240809.xls 
subdir = src
DIST_COMMON = $(libsirannoninclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_regex.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4_ax_boost_system.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(libsirannonincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libsirannon_la_LIBADD =
am__objects_1 = libsirannon_la-Proxy.lo libsirannon_la-FileStreamer.lo \
	libsirannon_la-TranscoderSession.lo \
	libsirannon_la-ProxyStreamer.lo libsirannon_la-Segmenter.lo \
	libsirannon_la-Reader.lo libsirannon_la-FFmpegReader.lo \
	libsirannon_la-AVCReader.lo libsirannon_la-BasicReader.lo \
	libsirannon_la-LiveReader.lo libsirannon_la-AMR_WBP_Reader.lo \
	libsirannon_la-FakeReader.lo libsirannon_la-Packetizer.lo \
	libsirannon_la-Unpacketizer.lo libsirannon_la-PESPacketizer.lo \
	libsirannon_la-MP2Packetizer.lo \
	libsirannon_la-MP4Packetizer.lo \
	libsirannon_la-AVCPacketizer.lo \
	libsirannon_la-AMRPacketizer.lo \
	libsirannon_la-AMR_WBP_Packetizer.lo \
	libsirannon_la-AC3Packetizer.lo \
	libsirannon_la-SirannonPacketizer.lo \
	libsirannon_la-AVCUnpacketizer.lo \
	libsirannon_la-MP4Unpacketizer.lo \
	libsirannon_la-PESUnpacketizer.lo \
	libsirannon_la-MP2Unpacketizer.lo \
	libsirannon_la-AMRUnpacketizer.lo \
	libsirannon_la-DefaultPacketizer.lo \
	libsirannon_la-Multiplexer.lo libsirannon_la-TSMultiplexer.lo \
	libsirannon_la-TSDemultiplexer.lo \
	libsirannon_la-FFmpegMultiplexer.lo \
	libsirannon_la-FFmpegDemultiplexer.lo \
	libsirannon_la-Scheduler.lo libsirannon_la-Communicator.lo \
	libsirannon_la-MediaServer.lo libsirannon_la-MediaSession.lo \
	libsirannon_la-RTPTransmitter.lo libsirannon_la-RTPReceiver.lo \
	libsirannon_la-UDPTransmitter.lo libsirannon_la-UDPReceiver.lo \
	libsirannon_la-TCPTransmitter.lo libsirannon_la-TCPReceiver.lo \
	libsirannon_la-GigabitTransmitter.lo \
	libsirannon_la-HTTPConnection.lo libsirannon_la-HTTPServer.lo \
	libsirannon_la-HTTPSession.lo libsirannon_la-HTTPClient.lo \
	libsirannon_la-RTSPSession.lo libsirannon_la-RTSPServer.lo \
	libsirannon_la-RTSPClient.lo libsirannon_la-RTMP_AMF.lo \
	libsirannon_la-RTMPHandshake.lo \
	libsirannon_la-RTMPChunkStream.lo \
	libsirannon_la-RTMPSession.lo \
	libsirannon_la-RTMPTConnection.lo libsirannon_la-RTMPServer.lo \
	libsirannon_la-RTMPTServer.lo libsirannon_la-RTMPPacketizer.lo \
	libsirannon_la-RTMPClient.lo libsirannon_la-RTMPTClient.lo \
	libsirannon_la-Classifier.lo libsirannon_la-SVCClassifier.lo \
	libsirannon_la-Writer.lo libsirannon_la-FFmpegWriter.lo \
	libsirannon_la-FrameTransformer.lo \
	libsirannon_la-Transcoder.lo libsirannon_la-TranscoderAudio.lo \
	libsirannon_la-FFmpegDecoder.lo libsirannon_la-FrameTagger.lo \
	libsirannon_la-Logger.lo libsirannon_la-Statistics.lo \
	libsirannon_la-Example.lo libsirannon_la-GOPSplitter.lo \
	libsirannon_la-PcapWriter.lo libsirannon_la-YUVDisplay.lo \
	libsirannon_la-Restamp.lo libsirannon_la-Boost.lo \
	libsirannon_la-ffmpeg.lo libsirannon_la-h264_avc.lo \
	libsirannon_la-sha2.lo libsirannon_la-hmac_sha2.lo \
	libsirannon_la-PortManager.lo libsirannon_la-FileManager.lo \
	libsirannon_la-RandomGenerator.lo libsirannon_la-Utils.lo \
	libsirannon_la-Frame.lo libsirannon_la-sdp.lo \
	libsirannon_la-SirannonSocket.lo libsirannon_la-Flash.lo \
	libsirannon_la-Bits.lo libsirannon_la-Url.lo \
	libsirannon_la-Base64.lo libsirannon_la-IPAddress.lo \
	libsirannon_la-SirannonException.lo \
	libsirannon_la-SirannonTime.lo libsirannon_la-XMLStream.lo \
	libsirannon_la-Block.lo libsirannon_la-System.lo \
	libsirannon_la-OSSupport.lo \
	libsirannon_la-ConnectionInterface.lo libsirannon_la-Link.lo \
	libsirannon_la-MediaPacket.lo \
	libsirannon_la-MediaDescriptor.lo \
	libsirannon_la-ProcessorManager.lo \
	libsirannon_la-MemoryManager.lo \
	libsirannon_la-SirannonPrint.lo libsirannon_la-sirannon.lo
am_libsirannon_la_OBJECTS = $(am__objects_1)
#am__objects_2 = libsirannon_la-AQUAServer.lo \
#	libsirannon_la-AQUAWriter.lo \
#	libsirannon_la-DIORServer.lo \
#	libsirannon_la-AQUASession.lo \
#	libsirannon_la-AQUAMonitor.lo \
#	libsirannon_la-DIORSession.lo
#am__objects_3 = libsirannon_la-IConcealClassifier.lo \
#	libsirannon_la-test.lo
am__objects_4 = $(am__objects_2) $(am__objects_3)
nodist_libsirannon_la_OBJECTS = $(am__objects_4)
libsirannon_la_OBJECTS = $(am_libsirannon_la_OBJECTS) \
	$(nodist_libsirannon_la_OBJECTS)
libsirannon_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libsirannon_la_CXXFLAGS) $(CXXFLAGS) \
	$(libsirannon_la_LDFLAGS) $(LDFLAGS) -o $@
#am_libsirannon_la_rpath = -rpath $(libdir)
PROGRAMS = $(bin_PROGRAMS)
am_sirannon_OBJECTS = sirannon-Proxy.$(OBJEXT) \
	sirannon-FileStreamer.$(OBJEXT) \
	sirannon-TranscoderSession.$(OBJEXT) \
	sirannon-ProxyStreamer.$(OBJEXT) sirannon-Segmenter.$(OBJEXT) \
	sirannon-Reader.$(OBJEXT) sirannon-FFmpegReader.$(OBJEXT) \
	sirannon-AVCReader.$(OBJEXT) sirannon-BasicReader.$(OBJEXT) \
	sirannon-LiveReader.$(OBJEXT) \
	sirannon-AMR_WBP_Reader.$(OBJEXT) \
	sirannon-FakeReader.$(OBJEXT) sirannon-Packetizer.$(OBJEXT) \
	sirannon-Unpacketizer.$(OBJEXT) \
	sirannon-PESPacketizer.$(OBJEXT) \
	sirannon-MP2Packetizer.$(OBJEXT) \
	sirannon-MP4Packetizer.$(OBJEXT) \
	sirannon-AVCPacketizer.$(OBJEXT) \
	sirannon-AMRPacketizer.$(OBJEXT) \
	sirannon-AMR_WBP_Packetizer.$(OBJEXT) \
	sirannon-AC3Packetizer.$(OBJEXT) \
	sirannon-SirannonPacketizer.$(OBJEXT) \
	sirannon-AVCUnpacketizer.$(OBJEXT) \
	sirannon-MP4Unpacketizer.$(OBJEXT) \
	sirannon-PESUnpacketizer.$(OBJEXT) \
	sirannon-MP2Unpacketizer.$(OBJEXT) \
	sirannon-AMRUnpacketizer.$(OBJEXT) \
	sirannon-DefaultPacketizer.$(OBJEXT) \
	sirannon-Multiplexer.$(OBJEXT) \
	sirannon-TSMultiplexer.$(OBJEXT) \
	sirannon-TSDemultiplexer.$(OBJEXT) \
	sirannon-FFmpegMultiplexer.$(OBJEXT) \
	sirannon-FFmpegDemultiplexer.$(OBJEXT) \
	sirannon-Scheduler.$(OBJEXT) sirannon-Communicator.$(OBJEXT) \
	sirannon-MediaServer.$(OBJEXT) sirannon-MediaSession.$(OBJEXT) \
	sirannon-RTPTransmitter.$(OBJEXT) \
	sirannon-RTPReceiver.$(OBJEXT) \
	sirannon-UDPTransmitter.$(OBJEXT) \
	sirannon-UDPReceiver.$(OBJEXT) \
	sirannon-TCPTransmitter.$(OBJEXT) \
	sirannon-TCPReceiver.$(OBJEXT) \
	sirannon-GigabitTransmitter.$(OBJEXT) \
	sirannon-HTTPConnection.$(OBJEXT) \
	sirannon-HTTPServer.$(OBJEXT) sirannon-HTTPSession.$(OBJEXT) \
	sirannon-HTTPClient.$(OBJEXT) sirannon-RTSPSession.$(OBJEXT) \
	sirannon-RTSPServer.$(OBJEXT) sirannon-RTSPClient.$(OBJEXT) \
	sirannon-RTMP_AMF.$(OBJEXT) sirannon-RTMPHandshake.$(OBJEXT) \
	sirannon-RTMPChunkStream.$(OBJEXT) \
	sirannon-RTMPSession.$(OBJEXT) \
	sirannon-RTMPTConnection.$(OBJEXT) \
	sirannon-RTMPServer.$(OBJEXT) sirannon-RTMPTServer.$(OBJEXT) \
	sirannon-RTMPPacketizer.$(OBJEXT) \
	sirannon-RTMPClient.$(OBJEXT) sirannon-RTMPTClient.$(OBJEXT) \
	sirannon-Classifier.$(OBJEXT) sirannon-SVCClassifier.$(OBJEXT) \
	sirannon-Writer.$(OBJEXT) sirannon-FFmpegWriter.$(OBJEXT) \
	sirannon-FrameTransformer.$(OBJEXT) \
	sirannon-Transcoder.$(OBJEXT) \
	sirannon-TranscoderAudio.$(OBJEXT) \
	sirannon-FFmpegDecoder.$(OBJEXT) \
	sirannon-FrameTagger.$(OBJEXT) sirannon-Logger.$(OBJEXT) \
	sirannon-Statistics.$(OBJEXT) sirannon-Example.$(OBJEXT) \
	sirannon-GOPSplitter.$(OBJEXT) sirannon-PcapWriter.$(OBJEXT) \
	sirannon-YUVDisplay.$(OBJEXT) sirannon-Restamp.$(OBJEXT) \
	sirannon-Boost.$(OBJEXT) sirannon-ffmpeg.$(OBJEXT) \
	sirannon-h264_avc.$(OBJEXT) sirannon-sha2.$(OBJEXT) \
	sirannon-hmac_sha2.$(OBJEXT) sirannon-PortManager.$(OBJEXT) \
	sirannon-FileManager.$(OBJEXT) \
	sirannon-RandomGenerator.$(OBJEXT) sirannon-Utils.$(OBJEXT) \
	sirannon-Frame.$(OBJEXT) sirannon-sdp.$(OBJEXT) \
	sirannon-SirannonSocket.$(OBJEXT) sirannon-Flash.$(OBJEXT) \
	sirannon-Bits.$(OBJEXT) sirannon-Url.$(OBJEXT) \
	sirannon-Base64.$(OBJEXT) sirannon-IPAddress.$(OBJEXT) \
	sirannon-SirannonException.$(OBJEXT) \
	sirannon-SirannonTime.$(OBJEXT) sirannon-XMLStream.$(OBJEXT) \
	sirannon-Block.$(OBJEXT) sirannon-System.$(OBJEXT) \
	sirannon-OSSupport.$(OBJEXT) \
	sirannon-ConnectionInterface.$(OBJEXT) sirannon-Link.$(OBJEXT) \
	sirannon-MediaPacket.$(OBJEXT) \
	sirannon-MediaDescriptor.$(OBJEXT) \
	sirannon-ProcessorManager.$(OBJEXT) \
	sirannon-MemoryManager.$(OBJEXT) \
	sirannon-SirannonPrint.$(OBJEXT) sirannon-sirannon.$(OBJEXT)
#am__objects_5 = sirannon-AQUAServer.$(OBJEXT) \
#	sirannon-AQUAWriter.$(OBJEXT) \
#	sirannon-DIORServer.$(OBJEXT) \
#	sirannon-AQUASession.$(OBJEXT) \
#	sirannon-AQUAMonitor.$(OBJEXT) \
#	sirannon-DIORSession.$(OBJEXT)
#am__objects_6 = sirannon-IConcealClassifier.$(OBJEXT) \
#	sirannon-test.$(OBJEXT)
nodist_sirannon_OBJECTS = $(am__objects_5) $(am__objects_6)
sirannon_OBJECTS = $(am_sirannon_OBJECTS) $(nodist_sirannon_OBJECTS)
sirannon_DEPENDENCIES = sirannon-MediaProcessor.o
sirannon_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(sirannon_CXXFLAGS) \
	$(CXXFLAGS) $(sirannon_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libsirannon_la_SOURCES) $(EXTRA_libsirannon_la_SOURCES) \
	$(nodist_libsirannon_la_SOURCES) $(sirannon_SOURCES) \
	$(EXTRA_sirannon_SOURCES) $(nodist_sirannon_SOURCES)
DIST_SOURCES = $(libsirannon_la_SOURCES) \
	$(EXTRA_libsirannon_la_SOURCES) $(sirannon_SOURCES) \
	$(EXTRA_sirannon_SOURCES)
HEADERS = $(libsirannoninclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/zhanghx/develop/sirannon-1.0.0/build-aux/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/zhanghx/develop/sirannon-1.0.0/build-aux/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/zhanghx/develop/sirannon-1.0.0/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/zhanghx/develop/sirannon-1.0.0/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/zhanghx/develop/sirannon-1.0.0/build-aux/missing --run automake-1.11
AWK = gawk
BOOST_CPPFLAGS = -pthread -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/i386-linux-gnu
BOOST_REGEX_LIB = -lboost_regex
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =   -I$(top_srcdir)/libs/ffmpeg-0.9 -I$(top_srcdir)/libs/jrtplib-3.9.1/src
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -O3 -Os
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"sirannon\" -DVERSION=\"1.0.0\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_LIBPTHREAD=1 -DHAVE_LIBEXPAT=1 -DHAVE_LIBPTHREAD=1 -DHAVE_LIBM=1 -DHAVE_LIBZ=1 -DHAVE_LIBBZ2=1 -DHAVE_LIBX264=1 -DHAVE_LIBVPX=1 -DHAVE_LIBVORBISENC=1 -DHAVE_LIBVORBIS=1 -DHAVE_LIBTHEORADEC=1 -DHAVE_LIBTHEORAENC=1 -DHAVE_LIBOPENCORE_AMRWB=1 -DHAVE_LIBOPENCORE_AMRNB=1 -DHAVE_LIBFAAC=1 -DHAVE_LIBMP3LAME=1 -DHAVE_LIBRT=1 -DHAVE_BOOST=/\*\*/ -DHAVE_BOOST_SYSTEM=/\*\*/ -DHAVE_BOOST_FILESYSTEM=/\*\*/ -DHAVE_BOOST_REGEX=/\*\*/ -DHAVE_BOOST_THREAD=/\*\*/
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS =  $(top_srcdir)/libs/ffmpeg-0.9/libavformat/libavformat.a $(top_srcdir)/libs/ffmpeg-0.9/libavcodec/libavcodec.a $(top_srcdir)/libs/ffmpeg-0.9/libavutil/libavutil.a $(top_srcdir)/libs/ffmpeg-0.9/libswscale/libswscale.a $(top_srcdir)/libs/jrtplib-3.9.1/src/libjrtp.a  -lboost_regex -lboost_thread -lboost_filesystem -lboost_system -lrt -lmp3lame -lfaac -lopencore-amrnb -lopencore-amrwb -ltheoraenc -ltheoradec -lvorbis -lvorbisenc -lvpx -lx264 -lbz2 -lz -lm -lpthread -lexpat -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/zhanghx/develop/sirannon-1.0.0/build-aux/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = sirannon
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SVN_VERSION = $(shell svnversion -n $(top_srcdir) | sed 's/ /_/' )
VERSION = 1.0.0
XDLL_FLG = // No DLL loading
abs_builddir = /home/zhanghx/develop/sirannon-1.0.0/src
abs_srcdir = /home/zhanghx/develop/sirannon-1.0.0/src
abs_top_builddir = /home/zhanghx/develop/sirannon-1.0.0
abs_top_srcdir = /home/zhanghx/develop/sirannon-1.0.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/zhanghx/develop/sirannon-1.0.0/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
svnversionlin = yes
svnversionwin = 
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
lib_LTLIBRARIES = $(am__append_1)
libsirannoninclude_HEADERS = sirannon.h \
	Core/MediaProcessor.h Core/MediaPacket.h Core/MediaDescriptor.h Core/SirannonTime.h Core/ProcessorManager.h \
	Core/MediaProcessor_priv.h Core/MediaPacket_priv.h Core/ProcessorManager_priv.h Core/SirannonTime_priv.h Core/SirannonException.h \
	Common/Boost.h

libsirannonincludedir = ${includedir}/sirannon
sirannon_SOURCES = HighLevel/Proxy.cpp HighLevel/Proxy.h \
	HighLevel/FileStreamer.cpp HighLevel/FileStreamer.h \
	HighLevel/TranscoderSession.cpp HighLevel/TranscoderSession.h \
	HighLevel/ProxyStreamer.cpp HighLevel/ProxyStreamer.h \
	HighLevel/Segmenter.cpp HighLevel/Segmenter.h \
	Reader/Reader.cpp Reader/Reader.h Reader/FFmpegReader.cpp \
	Reader/FFmpegReader.h Reader/AVCReader.cpp Reader/AVCReader.h \
	Reader/BasicReader.cpp Reader/BasicReader.h \
	Reader/LiveReader.cpp Reader/LiveReader.h \
	Reader/AMR_WBP_Reader.cpp Reader/AMR_WBP_Reader.h \
	Reader/FakeReader.cpp Reader/FakeReader.h \
	Packetizer/Packetizer.cpp Packetizer/Packetizer.h \
	Packetizer/Unpacketizer.cpp Packetizer/Unpacketizer.h \
	Packetizer/PESPacketizer.cpp Packetizer/PESPacketizer.h \
	Packetizer/MP2Packetizer.cpp Packetizer/MP2Packetizer.h \
	Packetizer/MP4Packetizer.cpp Packetizer/MP4Packetizer.h \
	Packetizer/AVCPacketizer.cpp Packetizer/AVCPacketizer.h \
	Packetizer/AMRPacketizer.cpp Packetizer/AMRPacketizer.h \
	Packetizer/AMR_WBP_Packetizer.cpp \
	Packetizer/AMR_WBP_Packetizer.h Packetizer/AC3Packetizer.cpp \
	Packetizer/AC3Packetizer.h Packetizer/SirannonPacketizer.cpp \
	Packetizer/SirannonPacketizer.h Packetizer/AVCUnpacketizer.cpp \
	Packetizer/AVCUnpacketizer.h Packetizer/MP4Unpacketizer.cpp \
	Packetizer/MP4Unpacketizer.h Packetizer/PESUnpacketizer.cpp \
	Packetizer/PESUnpacketizer.h Packetizer/MP2Unpacketizer.cpp \
	Packetizer/MP2Unpacketizer.h Packetizer/AMRUnpacketizer.cpp \
	Packetizer/AMRUnpacketizer.h Packetizer/DefaultPacketizer.cpp \
	Packetizer/DefaultPacketizer.h Multiplexer/Multiplexer.cpp \
	Multiplexer/Multiplexer.h Multiplexer/TSMultiplexer.cpp \
	Multiplexer/TSMultiplexer.h Multiplexer/TSDemultiplexer.cpp \
	Multiplexer/TSDemultiplexer.h \
	Multiplexer/FFmpegMultiplexer.cpp \
	Multiplexer/FFmpegMultiplexer.h \
	Multiplexer/FFmpegDemultiplexer.cpp \
	Multiplexer/FFmpegDemultiplexer.h Scheduler/Scheduler.cpp \
	Scheduler/Scheduler.h Communicator/Communicator.cpp \
	Communicator/Communicator.h Communicator/MediaServer.cpp \
	Communicator/MediaServer.h Communicator/MediaSession.cpp \
	Communicator/MediaSession.h Communicator/RTPTransmitter.cpp \
	Communicator/RTPTransmitter.h Communicator/RTPReceiver.cpp \
	Communicator/RTPReceiver.h Communicator/UDPTransmitter.cpp \
	Communicator/UDPTransmitter.h Communicator/UDPReceiver.cpp \
	Communicator/UDPReceiver.h Communicator/TCPTransmitter.cpp \
	Communicator/TCPTransmitter.h Communicator/TCPReceiver.cpp \
	Communicator/TCPReceiver.h Communicator/GigabitTransmitter.cpp \
	Communicator/GigabitTransmitter.h \
	Communicator/HTTP/HTTPConnection.cpp \
	Communicator/HTTP/HTTPConnection.h \
	Communicator/HTTP/HTTPServer.cpp \
	Communicator/HTTP/HTTPServer.h \
	Communicator/HTTP/HTTPSession.cpp \
	Communicator/HTTP/HTTPSession.h \
	Communicator/HTTP/HTTPClient.cpp \
	Communicator/HTTP/HTTPClient.h \
	Communicator/RTSP/RTSPSession.cpp \
	Communicator/RTSP/RTSPSession.h \
	Communicator/RTSP/RTSPServer.cpp \
	Communicator/RTSP/RTSPServer.h \
	Communicator/RTSP/RTSPClient.cpp \
	Communicator/RTSP/RTSPClient.h Communicator/RTMP/RTMP_AMF.cpp \
	Communicator/RTMP/RTMP_AMF.h \
	Communicator/RTMP/RTMPHandshake.cpp \
	Communicator/RTMP/RTMPHandshake.h \
	Communicator/RTMP/RTMPChunkStream.cpp \
	Communicator/RTMP/RTMPChunkStream.h \
	Communicator/RTMP/RTMPSession.cpp \
	Communicator/RTMP/RTMPSession.h \
	Communicator/RTMP/RTMPTConnection.cpp \
	Communicator/RTMP/RTMPTConnection.h \
	Communicator/RTMP/RTMPServer.cpp \
	Communicator/RTMP/RTMPServer.h \
	Communicator/RTMP/RTMPTServer.cpp \
	Communicator/RTMP/RTMPTServer.h \
	Communicator/RTMP/RTMPPacketizer.cpp \
	Communicator/RTMP/RTMPPacketizer.h \
	Communicator/RTMP/RTMPClient.cpp \
	Communicator/RTMP/RTMPClient.h \
	Communicator/RTMP/RTMPTClient.cpp \
	Communicator/RTMP/RTMPTClient.h Classifier/Classifier.cpp \
	Classifier/Classifier.h Classifier/SVCClassifier.cpp \
	Classifier/SVCClassifier.h Writer/Writer.cpp Writer/Writer.h \
	Writer/FFmpegWriter.cpp Writer/FFmpegWriter.h \
	Transform/FrameTransformer.cpp Transform/FrameTransformer.h \
	Transform/Transcoder.cpp Transform/Transcoder.h \
	Transform/TranscoderAudio.cpp Transform/TranscoderAudio.h \
	Transform/FFmpegDecoder.cpp Transform/FFmpegDecoder.h \
	Misc/FrameTagger.cpp Misc/FrameTagger.h Misc/Logger.cpp \
	Misc/Logger.h Misc/Statistics.cpp Misc/Statistics.h \
	Misc/Example.cpp Misc/Example.h Misc/GOPSplitter.cpp \
	Misc/GOPSplitter.h Misc/PcapWriter.cpp Misc/PcapWriter.h \
	Misc/YUVDisplay.cpp Misc/YUVDisplay.h Misc/Restamp.cpp \
	Misc/Restamp.h Common/Boost.h Common/Boost.cpp Common/crc.h \
	Common/Endianness.h Common/ffmpeg.cpp Common/ffmpeg.h \
	Common/h264_avc.cpp Common/h264_avc.h Common/h264_avc_priv.h \
	Common/sha2.cpp Common/sha2.h Common/hmac_sha2.cpp \
	Common/hmac_sha2.h Common/PortManager.cpp Common/PortManager.h \
	Common/FileManager.cpp Common/FileManager.h \
	Common/RandomGenerator.cpp Common/RandomGenerator.h \
	Common/Utils.cpp Common/Utils.h Common/Frame.cpp \
	Common/Frame.h Common/sdp.cpp Common/sdp.h \
	Common/SirannonSocket.cpp Common/SirannonSocket.h \
	Common/Flash.cpp Common/Flash.h Common/Bits.cpp Common/Bits.h \
	Common/Bits_priv.h Common/Url.cpp Common/Url.h Common/Mpeg.h \
	Common/Base64.cpp Common/Base64.h Common/Network.h \
	Common/IPAddress.cpp Common/IPAddress.h Common/str.h \
	Core/SirannonException.cpp Core/SirannonException.h \
	Core/SirannonTime.cpp Core/SirannonTime.h \
	Core/SirannonTime_priv.h Core/XMLStream.cpp Core/XMLStream.h \
	Core/Block.cpp Core/Block.h Core/System.cpp Core/System.h \
	Core/OSSupport.cpp Core/OSSupport.h \
	Core/ConnectionInterface.cpp Core/ConnectionInterface.h \
	Core/Link.cpp Core/Link.h Core/MediaPacket.cpp \
	Core/MediaPacket.h Core/MediaPacket_priv.h \
	Core/MediaDescriptor.cpp Core/MediaDescriptor.h \
	Core/ProcessorManager.cpp Core/ProcessorManager.h \
	Core/ProcessorManager_priv.h Core/MemoryManager.cpp \
	Core/MemoryManager.h Core/SirannonPrint.cpp \
	Core/SirannonPrint.h Core/Interfaces.h sirannon.h sirannon.cpp
nodist_sirannon_SOURCES = $(am__append_2) $(am__append_3)
EXTRA_sirannon_SOURCES = Core/MediaProcessor.cpp Core/MediaProcessor.h Core/MediaProcessor_priv.h
libsirannon_la_SOURCES = $(sirannon_SOURCES)
nodist_libsirannon_la_SOURCES = $(nodist_sirannon_SOURCES)
EXTRA_libsirannon_la_SOURCES = $(EXTRA_sirannon_SOURCES)
sirannon_LDADD = sirannon-MediaProcessor.o
sirannon_LDFLAGS = 
sirannon_CXXFLAGS = -Wall -Wextra -Wno-unused-variable -Wno-unused-parameter -Wno-reorder -Wno-sign-compare
sirannon_CPPFLAGS = -I$(top_srcdir)/src/Common -I$(top_srcdir)/src/Core -DSVN_VERSION=\"$(SVN_VERSION)\" -D_FILE_OFFSET_BITS=64
libsirannon_la_LDFLAGS = 
libsirannon_la_CXXFLAGS = -Wall -Wextra -Wno-unused-variable -Wno-unused-parameter -Wno-reorder -Wno-sign-compare
libsirannon_la_CPPFLAGS = -I$(top_srcdir)/src/Common -I$(top_srcdir)/src/Core -DSVN_VERSION=\"$(SVN_VERSION)\"
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libsirannon.la: $(libsirannon_la_OBJECTS) $(libsirannon_la_DEPENDENCIES) 
	$(libsirannon_la_LINK) $(am_libsirannon_la_rpath) $(libsirannon_la_OBJECTS) $(libsirannon_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
sirannon$(EXEEXT): $(sirannon_OBJECTS) $(sirannon_DEPENDENCIES) 
	@rm -f sirannon$(EXEEXT)
	$(sirannon_LINK) $(sirannon_OBJECTS) $(sirannon_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libsirannon_la-AC3Packetizer.Plo
include ./$(DEPDIR)/libsirannon_la-AMRPacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-AMRUnpacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-AMR_WBP_Packetizer.Plo
include ./$(DEPDIR)/libsirannon_la-AMR_WBP_Reader.Plo
include ./$(DEPDIR)/libsirannon_la-AQUAMonitor.Plo
include ./$(DEPDIR)/libsirannon_la-AQUAServer.Plo
include ./$(DEPDIR)/libsirannon_la-AQUASession.Plo
include ./$(DEPDIR)/libsirannon_la-AQUAWriter.Plo
include ./$(DEPDIR)/libsirannon_la-AVCPacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-AVCReader.Plo
include ./$(DEPDIR)/libsirannon_la-AVCUnpacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-Base64.Plo
include ./$(DEPDIR)/libsirannon_la-BasicReader.Plo
include ./$(DEPDIR)/libsirannon_la-Bits.Plo
include ./$(DEPDIR)/libsirannon_la-Block.Plo
include ./$(DEPDIR)/libsirannon_la-Boost.Plo
include ./$(DEPDIR)/libsirannon_la-Classifier.Plo
include ./$(DEPDIR)/libsirannon_la-Communicator.Plo
include ./$(DEPDIR)/libsirannon_la-ConnectionInterface.Plo
include ./$(DEPDIR)/libsirannon_la-DIORServer.Plo
include ./$(DEPDIR)/libsirannon_la-DIORSession.Plo
include ./$(DEPDIR)/libsirannon_la-DefaultPacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-Example.Plo
include ./$(DEPDIR)/libsirannon_la-FFmpegDecoder.Plo
include ./$(DEPDIR)/libsirannon_la-FFmpegDemultiplexer.Plo
include ./$(DEPDIR)/libsirannon_la-FFmpegMultiplexer.Plo
include ./$(DEPDIR)/libsirannon_la-FFmpegReader.Plo
include ./$(DEPDIR)/libsirannon_la-FFmpegWriter.Plo
include ./$(DEPDIR)/libsirannon_la-FakeReader.Plo
include ./$(DEPDIR)/libsirannon_la-FileManager.Plo
include ./$(DEPDIR)/libsirannon_la-FileStreamer.Plo
include ./$(DEPDIR)/libsirannon_la-Flash.Plo
include ./$(DEPDIR)/libsirannon_la-Frame.Plo
include ./$(DEPDIR)/libsirannon_la-FrameTagger.Plo
include ./$(DEPDIR)/libsirannon_la-FrameTransformer.Plo
include ./$(DEPDIR)/libsirannon_la-GOPSplitter.Plo
include ./$(DEPDIR)/libsirannon_la-GigabitTransmitter.Plo
include ./$(DEPDIR)/libsirannon_la-HTTPClient.Plo
include ./$(DEPDIR)/libsirannon_la-HTTPConnection.Plo
include ./$(DEPDIR)/libsirannon_la-HTTPServer.Plo
include ./$(DEPDIR)/libsirannon_la-HTTPSession.Plo
include ./$(DEPDIR)/libsirannon_la-IConcealClassifier.Plo
include ./$(DEPDIR)/libsirannon_la-IPAddress.Plo
include ./$(DEPDIR)/libsirannon_la-Link.Plo
include ./$(DEPDIR)/libsirannon_la-LiveReader.Plo
include ./$(DEPDIR)/libsirannon_la-Logger.Plo
include ./$(DEPDIR)/libsirannon_la-MP2Packetizer.Plo
include ./$(DEPDIR)/libsirannon_la-MP2Unpacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-MP4Packetizer.Plo
include ./$(DEPDIR)/libsirannon_la-MP4Unpacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-MediaDescriptor.Plo
include ./$(DEPDIR)/libsirannon_la-MediaPacket.Plo
include ./$(DEPDIR)/libsirannon_la-MediaProcessor.Plo
include ./$(DEPDIR)/libsirannon_la-MediaServer.Plo
include ./$(DEPDIR)/libsirannon_la-MediaSession.Plo
include ./$(DEPDIR)/libsirannon_la-MemoryManager.Plo
include ./$(DEPDIR)/libsirannon_la-Multiplexer.Plo
include ./$(DEPDIR)/libsirannon_la-OSSupport.Plo
include ./$(DEPDIR)/libsirannon_la-PESPacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-PESUnpacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-Packetizer.Plo
include ./$(DEPDIR)/libsirannon_la-PcapWriter.Plo
include ./$(DEPDIR)/libsirannon_la-PortManager.Plo
include ./$(DEPDIR)/libsirannon_la-ProcessorManager.Plo
include ./$(DEPDIR)/libsirannon_la-Proxy.Plo
include ./$(DEPDIR)/libsirannon_la-ProxyStreamer.Plo
include ./$(DEPDIR)/libsirannon_la-RTMPChunkStream.Plo
include ./$(DEPDIR)/libsirannon_la-RTMPClient.Plo
include ./$(DEPDIR)/libsirannon_la-RTMPHandshake.Plo
include ./$(DEPDIR)/libsirannon_la-RTMPPacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-RTMPServer.Plo
include ./$(DEPDIR)/libsirannon_la-RTMPSession.Plo
include ./$(DEPDIR)/libsirannon_la-RTMPTClient.Plo
include ./$(DEPDIR)/libsirannon_la-RTMPTConnection.Plo
include ./$(DEPDIR)/libsirannon_la-RTMPTServer.Plo
include ./$(DEPDIR)/libsirannon_la-RTMP_AMF.Plo
include ./$(DEPDIR)/libsirannon_la-RTPReceiver.Plo
include ./$(DEPDIR)/libsirannon_la-RTPTransmitter.Plo
include ./$(DEPDIR)/libsirannon_la-RTSPClient.Plo
include ./$(DEPDIR)/libsirannon_la-RTSPServer.Plo
include ./$(DEPDIR)/libsirannon_la-RTSPSession.Plo
include ./$(DEPDIR)/libsirannon_la-RandomGenerator.Plo
include ./$(DEPDIR)/libsirannon_la-Reader.Plo
include ./$(DEPDIR)/libsirannon_la-Restamp.Plo
include ./$(DEPDIR)/libsirannon_la-SVCClassifier.Plo
include ./$(DEPDIR)/libsirannon_la-Scheduler.Plo
include ./$(DEPDIR)/libsirannon_la-Segmenter.Plo
include ./$(DEPDIR)/libsirannon_la-SirannonException.Plo
include ./$(DEPDIR)/libsirannon_la-SirannonPacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-SirannonPrint.Plo
include ./$(DEPDIR)/libsirannon_la-SirannonSocket.Plo
include ./$(DEPDIR)/libsirannon_la-SirannonTime.Plo
include ./$(DEPDIR)/libsirannon_la-Statistics.Plo
include ./$(DEPDIR)/libsirannon_la-System.Plo
include ./$(DEPDIR)/libsirannon_la-TCPReceiver.Plo
include ./$(DEPDIR)/libsirannon_la-TCPTransmitter.Plo
include ./$(DEPDIR)/libsirannon_la-TSDemultiplexer.Plo
include ./$(DEPDIR)/libsirannon_la-TSMultiplexer.Plo
include ./$(DEPDIR)/libsirannon_la-Transcoder.Plo
include ./$(DEPDIR)/libsirannon_la-TranscoderAudio.Plo
include ./$(DEPDIR)/libsirannon_la-TranscoderSession.Plo
include ./$(DEPDIR)/libsirannon_la-UDPReceiver.Plo
include ./$(DEPDIR)/libsirannon_la-UDPTransmitter.Plo
include ./$(DEPDIR)/libsirannon_la-Unpacketizer.Plo
include ./$(DEPDIR)/libsirannon_la-Url.Plo
include ./$(DEPDIR)/libsirannon_la-Utils.Plo
include ./$(DEPDIR)/libsirannon_la-Writer.Plo
include ./$(DEPDIR)/libsirannon_la-XMLStream.Plo
include ./$(DEPDIR)/libsirannon_la-YUVDisplay.Plo
include ./$(DEPDIR)/libsirannon_la-ffmpeg.Plo
include ./$(DEPDIR)/libsirannon_la-h264_avc.Plo
include ./$(DEPDIR)/libsirannon_la-hmac_sha2.Plo
include ./$(DEPDIR)/libsirannon_la-sdp.Plo
include ./$(DEPDIR)/libsirannon_la-sha2.Plo
include ./$(DEPDIR)/libsirannon_la-sirannon.Plo
include ./$(DEPDIR)/libsirannon_la-test.Plo
include ./$(DEPDIR)/sirannon-AC3Packetizer.Po
include ./$(DEPDIR)/sirannon-AMRPacketizer.Po
include ./$(DEPDIR)/sirannon-AMRUnpacketizer.Po
include ./$(DEPDIR)/sirannon-AMR_WBP_Packetizer.Po
include ./$(DEPDIR)/sirannon-AMR_WBP_Reader.Po
include ./$(DEPDIR)/sirannon-AQUAMonitor.Po
include ./$(DEPDIR)/sirannon-AQUAServer.Po
include ./$(DEPDIR)/sirannon-AQUASession.Po
include ./$(DEPDIR)/sirannon-AQUAWriter.Po
include ./$(DEPDIR)/sirannon-AVCPacketizer.Po
include ./$(DEPDIR)/sirannon-AVCReader.Po
include ./$(DEPDIR)/sirannon-AVCUnpacketizer.Po
include ./$(DEPDIR)/sirannon-Base64.Po
include ./$(DEPDIR)/sirannon-BasicReader.Po
include ./$(DEPDIR)/sirannon-Bits.Po
include ./$(DEPDIR)/sirannon-Block.Po
include ./$(DEPDIR)/sirannon-Boost.Po
include ./$(DEPDIR)/sirannon-Classifier.Po
include ./$(DEPDIR)/sirannon-Communicator.Po
include ./$(DEPDIR)/sirannon-ConnectionInterface.Po
include ./$(DEPDIR)/sirannon-DIORServer.Po
include ./$(DEPDIR)/sirannon-DIORSession.Po
include ./$(DEPDIR)/sirannon-DefaultPacketizer.Po
include ./$(DEPDIR)/sirannon-Example.Po
include ./$(DEPDIR)/sirannon-FFmpegDecoder.Po
include ./$(DEPDIR)/sirannon-FFmpegDemultiplexer.Po
include ./$(DEPDIR)/sirannon-FFmpegMultiplexer.Po
include ./$(DEPDIR)/sirannon-FFmpegReader.Po
include ./$(DEPDIR)/sirannon-FFmpegWriter.Po
include ./$(DEPDIR)/sirannon-FakeReader.Po
include ./$(DEPDIR)/sirannon-FileManager.Po
include ./$(DEPDIR)/sirannon-FileStreamer.Po
include ./$(DEPDIR)/sirannon-Flash.Po
include ./$(DEPDIR)/sirannon-Frame.Po
include ./$(DEPDIR)/sirannon-FrameTagger.Po
include ./$(DEPDIR)/sirannon-FrameTransformer.Po
include ./$(DEPDIR)/sirannon-GOPSplitter.Po
include ./$(DEPDIR)/sirannon-GigabitTransmitter.Po
include ./$(DEPDIR)/sirannon-HTTPClient.Po
include ./$(DEPDIR)/sirannon-HTTPConnection.Po
include ./$(DEPDIR)/sirannon-HTTPServer.Po
include ./$(DEPDIR)/sirannon-HTTPSession.Po
include ./$(DEPDIR)/sirannon-IConcealClassifier.Po
include ./$(DEPDIR)/sirannon-IPAddress.Po
include ./$(DEPDIR)/sirannon-Link.Po
include ./$(DEPDIR)/sirannon-LiveReader.Po
include ./$(DEPDIR)/sirannon-Logger.Po
include ./$(DEPDIR)/sirannon-MP2Packetizer.Po
include ./$(DEPDIR)/sirannon-MP2Unpacketizer.Po
include ./$(DEPDIR)/sirannon-MP4Packetizer.Po
include ./$(DEPDIR)/sirannon-MP4Unpacketizer.Po
include ./$(DEPDIR)/sirannon-MediaDescriptor.Po
include ./$(DEPDIR)/sirannon-MediaPacket.Po
include ./$(DEPDIR)/sirannon-MediaProcessor.Po
include ./$(DEPDIR)/sirannon-MediaServer.Po
include ./$(DEPDIR)/sirannon-MediaSession.Po
include ./$(DEPDIR)/sirannon-MemoryManager.Po
include ./$(DEPDIR)/sirannon-Multiplexer.Po
include ./$(DEPDIR)/sirannon-OSSupport.Po
include ./$(DEPDIR)/sirannon-PESPacketizer.Po
include ./$(DEPDIR)/sirannon-PESUnpacketizer.Po
include ./$(DEPDIR)/sirannon-Packetizer.Po
include ./$(DEPDIR)/sirannon-PcapWriter.Po
include ./$(DEPDIR)/sirannon-PortManager.Po
include ./$(DEPDIR)/sirannon-ProcessorManager.Po
include ./$(DEPDIR)/sirannon-Proxy.Po
include ./$(DEPDIR)/sirannon-ProxyStreamer.Po
include ./$(DEPDIR)/sirannon-RTMPChunkStream.Po
include ./$(DEPDIR)/sirannon-RTMPClient.Po
include ./$(DEPDIR)/sirannon-RTMPHandshake.Po
include ./$(DEPDIR)/sirannon-RTMPPacketizer.Po
include ./$(DEPDIR)/sirannon-RTMPServer.Po
include ./$(DEPDIR)/sirannon-RTMPSession.Po
include ./$(DEPDIR)/sirannon-RTMPTClient.Po
include ./$(DEPDIR)/sirannon-RTMPTConnection.Po
include ./$(DEPDIR)/sirannon-RTMPTServer.Po
include ./$(DEPDIR)/sirannon-RTMP_AMF.Po
include ./$(DEPDIR)/sirannon-RTPReceiver.Po
include ./$(DEPDIR)/sirannon-RTPTransmitter.Po
include ./$(DEPDIR)/sirannon-RTSPClient.Po
include ./$(DEPDIR)/sirannon-RTSPServer.Po
include ./$(DEPDIR)/sirannon-RTSPSession.Po
include ./$(DEPDIR)/sirannon-RandomGenerator.Po
include ./$(DEPDIR)/sirannon-Reader.Po
include ./$(DEPDIR)/sirannon-Restamp.Po
include ./$(DEPDIR)/sirannon-SVCClassifier.Po
include ./$(DEPDIR)/sirannon-Scheduler.Po
include ./$(DEPDIR)/sirannon-Segmenter.Po
include ./$(DEPDIR)/sirannon-SirannonException.Po
include ./$(DEPDIR)/sirannon-SirannonPacketizer.Po
include ./$(DEPDIR)/sirannon-SirannonPrint.Po
include ./$(DEPDIR)/sirannon-SirannonSocket.Po
include ./$(DEPDIR)/sirannon-SirannonTime.Po
include ./$(DEPDIR)/sirannon-Statistics.Po
include ./$(DEPDIR)/sirannon-System.Po
include ./$(DEPDIR)/sirannon-TCPReceiver.Po
include ./$(DEPDIR)/sirannon-TCPTransmitter.Po
include ./$(DEPDIR)/sirannon-TSDemultiplexer.Po
include ./$(DEPDIR)/sirannon-TSMultiplexer.Po
include ./$(DEPDIR)/sirannon-Transcoder.Po
include ./$(DEPDIR)/sirannon-TranscoderAudio.Po
include ./$(DEPDIR)/sirannon-TranscoderSession.Po
include ./$(DEPDIR)/sirannon-UDPReceiver.Po
include ./$(DEPDIR)/sirannon-UDPTransmitter.Po
include ./$(DEPDIR)/sirannon-Unpacketizer.Po
include ./$(DEPDIR)/sirannon-Url.Po
include ./$(DEPDIR)/sirannon-Utils.Po
include ./$(DEPDIR)/sirannon-Writer.Po
include ./$(DEPDIR)/sirannon-XMLStream.Po
include ./$(DEPDIR)/sirannon-YUVDisplay.Po
include ./$(DEPDIR)/sirannon-ffmpeg.Po
include ./$(DEPDIR)/sirannon-h264_avc.Po
include ./$(DEPDIR)/sirannon-hmac_sha2.Po
include ./$(DEPDIR)/sirannon-sdp.Po
include ./$(DEPDIR)/sirannon-sha2.Po
include ./$(DEPDIR)/sirannon-sirannon.Po
include ./$(DEPDIR)/sirannon-test.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libsirannon_la-Proxy.lo: HighLevel/Proxy.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Proxy.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Proxy.Tpo -c -o libsirannon_la-Proxy.lo `test -f 'HighLevel/Proxy.cpp' || echo '$(srcdir)/'`HighLevel/Proxy.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Proxy.Tpo $(DEPDIR)/libsirannon_la-Proxy.Plo
#	source='HighLevel/Proxy.cpp' object='libsirannon_la-Proxy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Proxy.lo `test -f 'HighLevel/Proxy.cpp' || echo '$(srcdir)/'`HighLevel/Proxy.cpp

libsirannon_la-FileStreamer.lo: HighLevel/FileStreamer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-FileStreamer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-FileStreamer.Tpo -c -o libsirannon_la-FileStreamer.lo `test -f 'HighLevel/FileStreamer.cpp' || echo '$(srcdir)/'`HighLevel/FileStreamer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-FileStreamer.Tpo $(DEPDIR)/libsirannon_la-FileStreamer.Plo
#	source='HighLevel/FileStreamer.cpp' object='libsirannon_la-FileStreamer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-FileStreamer.lo `test -f 'HighLevel/FileStreamer.cpp' || echo '$(srcdir)/'`HighLevel/FileStreamer.cpp

libsirannon_la-TranscoderSession.lo: HighLevel/TranscoderSession.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-TranscoderSession.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-TranscoderSession.Tpo -c -o libsirannon_la-TranscoderSession.lo `test -f 'HighLevel/TranscoderSession.cpp' || echo '$(srcdir)/'`HighLevel/TranscoderSession.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-TranscoderSession.Tpo $(DEPDIR)/libsirannon_la-TranscoderSession.Plo
#	source='HighLevel/TranscoderSession.cpp' object='libsirannon_la-TranscoderSession.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-TranscoderSession.lo `test -f 'HighLevel/TranscoderSession.cpp' || echo '$(srcdir)/'`HighLevel/TranscoderSession.cpp

libsirannon_la-ProxyStreamer.lo: HighLevel/ProxyStreamer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-ProxyStreamer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-ProxyStreamer.Tpo -c -o libsirannon_la-ProxyStreamer.lo `test -f 'HighLevel/ProxyStreamer.cpp' || echo '$(srcdir)/'`HighLevel/ProxyStreamer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-ProxyStreamer.Tpo $(DEPDIR)/libsirannon_la-ProxyStreamer.Plo
#	source='HighLevel/ProxyStreamer.cpp' object='libsirannon_la-ProxyStreamer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-ProxyStreamer.lo `test -f 'HighLevel/ProxyStreamer.cpp' || echo '$(srcdir)/'`HighLevel/ProxyStreamer.cpp

libsirannon_la-Segmenter.lo: HighLevel/Segmenter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Segmenter.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Segmenter.Tpo -c -o libsirannon_la-Segmenter.lo `test -f 'HighLevel/Segmenter.cpp' || echo '$(srcdir)/'`HighLevel/Segmenter.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Segmenter.Tpo $(DEPDIR)/libsirannon_la-Segmenter.Plo
#	source='HighLevel/Segmenter.cpp' object='libsirannon_la-Segmenter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Segmenter.lo `test -f 'HighLevel/Segmenter.cpp' || echo '$(srcdir)/'`HighLevel/Segmenter.cpp

libsirannon_la-Reader.lo: Reader/Reader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Reader.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Reader.Tpo -c -o libsirannon_la-Reader.lo `test -f 'Reader/Reader.cpp' || echo '$(srcdir)/'`Reader/Reader.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Reader.Tpo $(DEPDIR)/libsirannon_la-Reader.Plo
#	source='Reader/Reader.cpp' object='libsirannon_la-Reader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Reader.lo `test -f 'Reader/Reader.cpp' || echo '$(srcdir)/'`Reader/Reader.cpp

libsirannon_la-FFmpegReader.lo: Reader/FFmpegReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-FFmpegReader.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-FFmpegReader.Tpo -c -o libsirannon_la-FFmpegReader.lo `test -f 'Reader/FFmpegReader.cpp' || echo '$(srcdir)/'`Reader/FFmpegReader.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-FFmpegReader.Tpo $(DEPDIR)/libsirannon_la-FFmpegReader.Plo
#	source='Reader/FFmpegReader.cpp' object='libsirannon_la-FFmpegReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-FFmpegReader.lo `test -f 'Reader/FFmpegReader.cpp' || echo '$(srcdir)/'`Reader/FFmpegReader.cpp

libsirannon_la-AVCReader.lo: Reader/AVCReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AVCReader.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AVCReader.Tpo -c -o libsirannon_la-AVCReader.lo `test -f 'Reader/AVCReader.cpp' || echo '$(srcdir)/'`Reader/AVCReader.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AVCReader.Tpo $(DEPDIR)/libsirannon_la-AVCReader.Plo
#	source='Reader/AVCReader.cpp' object='libsirannon_la-AVCReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AVCReader.lo `test -f 'Reader/AVCReader.cpp' || echo '$(srcdir)/'`Reader/AVCReader.cpp

libsirannon_la-BasicReader.lo: Reader/BasicReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-BasicReader.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-BasicReader.Tpo -c -o libsirannon_la-BasicReader.lo `test -f 'Reader/BasicReader.cpp' || echo '$(srcdir)/'`Reader/BasicReader.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-BasicReader.Tpo $(DEPDIR)/libsirannon_la-BasicReader.Plo
#	source='Reader/BasicReader.cpp' object='libsirannon_la-BasicReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-BasicReader.lo `test -f 'Reader/BasicReader.cpp' || echo '$(srcdir)/'`Reader/BasicReader.cpp

libsirannon_la-LiveReader.lo: Reader/LiveReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-LiveReader.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-LiveReader.Tpo -c -o libsirannon_la-LiveReader.lo `test -f 'Reader/LiveReader.cpp' || echo '$(srcdir)/'`Reader/LiveReader.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-LiveReader.Tpo $(DEPDIR)/libsirannon_la-LiveReader.Plo
#	source='Reader/LiveReader.cpp' object='libsirannon_la-LiveReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-LiveReader.lo `test -f 'Reader/LiveReader.cpp' || echo '$(srcdir)/'`Reader/LiveReader.cpp

libsirannon_la-AMR_WBP_Reader.lo: Reader/AMR_WBP_Reader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AMR_WBP_Reader.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AMR_WBP_Reader.Tpo -c -o libsirannon_la-AMR_WBP_Reader.lo `test -f 'Reader/AMR_WBP_Reader.cpp' || echo '$(srcdir)/'`Reader/AMR_WBP_Reader.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AMR_WBP_Reader.Tpo $(DEPDIR)/libsirannon_la-AMR_WBP_Reader.Plo
#	source='Reader/AMR_WBP_Reader.cpp' object='libsirannon_la-AMR_WBP_Reader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AMR_WBP_Reader.lo `test -f 'Reader/AMR_WBP_Reader.cpp' || echo '$(srcdir)/'`Reader/AMR_WBP_Reader.cpp

libsirannon_la-FakeReader.lo: Reader/FakeReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-FakeReader.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-FakeReader.Tpo -c -o libsirannon_la-FakeReader.lo `test -f 'Reader/FakeReader.cpp' || echo '$(srcdir)/'`Reader/FakeReader.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-FakeReader.Tpo $(DEPDIR)/libsirannon_la-FakeReader.Plo
#	source='Reader/FakeReader.cpp' object='libsirannon_la-FakeReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-FakeReader.lo `test -f 'Reader/FakeReader.cpp' || echo '$(srcdir)/'`Reader/FakeReader.cpp

libsirannon_la-Packetizer.lo: Packetizer/Packetizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Packetizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Packetizer.Tpo -c -o libsirannon_la-Packetizer.lo `test -f 'Packetizer/Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/Packetizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Packetizer.Tpo $(DEPDIR)/libsirannon_la-Packetizer.Plo
#	source='Packetizer/Packetizer.cpp' object='libsirannon_la-Packetizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Packetizer.lo `test -f 'Packetizer/Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/Packetizer.cpp

libsirannon_la-Unpacketizer.lo: Packetizer/Unpacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Unpacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Unpacketizer.Tpo -c -o libsirannon_la-Unpacketizer.lo `test -f 'Packetizer/Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/Unpacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Unpacketizer.Tpo $(DEPDIR)/libsirannon_la-Unpacketizer.Plo
#	source='Packetizer/Unpacketizer.cpp' object='libsirannon_la-Unpacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Unpacketizer.lo `test -f 'Packetizer/Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/Unpacketizer.cpp

libsirannon_la-PESPacketizer.lo: Packetizer/PESPacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-PESPacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-PESPacketizer.Tpo -c -o libsirannon_la-PESPacketizer.lo `test -f 'Packetizer/PESPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/PESPacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-PESPacketizer.Tpo $(DEPDIR)/libsirannon_la-PESPacketizer.Plo
#	source='Packetizer/PESPacketizer.cpp' object='libsirannon_la-PESPacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-PESPacketizer.lo `test -f 'Packetizer/PESPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/PESPacketizer.cpp

libsirannon_la-MP2Packetizer.lo: Packetizer/MP2Packetizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-MP2Packetizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-MP2Packetizer.Tpo -c -o libsirannon_la-MP2Packetizer.lo `test -f 'Packetizer/MP2Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/MP2Packetizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-MP2Packetizer.Tpo $(DEPDIR)/libsirannon_la-MP2Packetizer.Plo
#	source='Packetizer/MP2Packetizer.cpp' object='libsirannon_la-MP2Packetizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-MP2Packetizer.lo `test -f 'Packetizer/MP2Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/MP2Packetizer.cpp

libsirannon_la-MP4Packetizer.lo: Packetizer/MP4Packetizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-MP4Packetizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-MP4Packetizer.Tpo -c -o libsirannon_la-MP4Packetizer.lo `test -f 'Packetizer/MP4Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/MP4Packetizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-MP4Packetizer.Tpo $(DEPDIR)/libsirannon_la-MP4Packetizer.Plo
#	source='Packetizer/MP4Packetizer.cpp' object='libsirannon_la-MP4Packetizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-MP4Packetizer.lo `test -f 'Packetizer/MP4Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/MP4Packetizer.cpp

libsirannon_la-AVCPacketizer.lo: Packetizer/AVCPacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AVCPacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AVCPacketizer.Tpo -c -o libsirannon_la-AVCPacketizer.lo `test -f 'Packetizer/AVCPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AVCPacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AVCPacketizer.Tpo $(DEPDIR)/libsirannon_la-AVCPacketizer.Plo
#	source='Packetizer/AVCPacketizer.cpp' object='libsirannon_la-AVCPacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AVCPacketizer.lo `test -f 'Packetizer/AVCPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AVCPacketizer.cpp

libsirannon_la-AMRPacketizer.lo: Packetizer/AMRPacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AMRPacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AMRPacketizer.Tpo -c -o libsirannon_la-AMRPacketizer.lo `test -f 'Packetizer/AMRPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AMRPacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AMRPacketizer.Tpo $(DEPDIR)/libsirannon_la-AMRPacketizer.Plo
#	source='Packetizer/AMRPacketizer.cpp' object='libsirannon_la-AMRPacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AMRPacketizer.lo `test -f 'Packetizer/AMRPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AMRPacketizer.cpp

libsirannon_la-AMR_WBP_Packetizer.lo: Packetizer/AMR_WBP_Packetizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AMR_WBP_Packetizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AMR_WBP_Packetizer.Tpo -c -o libsirannon_la-AMR_WBP_Packetizer.lo `test -f 'Packetizer/AMR_WBP_Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/AMR_WBP_Packetizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AMR_WBP_Packetizer.Tpo $(DEPDIR)/libsirannon_la-AMR_WBP_Packetizer.Plo
#	source='Packetizer/AMR_WBP_Packetizer.cpp' object='libsirannon_la-AMR_WBP_Packetizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AMR_WBP_Packetizer.lo `test -f 'Packetizer/AMR_WBP_Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/AMR_WBP_Packetizer.cpp

libsirannon_la-AC3Packetizer.lo: Packetizer/AC3Packetizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AC3Packetizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AC3Packetizer.Tpo -c -o libsirannon_la-AC3Packetizer.lo `test -f 'Packetizer/AC3Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/AC3Packetizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AC3Packetizer.Tpo $(DEPDIR)/libsirannon_la-AC3Packetizer.Plo
#	source='Packetizer/AC3Packetizer.cpp' object='libsirannon_la-AC3Packetizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AC3Packetizer.lo `test -f 'Packetizer/AC3Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/AC3Packetizer.cpp

libsirannon_la-SirannonPacketizer.lo: Packetizer/SirannonPacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-SirannonPacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-SirannonPacketizer.Tpo -c -o libsirannon_la-SirannonPacketizer.lo `test -f 'Packetizer/SirannonPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/SirannonPacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-SirannonPacketizer.Tpo $(DEPDIR)/libsirannon_la-SirannonPacketizer.Plo
#	source='Packetizer/SirannonPacketizer.cpp' object='libsirannon_la-SirannonPacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-SirannonPacketizer.lo `test -f 'Packetizer/SirannonPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/SirannonPacketizer.cpp

libsirannon_la-AVCUnpacketizer.lo: Packetizer/AVCUnpacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AVCUnpacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AVCUnpacketizer.Tpo -c -o libsirannon_la-AVCUnpacketizer.lo `test -f 'Packetizer/AVCUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AVCUnpacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AVCUnpacketizer.Tpo $(DEPDIR)/libsirannon_la-AVCUnpacketizer.Plo
#	source='Packetizer/AVCUnpacketizer.cpp' object='libsirannon_la-AVCUnpacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AVCUnpacketizer.lo `test -f 'Packetizer/AVCUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AVCUnpacketizer.cpp

libsirannon_la-MP4Unpacketizer.lo: Packetizer/MP4Unpacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-MP4Unpacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-MP4Unpacketizer.Tpo -c -o libsirannon_la-MP4Unpacketizer.lo `test -f 'Packetizer/MP4Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/MP4Unpacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-MP4Unpacketizer.Tpo $(DEPDIR)/libsirannon_la-MP4Unpacketizer.Plo
#	source='Packetizer/MP4Unpacketizer.cpp' object='libsirannon_la-MP4Unpacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-MP4Unpacketizer.lo `test -f 'Packetizer/MP4Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/MP4Unpacketizer.cpp

libsirannon_la-PESUnpacketizer.lo: Packetizer/PESUnpacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-PESUnpacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-PESUnpacketizer.Tpo -c -o libsirannon_la-PESUnpacketizer.lo `test -f 'Packetizer/PESUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/PESUnpacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-PESUnpacketizer.Tpo $(DEPDIR)/libsirannon_la-PESUnpacketizer.Plo
#	source='Packetizer/PESUnpacketizer.cpp' object='libsirannon_la-PESUnpacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-PESUnpacketizer.lo `test -f 'Packetizer/PESUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/PESUnpacketizer.cpp

libsirannon_la-MP2Unpacketizer.lo: Packetizer/MP2Unpacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-MP2Unpacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-MP2Unpacketizer.Tpo -c -o libsirannon_la-MP2Unpacketizer.lo `test -f 'Packetizer/MP2Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/MP2Unpacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-MP2Unpacketizer.Tpo $(DEPDIR)/libsirannon_la-MP2Unpacketizer.Plo
#	source='Packetizer/MP2Unpacketizer.cpp' object='libsirannon_la-MP2Unpacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-MP2Unpacketizer.lo `test -f 'Packetizer/MP2Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/MP2Unpacketizer.cpp

libsirannon_la-AMRUnpacketizer.lo: Packetizer/AMRUnpacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AMRUnpacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AMRUnpacketizer.Tpo -c -o libsirannon_la-AMRUnpacketizer.lo `test -f 'Packetizer/AMRUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AMRUnpacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AMRUnpacketizer.Tpo $(DEPDIR)/libsirannon_la-AMRUnpacketizer.Plo
#	source='Packetizer/AMRUnpacketizer.cpp' object='libsirannon_la-AMRUnpacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AMRUnpacketizer.lo `test -f 'Packetizer/AMRUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AMRUnpacketizer.cpp

libsirannon_la-DefaultPacketizer.lo: Packetizer/DefaultPacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-DefaultPacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-DefaultPacketizer.Tpo -c -o libsirannon_la-DefaultPacketizer.lo `test -f 'Packetizer/DefaultPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/DefaultPacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-DefaultPacketizer.Tpo $(DEPDIR)/libsirannon_la-DefaultPacketizer.Plo
#	source='Packetizer/DefaultPacketizer.cpp' object='libsirannon_la-DefaultPacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-DefaultPacketizer.lo `test -f 'Packetizer/DefaultPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/DefaultPacketizer.cpp

libsirannon_la-Multiplexer.lo: Multiplexer/Multiplexer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Multiplexer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Multiplexer.Tpo -c -o libsirannon_la-Multiplexer.lo `test -f 'Multiplexer/Multiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/Multiplexer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Multiplexer.Tpo $(DEPDIR)/libsirannon_la-Multiplexer.Plo
#	source='Multiplexer/Multiplexer.cpp' object='libsirannon_la-Multiplexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Multiplexer.lo `test -f 'Multiplexer/Multiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/Multiplexer.cpp

libsirannon_la-TSMultiplexer.lo: Multiplexer/TSMultiplexer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-TSMultiplexer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-TSMultiplexer.Tpo -c -o libsirannon_la-TSMultiplexer.lo `test -f 'Multiplexer/TSMultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/TSMultiplexer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-TSMultiplexer.Tpo $(DEPDIR)/libsirannon_la-TSMultiplexer.Plo
#	source='Multiplexer/TSMultiplexer.cpp' object='libsirannon_la-TSMultiplexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-TSMultiplexer.lo `test -f 'Multiplexer/TSMultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/TSMultiplexer.cpp

libsirannon_la-TSDemultiplexer.lo: Multiplexer/TSDemultiplexer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-TSDemultiplexer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-TSDemultiplexer.Tpo -c -o libsirannon_la-TSDemultiplexer.lo `test -f 'Multiplexer/TSDemultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/TSDemultiplexer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-TSDemultiplexer.Tpo $(DEPDIR)/libsirannon_la-TSDemultiplexer.Plo
#	source='Multiplexer/TSDemultiplexer.cpp' object='libsirannon_la-TSDemultiplexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-TSDemultiplexer.lo `test -f 'Multiplexer/TSDemultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/TSDemultiplexer.cpp

libsirannon_la-FFmpegMultiplexer.lo: Multiplexer/FFmpegMultiplexer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-FFmpegMultiplexer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-FFmpegMultiplexer.Tpo -c -o libsirannon_la-FFmpegMultiplexer.lo `test -f 'Multiplexer/FFmpegMultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/FFmpegMultiplexer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-FFmpegMultiplexer.Tpo $(DEPDIR)/libsirannon_la-FFmpegMultiplexer.Plo
#	source='Multiplexer/FFmpegMultiplexer.cpp' object='libsirannon_la-FFmpegMultiplexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-FFmpegMultiplexer.lo `test -f 'Multiplexer/FFmpegMultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/FFmpegMultiplexer.cpp

libsirannon_la-FFmpegDemultiplexer.lo: Multiplexer/FFmpegDemultiplexer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-FFmpegDemultiplexer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-FFmpegDemultiplexer.Tpo -c -o libsirannon_la-FFmpegDemultiplexer.lo `test -f 'Multiplexer/FFmpegDemultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/FFmpegDemultiplexer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-FFmpegDemultiplexer.Tpo $(DEPDIR)/libsirannon_la-FFmpegDemultiplexer.Plo
#	source='Multiplexer/FFmpegDemultiplexer.cpp' object='libsirannon_la-FFmpegDemultiplexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-FFmpegDemultiplexer.lo `test -f 'Multiplexer/FFmpegDemultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/FFmpegDemultiplexer.cpp

libsirannon_la-Scheduler.lo: Scheduler/Scheduler.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Scheduler.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Scheduler.Tpo -c -o libsirannon_la-Scheduler.lo `test -f 'Scheduler/Scheduler.cpp' || echo '$(srcdir)/'`Scheduler/Scheduler.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Scheduler.Tpo $(DEPDIR)/libsirannon_la-Scheduler.Plo
#	source='Scheduler/Scheduler.cpp' object='libsirannon_la-Scheduler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Scheduler.lo `test -f 'Scheduler/Scheduler.cpp' || echo '$(srcdir)/'`Scheduler/Scheduler.cpp

libsirannon_la-Communicator.lo: Communicator/Communicator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Communicator.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Communicator.Tpo -c -o libsirannon_la-Communicator.lo `test -f 'Communicator/Communicator.cpp' || echo '$(srcdir)/'`Communicator/Communicator.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Communicator.Tpo $(DEPDIR)/libsirannon_la-Communicator.Plo
#	source='Communicator/Communicator.cpp' object='libsirannon_la-Communicator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Communicator.lo `test -f 'Communicator/Communicator.cpp' || echo '$(srcdir)/'`Communicator/Communicator.cpp

libsirannon_la-MediaServer.lo: Communicator/MediaServer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-MediaServer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-MediaServer.Tpo -c -o libsirannon_la-MediaServer.lo `test -f 'Communicator/MediaServer.cpp' || echo '$(srcdir)/'`Communicator/MediaServer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-MediaServer.Tpo $(DEPDIR)/libsirannon_la-MediaServer.Plo
#	source='Communicator/MediaServer.cpp' object='libsirannon_la-MediaServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-MediaServer.lo `test -f 'Communicator/MediaServer.cpp' || echo '$(srcdir)/'`Communicator/MediaServer.cpp

libsirannon_la-MediaSession.lo: Communicator/MediaSession.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-MediaSession.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-MediaSession.Tpo -c -o libsirannon_la-MediaSession.lo `test -f 'Communicator/MediaSession.cpp' || echo '$(srcdir)/'`Communicator/MediaSession.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-MediaSession.Tpo $(DEPDIR)/libsirannon_la-MediaSession.Plo
#	source='Communicator/MediaSession.cpp' object='libsirannon_la-MediaSession.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-MediaSession.lo `test -f 'Communicator/MediaSession.cpp' || echo '$(srcdir)/'`Communicator/MediaSession.cpp

libsirannon_la-RTPTransmitter.lo: Communicator/RTPTransmitter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTPTransmitter.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTPTransmitter.Tpo -c -o libsirannon_la-RTPTransmitter.lo `test -f 'Communicator/RTPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/RTPTransmitter.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTPTransmitter.Tpo $(DEPDIR)/libsirannon_la-RTPTransmitter.Plo
#	source='Communicator/RTPTransmitter.cpp' object='libsirannon_la-RTPTransmitter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTPTransmitter.lo `test -f 'Communicator/RTPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/RTPTransmitter.cpp

libsirannon_la-RTPReceiver.lo: Communicator/RTPReceiver.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTPReceiver.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTPReceiver.Tpo -c -o libsirannon_la-RTPReceiver.lo `test -f 'Communicator/RTPReceiver.cpp' || echo '$(srcdir)/'`Communicator/RTPReceiver.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTPReceiver.Tpo $(DEPDIR)/libsirannon_la-RTPReceiver.Plo
#	source='Communicator/RTPReceiver.cpp' object='libsirannon_la-RTPReceiver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTPReceiver.lo `test -f 'Communicator/RTPReceiver.cpp' || echo '$(srcdir)/'`Communicator/RTPReceiver.cpp

libsirannon_la-UDPTransmitter.lo: Communicator/UDPTransmitter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-UDPTransmitter.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-UDPTransmitter.Tpo -c -o libsirannon_la-UDPTransmitter.lo `test -f 'Communicator/UDPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/UDPTransmitter.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-UDPTransmitter.Tpo $(DEPDIR)/libsirannon_la-UDPTransmitter.Plo
#	source='Communicator/UDPTransmitter.cpp' object='libsirannon_la-UDPTransmitter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-UDPTransmitter.lo `test -f 'Communicator/UDPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/UDPTransmitter.cpp

libsirannon_la-UDPReceiver.lo: Communicator/UDPReceiver.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-UDPReceiver.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-UDPReceiver.Tpo -c -o libsirannon_la-UDPReceiver.lo `test -f 'Communicator/UDPReceiver.cpp' || echo '$(srcdir)/'`Communicator/UDPReceiver.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-UDPReceiver.Tpo $(DEPDIR)/libsirannon_la-UDPReceiver.Plo
#	source='Communicator/UDPReceiver.cpp' object='libsirannon_la-UDPReceiver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-UDPReceiver.lo `test -f 'Communicator/UDPReceiver.cpp' || echo '$(srcdir)/'`Communicator/UDPReceiver.cpp

libsirannon_la-TCPTransmitter.lo: Communicator/TCPTransmitter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-TCPTransmitter.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-TCPTransmitter.Tpo -c -o libsirannon_la-TCPTransmitter.lo `test -f 'Communicator/TCPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/TCPTransmitter.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-TCPTransmitter.Tpo $(DEPDIR)/libsirannon_la-TCPTransmitter.Plo
#	source='Communicator/TCPTransmitter.cpp' object='libsirannon_la-TCPTransmitter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-TCPTransmitter.lo `test -f 'Communicator/TCPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/TCPTransmitter.cpp

libsirannon_la-TCPReceiver.lo: Communicator/TCPReceiver.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-TCPReceiver.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-TCPReceiver.Tpo -c -o libsirannon_la-TCPReceiver.lo `test -f 'Communicator/TCPReceiver.cpp' || echo '$(srcdir)/'`Communicator/TCPReceiver.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-TCPReceiver.Tpo $(DEPDIR)/libsirannon_la-TCPReceiver.Plo
#	source='Communicator/TCPReceiver.cpp' object='libsirannon_la-TCPReceiver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-TCPReceiver.lo `test -f 'Communicator/TCPReceiver.cpp' || echo '$(srcdir)/'`Communicator/TCPReceiver.cpp

libsirannon_la-GigabitTransmitter.lo: Communicator/GigabitTransmitter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-GigabitTransmitter.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-GigabitTransmitter.Tpo -c -o libsirannon_la-GigabitTransmitter.lo `test -f 'Communicator/GigabitTransmitter.cpp' || echo '$(srcdir)/'`Communicator/GigabitTransmitter.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-GigabitTransmitter.Tpo $(DEPDIR)/libsirannon_la-GigabitTransmitter.Plo
#	source='Communicator/GigabitTransmitter.cpp' object='libsirannon_la-GigabitTransmitter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-GigabitTransmitter.lo `test -f 'Communicator/GigabitTransmitter.cpp' || echo '$(srcdir)/'`Communicator/GigabitTransmitter.cpp

libsirannon_la-HTTPConnection.lo: Communicator/HTTP/HTTPConnection.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-HTTPConnection.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-HTTPConnection.Tpo -c -o libsirannon_la-HTTPConnection.lo `test -f 'Communicator/HTTP/HTTPConnection.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPConnection.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-HTTPConnection.Tpo $(DEPDIR)/libsirannon_la-HTTPConnection.Plo
#	source='Communicator/HTTP/HTTPConnection.cpp' object='libsirannon_la-HTTPConnection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-HTTPConnection.lo `test -f 'Communicator/HTTP/HTTPConnection.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPConnection.cpp

libsirannon_la-HTTPServer.lo: Communicator/HTTP/HTTPServer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-HTTPServer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-HTTPServer.Tpo -c -o libsirannon_la-HTTPServer.lo `test -f 'Communicator/HTTP/HTTPServer.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPServer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-HTTPServer.Tpo $(DEPDIR)/libsirannon_la-HTTPServer.Plo
#	source='Communicator/HTTP/HTTPServer.cpp' object='libsirannon_la-HTTPServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-HTTPServer.lo `test -f 'Communicator/HTTP/HTTPServer.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPServer.cpp

libsirannon_la-HTTPSession.lo: Communicator/HTTP/HTTPSession.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-HTTPSession.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-HTTPSession.Tpo -c -o libsirannon_la-HTTPSession.lo `test -f 'Communicator/HTTP/HTTPSession.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPSession.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-HTTPSession.Tpo $(DEPDIR)/libsirannon_la-HTTPSession.Plo
#	source='Communicator/HTTP/HTTPSession.cpp' object='libsirannon_la-HTTPSession.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-HTTPSession.lo `test -f 'Communicator/HTTP/HTTPSession.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPSession.cpp

libsirannon_la-HTTPClient.lo: Communicator/HTTP/HTTPClient.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-HTTPClient.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-HTTPClient.Tpo -c -o libsirannon_la-HTTPClient.lo `test -f 'Communicator/HTTP/HTTPClient.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPClient.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-HTTPClient.Tpo $(DEPDIR)/libsirannon_la-HTTPClient.Plo
#	source='Communicator/HTTP/HTTPClient.cpp' object='libsirannon_la-HTTPClient.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-HTTPClient.lo `test -f 'Communicator/HTTP/HTTPClient.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPClient.cpp

libsirannon_la-RTSPSession.lo: Communicator/RTSP/RTSPSession.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTSPSession.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTSPSession.Tpo -c -o libsirannon_la-RTSPSession.lo `test -f 'Communicator/RTSP/RTSPSession.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPSession.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTSPSession.Tpo $(DEPDIR)/libsirannon_la-RTSPSession.Plo
#	source='Communicator/RTSP/RTSPSession.cpp' object='libsirannon_la-RTSPSession.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTSPSession.lo `test -f 'Communicator/RTSP/RTSPSession.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPSession.cpp

libsirannon_la-RTSPServer.lo: Communicator/RTSP/RTSPServer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTSPServer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTSPServer.Tpo -c -o libsirannon_la-RTSPServer.lo `test -f 'Communicator/RTSP/RTSPServer.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPServer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTSPServer.Tpo $(DEPDIR)/libsirannon_la-RTSPServer.Plo
#	source='Communicator/RTSP/RTSPServer.cpp' object='libsirannon_la-RTSPServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTSPServer.lo `test -f 'Communicator/RTSP/RTSPServer.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPServer.cpp

libsirannon_la-RTSPClient.lo: Communicator/RTSP/RTSPClient.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTSPClient.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTSPClient.Tpo -c -o libsirannon_la-RTSPClient.lo `test -f 'Communicator/RTSP/RTSPClient.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPClient.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTSPClient.Tpo $(DEPDIR)/libsirannon_la-RTSPClient.Plo
#	source='Communicator/RTSP/RTSPClient.cpp' object='libsirannon_la-RTSPClient.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTSPClient.lo `test -f 'Communicator/RTSP/RTSPClient.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPClient.cpp

libsirannon_la-RTMP_AMF.lo: Communicator/RTMP/RTMP_AMF.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTMP_AMF.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTMP_AMF.Tpo -c -o libsirannon_la-RTMP_AMF.lo `test -f 'Communicator/RTMP/RTMP_AMF.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMP_AMF.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTMP_AMF.Tpo $(DEPDIR)/libsirannon_la-RTMP_AMF.Plo
#	source='Communicator/RTMP/RTMP_AMF.cpp' object='libsirannon_la-RTMP_AMF.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTMP_AMF.lo `test -f 'Communicator/RTMP/RTMP_AMF.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMP_AMF.cpp

libsirannon_la-RTMPHandshake.lo: Communicator/RTMP/RTMPHandshake.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTMPHandshake.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTMPHandshake.Tpo -c -o libsirannon_la-RTMPHandshake.lo `test -f 'Communicator/RTMP/RTMPHandshake.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPHandshake.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTMPHandshake.Tpo $(DEPDIR)/libsirannon_la-RTMPHandshake.Plo
#	source='Communicator/RTMP/RTMPHandshake.cpp' object='libsirannon_la-RTMPHandshake.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTMPHandshake.lo `test -f 'Communicator/RTMP/RTMPHandshake.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPHandshake.cpp

libsirannon_la-RTMPChunkStream.lo: Communicator/RTMP/RTMPChunkStream.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTMPChunkStream.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTMPChunkStream.Tpo -c -o libsirannon_la-RTMPChunkStream.lo `test -f 'Communicator/RTMP/RTMPChunkStream.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPChunkStream.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTMPChunkStream.Tpo $(DEPDIR)/libsirannon_la-RTMPChunkStream.Plo
#	source='Communicator/RTMP/RTMPChunkStream.cpp' object='libsirannon_la-RTMPChunkStream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTMPChunkStream.lo `test -f 'Communicator/RTMP/RTMPChunkStream.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPChunkStream.cpp

libsirannon_la-RTMPSession.lo: Communicator/RTMP/RTMPSession.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTMPSession.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTMPSession.Tpo -c -o libsirannon_la-RTMPSession.lo `test -f 'Communicator/RTMP/RTMPSession.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPSession.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTMPSession.Tpo $(DEPDIR)/libsirannon_la-RTMPSession.Plo
#	source='Communicator/RTMP/RTMPSession.cpp' object='libsirannon_la-RTMPSession.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTMPSession.lo `test -f 'Communicator/RTMP/RTMPSession.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPSession.cpp

libsirannon_la-RTMPTConnection.lo: Communicator/RTMP/RTMPTConnection.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTMPTConnection.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTMPTConnection.Tpo -c -o libsirannon_la-RTMPTConnection.lo `test -f 'Communicator/RTMP/RTMPTConnection.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTConnection.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTMPTConnection.Tpo $(DEPDIR)/libsirannon_la-RTMPTConnection.Plo
#	source='Communicator/RTMP/RTMPTConnection.cpp' object='libsirannon_la-RTMPTConnection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTMPTConnection.lo `test -f 'Communicator/RTMP/RTMPTConnection.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTConnection.cpp

libsirannon_la-RTMPServer.lo: Communicator/RTMP/RTMPServer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTMPServer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTMPServer.Tpo -c -o libsirannon_la-RTMPServer.lo `test -f 'Communicator/RTMP/RTMPServer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPServer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTMPServer.Tpo $(DEPDIR)/libsirannon_la-RTMPServer.Plo
#	source='Communicator/RTMP/RTMPServer.cpp' object='libsirannon_la-RTMPServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTMPServer.lo `test -f 'Communicator/RTMP/RTMPServer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPServer.cpp

libsirannon_la-RTMPTServer.lo: Communicator/RTMP/RTMPTServer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTMPTServer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTMPTServer.Tpo -c -o libsirannon_la-RTMPTServer.lo `test -f 'Communicator/RTMP/RTMPTServer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTServer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTMPTServer.Tpo $(DEPDIR)/libsirannon_la-RTMPTServer.Plo
#	source='Communicator/RTMP/RTMPTServer.cpp' object='libsirannon_la-RTMPTServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTMPTServer.lo `test -f 'Communicator/RTMP/RTMPTServer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTServer.cpp

libsirannon_la-RTMPPacketizer.lo: Communicator/RTMP/RTMPPacketizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTMPPacketizer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTMPPacketizer.Tpo -c -o libsirannon_la-RTMPPacketizer.lo `test -f 'Communicator/RTMP/RTMPPacketizer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPPacketizer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTMPPacketizer.Tpo $(DEPDIR)/libsirannon_la-RTMPPacketizer.Plo
#	source='Communicator/RTMP/RTMPPacketizer.cpp' object='libsirannon_la-RTMPPacketizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTMPPacketizer.lo `test -f 'Communicator/RTMP/RTMPPacketizer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPPacketizer.cpp

libsirannon_la-RTMPClient.lo: Communicator/RTMP/RTMPClient.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTMPClient.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTMPClient.Tpo -c -o libsirannon_la-RTMPClient.lo `test -f 'Communicator/RTMP/RTMPClient.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPClient.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTMPClient.Tpo $(DEPDIR)/libsirannon_la-RTMPClient.Plo
#	source='Communicator/RTMP/RTMPClient.cpp' object='libsirannon_la-RTMPClient.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTMPClient.lo `test -f 'Communicator/RTMP/RTMPClient.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPClient.cpp

libsirannon_la-RTMPTClient.lo: Communicator/RTMP/RTMPTClient.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RTMPTClient.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RTMPTClient.Tpo -c -o libsirannon_la-RTMPTClient.lo `test -f 'Communicator/RTMP/RTMPTClient.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTClient.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RTMPTClient.Tpo $(DEPDIR)/libsirannon_la-RTMPTClient.Plo
#	source='Communicator/RTMP/RTMPTClient.cpp' object='libsirannon_la-RTMPTClient.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RTMPTClient.lo `test -f 'Communicator/RTMP/RTMPTClient.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTClient.cpp

libsirannon_la-Classifier.lo: Classifier/Classifier.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Classifier.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Classifier.Tpo -c -o libsirannon_la-Classifier.lo `test -f 'Classifier/Classifier.cpp' || echo '$(srcdir)/'`Classifier/Classifier.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Classifier.Tpo $(DEPDIR)/libsirannon_la-Classifier.Plo
#	source='Classifier/Classifier.cpp' object='libsirannon_la-Classifier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Classifier.lo `test -f 'Classifier/Classifier.cpp' || echo '$(srcdir)/'`Classifier/Classifier.cpp

libsirannon_la-SVCClassifier.lo: Classifier/SVCClassifier.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-SVCClassifier.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-SVCClassifier.Tpo -c -o libsirannon_la-SVCClassifier.lo `test -f 'Classifier/SVCClassifier.cpp' || echo '$(srcdir)/'`Classifier/SVCClassifier.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-SVCClassifier.Tpo $(DEPDIR)/libsirannon_la-SVCClassifier.Plo
#	source='Classifier/SVCClassifier.cpp' object='libsirannon_la-SVCClassifier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-SVCClassifier.lo `test -f 'Classifier/SVCClassifier.cpp' || echo '$(srcdir)/'`Classifier/SVCClassifier.cpp

libsirannon_la-Writer.lo: Writer/Writer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Writer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Writer.Tpo -c -o libsirannon_la-Writer.lo `test -f 'Writer/Writer.cpp' || echo '$(srcdir)/'`Writer/Writer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Writer.Tpo $(DEPDIR)/libsirannon_la-Writer.Plo
#	source='Writer/Writer.cpp' object='libsirannon_la-Writer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Writer.lo `test -f 'Writer/Writer.cpp' || echo '$(srcdir)/'`Writer/Writer.cpp

libsirannon_la-FFmpegWriter.lo: Writer/FFmpegWriter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-FFmpegWriter.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-FFmpegWriter.Tpo -c -o libsirannon_la-FFmpegWriter.lo `test -f 'Writer/FFmpegWriter.cpp' || echo '$(srcdir)/'`Writer/FFmpegWriter.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-FFmpegWriter.Tpo $(DEPDIR)/libsirannon_la-FFmpegWriter.Plo
#	source='Writer/FFmpegWriter.cpp' object='libsirannon_la-FFmpegWriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-FFmpegWriter.lo `test -f 'Writer/FFmpegWriter.cpp' || echo '$(srcdir)/'`Writer/FFmpegWriter.cpp

libsirannon_la-FrameTransformer.lo: Transform/FrameTransformer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-FrameTransformer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-FrameTransformer.Tpo -c -o libsirannon_la-FrameTransformer.lo `test -f 'Transform/FrameTransformer.cpp' || echo '$(srcdir)/'`Transform/FrameTransformer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-FrameTransformer.Tpo $(DEPDIR)/libsirannon_la-FrameTransformer.Plo
#	source='Transform/FrameTransformer.cpp' object='libsirannon_la-FrameTransformer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-FrameTransformer.lo `test -f 'Transform/FrameTransformer.cpp' || echo '$(srcdir)/'`Transform/FrameTransformer.cpp

libsirannon_la-Transcoder.lo: Transform/Transcoder.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Transcoder.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Transcoder.Tpo -c -o libsirannon_la-Transcoder.lo `test -f 'Transform/Transcoder.cpp' || echo '$(srcdir)/'`Transform/Transcoder.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Transcoder.Tpo $(DEPDIR)/libsirannon_la-Transcoder.Plo
#	source='Transform/Transcoder.cpp' object='libsirannon_la-Transcoder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Transcoder.lo `test -f 'Transform/Transcoder.cpp' || echo '$(srcdir)/'`Transform/Transcoder.cpp

libsirannon_la-TranscoderAudio.lo: Transform/TranscoderAudio.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-TranscoderAudio.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-TranscoderAudio.Tpo -c -o libsirannon_la-TranscoderAudio.lo `test -f 'Transform/TranscoderAudio.cpp' || echo '$(srcdir)/'`Transform/TranscoderAudio.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-TranscoderAudio.Tpo $(DEPDIR)/libsirannon_la-TranscoderAudio.Plo
#	source='Transform/TranscoderAudio.cpp' object='libsirannon_la-TranscoderAudio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-TranscoderAudio.lo `test -f 'Transform/TranscoderAudio.cpp' || echo '$(srcdir)/'`Transform/TranscoderAudio.cpp

libsirannon_la-FFmpegDecoder.lo: Transform/FFmpegDecoder.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-FFmpegDecoder.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-FFmpegDecoder.Tpo -c -o libsirannon_la-FFmpegDecoder.lo `test -f 'Transform/FFmpegDecoder.cpp' || echo '$(srcdir)/'`Transform/FFmpegDecoder.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-FFmpegDecoder.Tpo $(DEPDIR)/libsirannon_la-FFmpegDecoder.Plo
#	source='Transform/FFmpegDecoder.cpp' object='libsirannon_la-FFmpegDecoder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-FFmpegDecoder.lo `test -f 'Transform/FFmpegDecoder.cpp' || echo '$(srcdir)/'`Transform/FFmpegDecoder.cpp

libsirannon_la-FrameTagger.lo: Misc/FrameTagger.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-FrameTagger.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-FrameTagger.Tpo -c -o libsirannon_la-FrameTagger.lo `test -f 'Misc/FrameTagger.cpp' || echo '$(srcdir)/'`Misc/FrameTagger.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-FrameTagger.Tpo $(DEPDIR)/libsirannon_la-FrameTagger.Plo
#	source='Misc/FrameTagger.cpp' object='libsirannon_la-FrameTagger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-FrameTagger.lo `test -f 'Misc/FrameTagger.cpp' || echo '$(srcdir)/'`Misc/FrameTagger.cpp

libsirannon_la-Logger.lo: Misc/Logger.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Logger.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Logger.Tpo -c -o libsirannon_la-Logger.lo `test -f 'Misc/Logger.cpp' || echo '$(srcdir)/'`Misc/Logger.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Logger.Tpo $(DEPDIR)/libsirannon_la-Logger.Plo
#	source='Misc/Logger.cpp' object='libsirannon_la-Logger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Logger.lo `test -f 'Misc/Logger.cpp' || echo '$(srcdir)/'`Misc/Logger.cpp

libsirannon_la-Statistics.lo: Misc/Statistics.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Statistics.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Statistics.Tpo -c -o libsirannon_la-Statistics.lo `test -f 'Misc/Statistics.cpp' || echo '$(srcdir)/'`Misc/Statistics.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Statistics.Tpo $(DEPDIR)/libsirannon_la-Statistics.Plo
#	source='Misc/Statistics.cpp' object='libsirannon_la-Statistics.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Statistics.lo `test -f 'Misc/Statistics.cpp' || echo '$(srcdir)/'`Misc/Statistics.cpp

libsirannon_la-Example.lo: Misc/Example.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Example.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Example.Tpo -c -o libsirannon_la-Example.lo `test -f 'Misc/Example.cpp' || echo '$(srcdir)/'`Misc/Example.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Example.Tpo $(DEPDIR)/libsirannon_la-Example.Plo
#	source='Misc/Example.cpp' object='libsirannon_la-Example.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Example.lo `test -f 'Misc/Example.cpp' || echo '$(srcdir)/'`Misc/Example.cpp

libsirannon_la-GOPSplitter.lo: Misc/GOPSplitter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-GOPSplitter.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-GOPSplitter.Tpo -c -o libsirannon_la-GOPSplitter.lo `test -f 'Misc/GOPSplitter.cpp' || echo '$(srcdir)/'`Misc/GOPSplitter.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-GOPSplitter.Tpo $(DEPDIR)/libsirannon_la-GOPSplitter.Plo
#	source='Misc/GOPSplitter.cpp' object='libsirannon_la-GOPSplitter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-GOPSplitter.lo `test -f 'Misc/GOPSplitter.cpp' || echo '$(srcdir)/'`Misc/GOPSplitter.cpp

libsirannon_la-PcapWriter.lo: Misc/PcapWriter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-PcapWriter.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-PcapWriter.Tpo -c -o libsirannon_la-PcapWriter.lo `test -f 'Misc/PcapWriter.cpp' || echo '$(srcdir)/'`Misc/PcapWriter.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-PcapWriter.Tpo $(DEPDIR)/libsirannon_la-PcapWriter.Plo
#	source='Misc/PcapWriter.cpp' object='libsirannon_la-PcapWriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-PcapWriter.lo `test -f 'Misc/PcapWriter.cpp' || echo '$(srcdir)/'`Misc/PcapWriter.cpp

libsirannon_la-YUVDisplay.lo: Misc/YUVDisplay.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-YUVDisplay.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-YUVDisplay.Tpo -c -o libsirannon_la-YUVDisplay.lo `test -f 'Misc/YUVDisplay.cpp' || echo '$(srcdir)/'`Misc/YUVDisplay.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-YUVDisplay.Tpo $(DEPDIR)/libsirannon_la-YUVDisplay.Plo
#	source='Misc/YUVDisplay.cpp' object='libsirannon_la-YUVDisplay.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-YUVDisplay.lo `test -f 'Misc/YUVDisplay.cpp' || echo '$(srcdir)/'`Misc/YUVDisplay.cpp

libsirannon_la-Restamp.lo: Misc/Restamp.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Restamp.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Restamp.Tpo -c -o libsirannon_la-Restamp.lo `test -f 'Misc/Restamp.cpp' || echo '$(srcdir)/'`Misc/Restamp.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Restamp.Tpo $(DEPDIR)/libsirannon_la-Restamp.Plo
#	source='Misc/Restamp.cpp' object='libsirannon_la-Restamp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Restamp.lo `test -f 'Misc/Restamp.cpp' || echo '$(srcdir)/'`Misc/Restamp.cpp

libsirannon_la-Boost.lo: Common/Boost.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Boost.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Boost.Tpo -c -o libsirannon_la-Boost.lo `test -f 'Common/Boost.cpp' || echo '$(srcdir)/'`Common/Boost.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Boost.Tpo $(DEPDIR)/libsirannon_la-Boost.Plo
#	source='Common/Boost.cpp' object='libsirannon_la-Boost.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Boost.lo `test -f 'Common/Boost.cpp' || echo '$(srcdir)/'`Common/Boost.cpp

libsirannon_la-ffmpeg.lo: Common/ffmpeg.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-ffmpeg.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-ffmpeg.Tpo -c -o libsirannon_la-ffmpeg.lo `test -f 'Common/ffmpeg.cpp' || echo '$(srcdir)/'`Common/ffmpeg.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-ffmpeg.Tpo $(DEPDIR)/libsirannon_la-ffmpeg.Plo
#	source='Common/ffmpeg.cpp' object='libsirannon_la-ffmpeg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-ffmpeg.lo `test -f 'Common/ffmpeg.cpp' || echo '$(srcdir)/'`Common/ffmpeg.cpp

libsirannon_la-h264_avc.lo: Common/h264_avc.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-h264_avc.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-h264_avc.Tpo -c -o libsirannon_la-h264_avc.lo `test -f 'Common/h264_avc.cpp' || echo '$(srcdir)/'`Common/h264_avc.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-h264_avc.Tpo $(DEPDIR)/libsirannon_la-h264_avc.Plo
#	source='Common/h264_avc.cpp' object='libsirannon_la-h264_avc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-h264_avc.lo `test -f 'Common/h264_avc.cpp' || echo '$(srcdir)/'`Common/h264_avc.cpp

libsirannon_la-sha2.lo: Common/sha2.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-sha2.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-sha2.Tpo -c -o libsirannon_la-sha2.lo `test -f 'Common/sha2.cpp' || echo '$(srcdir)/'`Common/sha2.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-sha2.Tpo $(DEPDIR)/libsirannon_la-sha2.Plo
#	source='Common/sha2.cpp' object='libsirannon_la-sha2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-sha2.lo `test -f 'Common/sha2.cpp' || echo '$(srcdir)/'`Common/sha2.cpp

libsirannon_la-hmac_sha2.lo: Common/hmac_sha2.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-hmac_sha2.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-hmac_sha2.Tpo -c -o libsirannon_la-hmac_sha2.lo `test -f 'Common/hmac_sha2.cpp' || echo '$(srcdir)/'`Common/hmac_sha2.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-hmac_sha2.Tpo $(DEPDIR)/libsirannon_la-hmac_sha2.Plo
#	source='Common/hmac_sha2.cpp' object='libsirannon_la-hmac_sha2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-hmac_sha2.lo `test -f 'Common/hmac_sha2.cpp' || echo '$(srcdir)/'`Common/hmac_sha2.cpp

libsirannon_la-PortManager.lo: Common/PortManager.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-PortManager.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-PortManager.Tpo -c -o libsirannon_la-PortManager.lo `test -f 'Common/PortManager.cpp' || echo '$(srcdir)/'`Common/PortManager.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-PortManager.Tpo $(DEPDIR)/libsirannon_la-PortManager.Plo
#	source='Common/PortManager.cpp' object='libsirannon_la-PortManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-PortManager.lo `test -f 'Common/PortManager.cpp' || echo '$(srcdir)/'`Common/PortManager.cpp

libsirannon_la-FileManager.lo: Common/FileManager.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-FileManager.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-FileManager.Tpo -c -o libsirannon_la-FileManager.lo `test -f 'Common/FileManager.cpp' || echo '$(srcdir)/'`Common/FileManager.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-FileManager.Tpo $(DEPDIR)/libsirannon_la-FileManager.Plo
#	source='Common/FileManager.cpp' object='libsirannon_la-FileManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-FileManager.lo `test -f 'Common/FileManager.cpp' || echo '$(srcdir)/'`Common/FileManager.cpp

libsirannon_la-RandomGenerator.lo: Common/RandomGenerator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-RandomGenerator.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-RandomGenerator.Tpo -c -o libsirannon_la-RandomGenerator.lo `test -f 'Common/RandomGenerator.cpp' || echo '$(srcdir)/'`Common/RandomGenerator.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-RandomGenerator.Tpo $(DEPDIR)/libsirannon_la-RandomGenerator.Plo
#	source='Common/RandomGenerator.cpp' object='libsirannon_la-RandomGenerator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-RandomGenerator.lo `test -f 'Common/RandomGenerator.cpp' || echo '$(srcdir)/'`Common/RandomGenerator.cpp

libsirannon_la-Utils.lo: Common/Utils.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Utils.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Utils.Tpo -c -o libsirannon_la-Utils.lo `test -f 'Common/Utils.cpp' || echo '$(srcdir)/'`Common/Utils.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Utils.Tpo $(DEPDIR)/libsirannon_la-Utils.Plo
#	source='Common/Utils.cpp' object='libsirannon_la-Utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Utils.lo `test -f 'Common/Utils.cpp' || echo '$(srcdir)/'`Common/Utils.cpp

libsirannon_la-Frame.lo: Common/Frame.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Frame.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Frame.Tpo -c -o libsirannon_la-Frame.lo `test -f 'Common/Frame.cpp' || echo '$(srcdir)/'`Common/Frame.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Frame.Tpo $(DEPDIR)/libsirannon_la-Frame.Plo
#	source='Common/Frame.cpp' object='libsirannon_la-Frame.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Frame.lo `test -f 'Common/Frame.cpp' || echo '$(srcdir)/'`Common/Frame.cpp

libsirannon_la-sdp.lo: Common/sdp.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-sdp.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-sdp.Tpo -c -o libsirannon_la-sdp.lo `test -f 'Common/sdp.cpp' || echo '$(srcdir)/'`Common/sdp.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-sdp.Tpo $(DEPDIR)/libsirannon_la-sdp.Plo
#	source='Common/sdp.cpp' object='libsirannon_la-sdp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-sdp.lo `test -f 'Common/sdp.cpp' || echo '$(srcdir)/'`Common/sdp.cpp

libsirannon_la-SirannonSocket.lo: Common/SirannonSocket.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-SirannonSocket.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-SirannonSocket.Tpo -c -o libsirannon_la-SirannonSocket.lo `test -f 'Common/SirannonSocket.cpp' || echo '$(srcdir)/'`Common/SirannonSocket.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-SirannonSocket.Tpo $(DEPDIR)/libsirannon_la-SirannonSocket.Plo
#	source='Common/SirannonSocket.cpp' object='libsirannon_la-SirannonSocket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-SirannonSocket.lo `test -f 'Common/SirannonSocket.cpp' || echo '$(srcdir)/'`Common/SirannonSocket.cpp

libsirannon_la-Flash.lo: Common/Flash.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Flash.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Flash.Tpo -c -o libsirannon_la-Flash.lo `test -f 'Common/Flash.cpp' || echo '$(srcdir)/'`Common/Flash.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Flash.Tpo $(DEPDIR)/libsirannon_la-Flash.Plo
#	source='Common/Flash.cpp' object='libsirannon_la-Flash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Flash.lo `test -f 'Common/Flash.cpp' || echo '$(srcdir)/'`Common/Flash.cpp

libsirannon_la-Bits.lo: Common/Bits.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Bits.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Bits.Tpo -c -o libsirannon_la-Bits.lo `test -f 'Common/Bits.cpp' || echo '$(srcdir)/'`Common/Bits.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Bits.Tpo $(DEPDIR)/libsirannon_la-Bits.Plo
#	source='Common/Bits.cpp' object='libsirannon_la-Bits.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Bits.lo `test -f 'Common/Bits.cpp' || echo '$(srcdir)/'`Common/Bits.cpp

libsirannon_la-Url.lo: Common/Url.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Url.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Url.Tpo -c -o libsirannon_la-Url.lo `test -f 'Common/Url.cpp' || echo '$(srcdir)/'`Common/Url.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Url.Tpo $(DEPDIR)/libsirannon_la-Url.Plo
#	source='Common/Url.cpp' object='libsirannon_la-Url.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Url.lo `test -f 'Common/Url.cpp' || echo '$(srcdir)/'`Common/Url.cpp

libsirannon_la-Base64.lo: Common/Base64.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Base64.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Base64.Tpo -c -o libsirannon_la-Base64.lo `test -f 'Common/Base64.cpp' || echo '$(srcdir)/'`Common/Base64.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Base64.Tpo $(DEPDIR)/libsirannon_la-Base64.Plo
#	source='Common/Base64.cpp' object='libsirannon_la-Base64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Base64.lo `test -f 'Common/Base64.cpp' || echo '$(srcdir)/'`Common/Base64.cpp

libsirannon_la-IPAddress.lo: Common/IPAddress.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-IPAddress.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-IPAddress.Tpo -c -o libsirannon_la-IPAddress.lo `test -f 'Common/IPAddress.cpp' || echo '$(srcdir)/'`Common/IPAddress.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-IPAddress.Tpo $(DEPDIR)/libsirannon_la-IPAddress.Plo
#	source='Common/IPAddress.cpp' object='libsirannon_la-IPAddress.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-IPAddress.lo `test -f 'Common/IPAddress.cpp' || echo '$(srcdir)/'`Common/IPAddress.cpp

libsirannon_la-SirannonException.lo: Core/SirannonException.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-SirannonException.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-SirannonException.Tpo -c -o libsirannon_la-SirannonException.lo `test -f 'Core/SirannonException.cpp' || echo '$(srcdir)/'`Core/SirannonException.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-SirannonException.Tpo $(DEPDIR)/libsirannon_la-SirannonException.Plo
#	source='Core/SirannonException.cpp' object='libsirannon_la-SirannonException.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-SirannonException.lo `test -f 'Core/SirannonException.cpp' || echo '$(srcdir)/'`Core/SirannonException.cpp

libsirannon_la-SirannonTime.lo: Core/SirannonTime.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-SirannonTime.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-SirannonTime.Tpo -c -o libsirannon_la-SirannonTime.lo `test -f 'Core/SirannonTime.cpp' || echo '$(srcdir)/'`Core/SirannonTime.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-SirannonTime.Tpo $(DEPDIR)/libsirannon_la-SirannonTime.Plo
#	source='Core/SirannonTime.cpp' object='libsirannon_la-SirannonTime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-SirannonTime.lo `test -f 'Core/SirannonTime.cpp' || echo '$(srcdir)/'`Core/SirannonTime.cpp

libsirannon_la-XMLStream.lo: Core/XMLStream.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-XMLStream.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-XMLStream.Tpo -c -o libsirannon_la-XMLStream.lo `test -f 'Core/XMLStream.cpp' || echo '$(srcdir)/'`Core/XMLStream.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-XMLStream.Tpo $(DEPDIR)/libsirannon_la-XMLStream.Plo
#	source='Core/XMLStream.cpp' object='libsirannon_la-XMLStream.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-XMLStream.lo `test -f 'Core/XMLStream.cpp' || echo '$(srcdir)/'`Core/XMLStream.cpp

libsirannon_la-Block.lo: Core/Block.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Block.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Block.Tpo -c -o libsirannon_la-Block.lo `test -f 'Core/Block.cpp' || echo '$(srcdir)/'`Core/Block.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Block.Tpo $(DEPDIR)/libsirannon_la-Block.Plo
#	source='Core/Block.cpp' object='libsirannon_la-Block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Block.lo `test -f 'Core/Block.cpp' || echo '$(srcdir)/'`Core/Block.cpp

libsirannon_la-System.lo: Core/System.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-System.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-System.Tpo -c -o libsirannon_la-System.lo `test -f 'Core/System.cpp' || echo '$(srcdir)/'`Core/System.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-System.Tpo $(DEPDIR)/libsirannon_la-System.Plo
#	source='Core/System.cpp' object='libsirannon_la-System.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-System.lo `test -f 'Core/System.cpp' || echo '$(srcdir)/'`Core/System.cpp

libsirannon_la-OSSupport.lo: Core/OSSupport.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-OSSupport.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-OSSupport.Tpo -c -o libsirannon_la-OSSupport.lo `test -f 'Core/OSSupport.cpp' || echo '$(srcdir)/'`Core/OSSupport.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-OSSupport.Tpo $(DEPDIR)/libsirannon_la-OSSupport.Plo
#	source='Core/OSSupport.cpp' object='libsirannon_la-OSSupport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-OSSupport.lo `test -f 'Core/OSSupport.cpp' || echo '$(srcdir)/'`Core/OSSupport.cpp

libsirannon_la-ConnectionInterface.lo: Core/ConnectionInterface.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-ConnectionInterface.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-ConnectionInterface.Tpo -c -o libsirannon_la-ConnectionInterface.lo `test -f 'Core/ConnectionInterface.cpp' || echo '$(srcdir)/'`Core/ConnectionInterface.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-ConnectionInterface.Tpo $(DEPDIR)/libsirannon_la-ConnectionInterface.Plo
#	source='Core/ConnectionInterface.cpp' object='libsirannon_la-ConnectionInterface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-ConnectionInterface.lo `test -f 'Core/ConnectionInterface.cpp' || echo '$(srcdir)/'`Core/ConnectionInterface.cpp

libsirannon_la-Link.lo: Core/Link.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-Link.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-Link.Tpo -c -o libsirannon_la-Link.lo `test -f 'Core/Link.cpp' || echo '$(srcdir)/'`Core/Link.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-Link.Tpo $(DEPDIR)/libsirannon_la-Link.Plo
#	source='Core/Link.cpp' object='libsirannon_la-Link.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-Link.lo `test -f 'Core/Link.cpp' || echo '$(srcdir)/'`Core/Link.cpp

libsirannon_la-MediaPacket.lo: Core/MediaPacket.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-MediaPacket.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-MediaPacket.Tpo -c -o libsirannon_la-MediaPacket.lo `test -f 'Core/MediaPacket.cpp' || echo '$(srcdir)/'`Core/MediaPacket.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-MediaPacket.Tpo $(DEPDIR)/libsirannon_la-MediaPacket.Plo
#	source='Core/MediaPacket.cpp' object='libsirannon_la-MediaPacket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-MediaPacket.lo `test -f 'Core/MediaPacket.cpp' || echo '$(srcdir)/'`Core/MediaPacket.cpp

libsirannon_la-MediaDescriptor.lo: Core/MediaDescriptor.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-MediaDescriptor.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-MediaDescriptor.Tpo -c -o libsirannon_la-MediaDescriptor.lo `test -f 'Core/MediaDescriptor.cpp' || echo '$(srcdir)/'`Core/MediaDescriptor.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-MediaDescriptor.Tpo $(DEPDIR)/libsirannon_la-MediaDescriptor.Plo
#	source='Core/MediaDescriptor.cpp' object='libsirannon_la-MediaDescriptor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-MediaDescriptor.lo `test -f 'Core/MediaDescriptor.cpp' || echo '$(srcdir)/'`Core/MediaDescriptor.cpp

libsirannon_la-ProcessorManager.lo: Core/ProcessorManager.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-ProcessorManager.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-ProcessorManager.Tpo -c -o libsirannon_la-ProcessorManager.lo `test -f 'Core/ProcessorManager.cpp' || echo '$(srcdir)/'`Core/ProcessorManager.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-ProcessorManager.Tpo $(DEPDIR)/libsirannon_la-ProcessorManager.Plo
#	source='Core/ProcessorManager.cpp' object='libsirannon_la-ProcessorManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-ProcessorManager.lo `test -f 'Core/ProcessorManager.cpp' || echo '$(srcdir)/'`Core/ProcessorManager.cpp

libsirannon_la-MemoryManager.lo: Core/MemoryManager.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-MemoryManager.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-MemoryManager.Tpo -c -o libsirannon_la-MemoryManager.lo `test -f 'Core/MemoryManager.cpp' || echo '$(srcdir)/'`Core/MemoryManager.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-MemoryManager.Tpo $(DEPDIR)/libsirannon_la-MemoryManager.Plo
#	source='Core/MemoryManager.cpp' object='libsirannon_la-MemoryManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-MemoryManager.lo `test -f 'Core/MemoryManager.cpp' || echo '$(srcdir)/'`Core/MemoryManager.cpp

libsirannon_la-SirannonPrint.lo: Core/SirannonPrint.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-SirannonPrint.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-SirannonPrint.Tpo -c -o libsirannon_la-SirannonPrint.lo `test -f 'Core/SirannonPrint.cpp' || echo '$(srcdir)/'`Core/SirannonPrint.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-SirannonPrint.Tpo $(DEPDIR)/libsirannon_la-SirannonPrint.Plo
#	source='Core/SirannonPrint.cpp' object='libsirannon_la-SirannonPrint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-SirannonPrint.lo `test -f 'Core/SirannonPrint.cpp' || echo '$(srcdir)/'`Core/SirannonPrint.cpp

libsirannon_la-sirannon.lo: sirannon.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-sirannon.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-sirannon.Tpo -c -o libsirannon_la-sirannon.lo `test -f 'sirannon.cpp' || echo '$(srcdir)/'`sirannon.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-sirannon.Tpo $(DEPDIR)/libsirannon_la-sirannon.Plo
#	source='sirannon.cpp' object='libsirannon_la-sirannon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-sirannon.lo `test -f 'sirannon.cpp' || echo '$(srcdir)/'`sirannon.cpp

libsirannon_la-MediaProcessor.lo: Core/MediaProcessor.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-MediaProcessor.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-MediaProcessor.Tpo -c -o libsirannon_la-MediaProcessor.lo `test -f 'Core/MediaProcessor.cpp' || echo '$(srcdir)/'`Core/MediaProcessor.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-MediaProcessor.Tpo $(DEPDIR)/libsirannon_la-MediaProcessor.Plo
#	source='Core/MediaProcessor.cpp' object='libsirannon_la-MediaProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-MediaProcessor.lo `test -f 'Core/MediaProcessor.cpp' || echo '$(srcdir)/'`Core/MediaProcessor.cpp

libsirannon_la-AQUAServer.lo: Private/AQUAServer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AQUAServer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AQUAServer.Tpo -c -o libsirannon_la-AQUAServer.lo `test -f 'Private/AQUAServer.cpp' || echo '$(srcdir)/'`Private/AQUAServer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AQUAServer.Tpo $(DEPDIR)/libsirannon_la-AQUAServer.Plo
#	source='Private/AQUAServer.cpp' object='libsirannon_la-AQUAServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AQUAServer.lo `test -f 'Private/AQUAServer.cpp' || echo '$(srcdir)/'`Private/AQUAServer.cpp

libsirannon_la-AQUAWriter.lo: Private/AQUAWriter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AQUAWriter.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AQUAWriter.Tpo -c -o libsirannon_la-AQUAWriter.lo `test -f 'Private/AQUAWriter.cpp' || echo '$(srcdir)/'`Private/AQUAWriter.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AQUAWriter.Tpo $(DEPDIR)/libsirannon_la-AQUAWriter.Plo
#	source='Private/AQUAWriter.cpp' object='libsirannon_la-AQUAWriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AQUAWriter.lo `test -f 'Private/AQUAWriter.cpp' || echo '$(srcdir)/'`Private/AQUAWriter.cpp

libsirannon_la-DIORServer.lo: Private/DIORServer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-DIORServer.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-DIORServer.Tpo -c -o libsirannon_la-DIORServer.lo `test -f 'Private/DIORServer.cpp' || echo '$(srcdir)/'`Private/DIORServer.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-DIORServer.Tpo $(DEPDIR)/libsirannon_la-DIORServer.Plo
#	source='Private/DIORServer.cpp' object='libsirannon_la-DIORServer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-DIORServer.lo `test -f 'Private/DIORServer.cpp' || echo '$(srcdir)/'`Private/DIORServer.cpp

libsirannon_la-AQUASession.lo: Private/AQUASession.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AQUASession.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AQUASession.Tpo -c -o libsirannon_la-AQUASession.lo `test -f 'Private/AQUASession.cpp' || echo '$(srcdir)/'`Private/AQUASession.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AQUASession.Tpo $(DEPDIR)/libsirannon_la-AQUASession.Plo
#	source='Private/AQUASession.cpp' object='libsirannon_la-AQUASession.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AQUASession.lo `test -f 'Private/AQUASession.cpp' || echo '$(srcdir)/'`Private/AQUASession.cpp

libsirannon_la-AQUAMonitor.lo: Private/AQUAMonitor.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-AQUAMonitor.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-AQUAMonitor.Tpo -c -o libsirannon_la-AQUAMonitor.lo `test -f 'Private/AQUAMonitor.cpp' || echo '$(srcdir)/'`Private/AQUAMonitor.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-AQUAMonitor.Tpo $(DEPDIR)/libsirannon_la-AQUAMonitor.Plo
#	source='Private/AQUAMonitor.cpp' object='libsirannon_la-AQUAMonitor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-AQUAMonitor.lo `test -f 'Private/AQUAMonitor.cpp' || echo '$(srcdir)/'`Private/AQUAMonitor.cpp

libsirannon_la-DIORSession.lo: Private/DIORSession.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-DIORSession.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-DIORSession.Tpo -c -o libsirannon_la-DIORSession.lo `test -f 'Private/DIORSession.cpp' || echo '$(srcdir)/'`Private/DIORSession.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-DIORSession.Tpo $(DEPDIR)/libsirannon_la-DIORSession.Plo
#	source='Private/DIORSession.cpp' object='libsirannon_la-DIORSession.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-DIORSession.lo `test -f 'Private/DIORSession.cpp' || echo '$(srcdir)/'`Private/DIORSession.cpp

libsirannon_la-IConcealClassifier.lo: Local/IConcealClassifier.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-IConcealClassifier.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-IConcealClassifier.Tpo -c -o libsirannon_la-IConcealClassifier.lo `test -f 'Local/IConcealClassifier.cpp' || echo '$(srcdir)/'`Local/IConcealClassifier.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-IConcealClassifier.Tpo $(DEPDIR)/libsirannon_la-IConcealClassifier.Plo
#	source='Local/IConcealClassifier.cpp' object='libsirannon_la-IConcealClassifier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-IConcealClassifier.lo `test -f 'Local/IConcealClassifier.cpp' || echo '$(srcdir)/'`Local/IConcealClassifier.cpp

libsirannon_la-test.lo: Local/test.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -MT libsirannon_la-test.lo -MD -MP -MF $(DEPDIR)/libsirannon_la-test.Tpo -c -o libsirannon_la-test.lo `test -f 'Local/test.cpp' || echo '$(srcdir)/'`Local/test.cpp
	$(am__mv) $(DEPDIR)/libsirannon_la-test.Tpo $(DEPDIR)/libsirannon_la-test.Plo
#	source='Local/test.cpp' object='libsirannon_la-test.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsirannon_la_CPPFLAGS) $(CPPFLAGS) $(libsirannon_la_CXXFLAGS) $(CXXFLAGS) -c -o libsirannon_la-test.lo `test -f 'Local/test.cpp' || echo '$(srcdir)/'`Local/test.cpp

sirannon-Proxy.o: HighLevel/Proxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Proxy.o -MD -MP -MF $(DEPDIR)/sirannon-Proxy.Tpo -c -o sirannon-Proxy.o `test -f 'HighLevel/Proxy.cpp' || echo '$(srcdir)/'`HighLevel/Proxy.cpp
	$(am__mv) $(DEPDIR)/sirannon-Proxy.Tpo $(DEPDIR)/sirannon-Proxy.Po
#	source='HighLevel/Proxy.cpp' object='sirannon-Proxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Proxy.o `test -f 'HighLevel/Proxy.cpp' || echo '$(srcdir)/'`HighLevel/Proxy.cpp

sirannon-Proxy.obj: HighLevel/Proxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Proxy.obj -MD -MP -MF $(DEPDIR)/sirannon-Proxy.Tpo -c -o sirannon-Proxy.obj `if test -f 'HighLevel/Proxy.cpp'; then $(CYGPATH_W) 'HighLevel/Proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/HighLevel/Proxy.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Proxy.Tpo $(DEPDIR)/sirannon-Proxy.Po
#	source='HighLevel/Proxy.cpp' object='sirannon-Proxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Proxy.obj `if test -f 'HighLevel/Proxy.cpp'; then $(CYGPATH_W) 'HighLevel/Proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/HighLevel/Proxy.cpp'; fi`

sirannon-FileStreamer.o: HighLevel/FileStreamer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FileStreamer.o -MD -MP -MF $(DEPDIR)/sirannon-FileStreamer.Tpo -c -o sirannon-FileStreamer.o `test -f 'HighLevel/FileStreamer.cpp' || echo '$(srcdir)/'`HighLevel/FileStreamer.cpp
	$(am__mv) $(DEPDIR)/sirannon-FileStreamer.Tpo $(DEPDIR)/sirannon-FileStreamer.Po
#	source='HighLevel/FileStreamer.cpp' object='sirannon-FileStreamer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FileStreamer.o `test -f 'HighLevel/FileStreamer.cpp' || echo '$(srcdir)/'`HighLevel/FileStreamer.cpp

sirannon-FileStreamer.obj: HighLevel/FileStreamer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FileStreamer.obj -MD -MP -MF $(DEPDIR)/sirannon-FileStreamer.Tpo -c -o sirannon-FileStreamer.obj `if test -f 'HighLevel/FileStreamer.cpp'; then $(CYGPATH_W) 'HighLevel/FileStreamer.cpp'; else $(CYGPATH_W) '$(srcdir)/HighLevel/FileStreamer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-FileStreamer.Tpo $(DEPDIR)/sirannon-FileStreamer.Po
#	source='HighLevel/FileStreamer.cpp' object='sirannon-FileStreamer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FileStreamer.obj `if test -f 'HighLevel/FileStreamer.cpp'; then $(CYGPATH_W) 'HighLevel/FileStreamer.cpp'; else $(CYGPATH_W) '$(srcdir)/HighLevel/FileStreamer.cpp'; fi`

sirannon-TranscoderSession.o: HighLevel/TranscoderSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TranscoderSession.o -MD -MP -MF $(DEPDIR)/sirannon-TranscoderSession.Tpo -c -o sirannon-TranscoderSession.o `test -f 'HighLevel/TranscoderSession.cpp' || echo '$(srcdir)/'`HighLevel/TranscoderSession.cpp
	$(am__mv) $(DEPDIR)/sirannon-TranscoderSession.Tpo $(DEPDIR)/sirannon-TranscoderSession.Po
#	source='HighLevel/TranscoderSession.cpp' object='sirannon-TranscoderSession.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TranscoderSession.o `test -f 'HighLevel/TranscoderSession.cpp' || echo '$(srcdir)/'`HighLevel/TranscoderSession.cpp

sirannon-TranscoderSession.obj: HighLevel/TranscoderSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TranscoderSession.obj -MD -MP -MF $(DEPDIR)/sirannon-TranscoderSession.Tpo -c -o sirannon-TranscoderSession.obj `if test -f 'HighLevel/TranscoderSession.cpp'; then $(CYGPATH_W) 'HighLevel/TranscoderSession.cpp'; else $(CYGPATH_W) '$(srcdir)/HighLevel/TranscoderSession.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-TranscoderSession.Tpo $(DEPDIR)/sirannon-TranscoderSession.Po
#	source='HighLevel/TranscoderSession.cpp' object='sirannon-TranscoderSession.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TranscoderSession.obj `if test -f 'HighLevel/TranscoderSession.cpp'; then $(CYGPATH_W) 'HighLevel/TranscoderSession.cpp'; else $(CYGPATH_W) '$(srcdir)/HighLevel/TranscoderSession.cpp'; fi`

sirannon-ProxyStreamer.o: HighLevel/ProxyStreamer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-ProxyStreamer.o -MD -MP -MF $(DEPDIR)/sirannon-ProxyStreamer.Tpo -c -o sirannon-ProxyStreamer.o `test -f 'HighLevel/ProxyStreamer.cpp' || echo '$(srcdir)/'`HighLevel/ProxyStreamer.cpp
	$(am__mv) $(DEPDIR)/sirannon-ProxyStreamer.Tpo $(DEPDIR)/sirannon-ProxyStreamer.Po
#	source='HighLevel/ProxyStreamer.cpp' object='sirannon-ProxyStreamer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-ProxyStreamer.o `test -f 'HighLevel/ProxyStreamer.cpp' || echo '$(srcdir)/'`HighLevel/ProxyStreamer.cpp

sirannon-ProxyStreamer.obj: HighLevel/ProxyStreamer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-ProxyStreamer.obj -MD -MP -MF $(DEPDIR)/sirannon-ProxyStreamer.Tpo -c -o sirannon-ProxyStreamer.obj `if test -f 'HighLevel/ProxyStreamer.cpp'; then $(CYGPATH_W) 'HighLevel/ProxyStreamer.cpp'; else $(CYGPATH_W) '$(srcdir)/HighLevel/ProxyStreamer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-ProxyStreamer.Tpo $(DEPDIR)/sirannon-ProxyStreamer.Po
#	source='HighLevel/ProxyStreamer.cpp' object='sirannon-ProxyStreamer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-ProxyStreamer.obj `if test -f 'HighLevel/ProxyStreamer.cpp'; then $(CYGPATH_W) 'HighLevel/ProxyStreamer.cpp'; else $(CYGPATH_W) '$(srcdir)/HighLevel/ProxyStreamer.cpp'; fi`

sirannon-Segmenter.o: HighLevel/Segmenter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Segmenter.o -MD -MP -MF $(DEPDIR)/sirannon-Segmenter.Tpo -c -o sirannon-Segmenter.o `test -f 'HighLevel/Segmenter.cpp' || echo '$(srcdir)/'`HighLevel/Segmenter.cpp
	$(am__mv) $(DEPDIR)/sirannon-Segmenter.Tpo $(DEPDIR)/sirannon-Segmenter.Po
#	source='HighLevel/Segmenter.cpp' object='sirannon-Segmenter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Segmenter.o `test -f 'HighLevel/Segmenter.cpp' || echo '$(srcdir)/'`HighLevel/Segmenter.cpp

sirannon-Segmenter.obj: HighLevel/Segmenter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Segmenter.obj -MD -MP -MF $(DEPDIR)/sirannon-Segmenter.Tpo -c -o sirannon-Segmenter.obj `if test -f 'HighLevel/Segmenter.cpp'; then $(CYGPATH_W) 'HighLevel/Segmenter.cpp'; else $(CYGPATH_W) '$(srcdir)/HighLevel/Segmenter.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Segmenter.Tpo $(DEPDIR)/sirannon-Segmenter.Po
#	source='HighLevel/Segmenter.cpp' object='sirannon-Segmenter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Segmenter.obj `if test -f 'HighLevel/Segmenter.cpp'; then $(CYGPATH_W) 'HighLevel/Segmenter.cpp'; else $(CYGPATH_W) '$(srcdir)/HighLevel/Segmenter.cpp'; fi`

sirannon-Reader.o: Reader/Reader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Reader.o -MD -MP -MF $(DEPDIR)/sirannon-Reader.Tpo -c -o sirannon-Reader.o `test -f 'Reader/Reader.cpp' || echo '$(srcdir)/'`Reader/Reader.cpp
	$(am__mv) $(DEPDIR)/sirannon-Reader.Tpo $(DEPDIR)/sirannon-Reader.Po
#	source='Reader/Reader.cpp' object='sirannon-Reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Reader.o `test -f 'Reader/Reader.cpp' || echo '$(srcdir)/'`Reader/Reader.cpp

sirannon-Reader.obj: Reader/Reader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Reader.obj -MD -MP -MF $(DEPDIR)/sirannon-Reader.Tpo -c -o sirannon-Reader.obj `if test -f 'Reader/Reader.cpp'; then $(CYGPATH_W) 'Reader/Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/Reader.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Reader.Tpo $(DEPDIR)/sirannon-Reader.Po
#	source='Reader/Reader.cpp' object='sirannon-Reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Reader.obj `if test -f 'Reader/Reader.cpp'; then $(CYGPATH_W) 'Reader/Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/Reader.cpp'; fi`

sirannon-FFmpegReader.o: Reader/FFmpegReader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FFmpegReader.o -MD -MP -MF $(DEPDIR)/sirannon-FFmpegReader.Tpo -c -o sirannon-FFmpegReader.o `test -f 'Reader/FFmpegReader.cpp' || echo '$(srcdir)/'`Reader/FFmpegReader.cpp
	$(am__mv) $(DEPDIR)/sirannon-FFmpegReader.Tpo $(DEPDIR)/sirannon-FFmpegReader.Po
#	source='Reader/FFmpegReader.cpp' object='sirannon-FFmpegReader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FFmpegReader.o `test -f 'Reader/FFmpegReader.cpp' || echo '$(srcdir)/'`Reader/FFmpegReader.cpp

sirannon-FFmpegReader.obj: Reader/FFmpegReader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FFmpegReader.obj -MD -MP -MF $(DEPDIR)/sirannon-FFmpegReader.Tpo -c -o sirannon-FFmpegReader.obj `if test -f 'Reader/FFmpegReader.cpp'; then $(CYGPATH_W) 'Reader/FFmpegReader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/FFmpegReader.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-FFmpegReader.Tpo $(DEPDIR)/sirannon-FFmpegReader.Po
#	source='Reader/FFmpegReader.cpp' object='sirannon-FFmpegReader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FFmpegReader.obj `if test -f 'Reader/FFmpegReader.cpp'; then $(CYGPATH_W) 'Reader/FFmpegReader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/FFmpegReader.cpp'; fi`

sirannon-AVCReader.o: Reader/AVCReader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AVCReader.o -MD -MP -MF $(DEPDIR)/sirannon-AVCReader.Tpo -c -o sirannon-AVCReader.o `test -f 'Reader/AVCReader.cpp' || echo '$(srcdir)/'`Reader/AVCReader.cpp
	$(am__mv) $(DEPDIR)/sirannon-AVCReader.Tpo $(DEPDIR)/sirannon-AVCReader.Po
#	source='Reader/AVCReader.cpp' object='sirannon-AVCReader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AVCReader.o `test -f 'Reader/AVCReader.cpp' || echo '$(srcdir)/'`Reader/AVCReader.cpp

sirannon-AVCReader.obj: Reader/AVCReader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AVCReader.obj -MD -MP -MF $(DEPDIR)/sirannon-AVCReader.Tpo -c -o sirannon-AVCReader.obj `if test -f 'Reader/AVCReader.cpp'; then $(CYGPATH_W) 'Reader/AVCReader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/AVCReader.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AVCReader.Tpo $(DEPDIR)/sirannon-AVCReader.Po
#	source='Reader/AVCReader.cpp' object='sirannon-AVCReader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AVCReader.obj `if test -f 'Reader/AVCReader.cpp'; then $(CYGPATH_W) 'Reader/AVCReader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/AVCReader.cpp'; fi`

sirannon-BasicReader.o: Reader/BasicReader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-BasicReader.o -MD -MP -MF $(DEPDIR)/sirannon-BasicReader.Tpo -c -o sirannon-BasicReader.o `test -f 'Reader/BasicReader.cpp' || echo '$(srcdir)/'`Reader/BasicReader.cpp
	$(am__mv) $(DEPDIR)/sirannon-BasicReader.Tpo $(DEPDIR)/sirannon-BasicReader.Po
#	source='Reader/BasicReader.cpp' object='sirannon-BasicReader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-BasicReader.o `test -f 'Reader/BasicReader.cpp' || echo '$(srcdir)/'`Reader/BasicReader.cpp

sirannon-BasicReader.obj: Reader/BasicReader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-BasicReader.obj -MD -MP -MF $(DEPDIR)/sirannon-BasicReader.Tpo -c -o sirannon-BasicReader.obj `if test -f 'Reader/BasicReader.cpp'; then $(CYGPATH_W) 'Reader/BasicReader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/BasicReader.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-BasicReader.Tpo $(DEPDIR)/sirannon-BasicReader.Po
#	source='Reader/BasicReader.cpp' object='sirannon-BasicReader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-BasicReader.obj `if test -f 'Reader/BasicReader.cpp'; then $(CYGPATH_W) 'Reader/BasicReader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/BasicReader.cpp'; fi`

sirannon-LiveReader.o: Reader/LiveReader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-LiveReader.o -MD -MP -MF $(DEPDIR)/sirannon-LiveReader.Tpo -c -o sirannon-LiveReader.o `test -f 'Reader/LiveReader.cpp' || echo '$(srcdir)/'`Reader/LiveReader.cpp
	$(am__mv) $(DEPDIR)/sirannon-LiveReader.Tpo $(DEPDIR)/sirannon-LiveReader.Po
#	source='Reader/LiveReader.cpp' object='sirannon-LiveReader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-LiveReader.o `test -f 'Reader/LiveReader.cpp' || echo '$(srcdir)/'`Reader/LiveReader.cpp

sirannon-LiveReader.obj: Reader/LiveReader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-LiveReader.obj -MD -MP -MF $(DEPDIR)/sirannon-LiveReader.Tpo -c -o sirannon-LiveReader.obj `if test -f 'Reader/LiveReader.cpp'; then $(CYGPATH_W) 'Reader/LiveReader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/LiveReader.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-LiveReader.Tpo $(DEPDIR)/sirannon-LiveReader.Po
#	source='Reader/LiveReader.cpp' object='sirannon-LiveReader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-LiveReader.obj `if test -f 'Reader/LiveReader.cpp'; then $(CYGPATH_W) 'Reader/LiveReader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/LiveReader.cpp'; fi`

sirannon-AMR_WBP_Reader.o: Reader/AMR_WBP_Reader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AMR_WBP_Reader.o -MD -MP -MF $(DEPDIR)/sirannon-AMR_WBP_Reader.Tpo -c -o sirannon-AMR_WBP_Reader.o `test -f 'Reader/AMR_WBP_Reader.cpp' || echo '$(srcdir)/'`Reader/AMR_WBP_Reader.cpp
	$(am__mv) $(DEPDIR)/sirannon-AMR_WBP_Reader.Tpo $(DEPDIR)/sirannon-AMR_WBP_Reader.Po
#	source='Reader/AMR_WBP_Reader.cpp' object='sirannon-AMR_WBP_Reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AMR_WBP_Reader.o `test -f 'Reader/AMR_WBP_Reader.cpp' || echo '$(srcdir)/'`Reader/AMR_WBP_Reader.cpp

sirannon-AMR_WBP_Reader.obj: Reader/AMR_WBP_Reader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AMR_WBP_Reader.obj -MD -MP -MF $(DEPDIR)/sirannon-AMR_WBP_Reader.Tpo -c -o sirannon-AMR_WBP_Reader.obj `if test -f 'Reader/AMR_WBP_Reader.cpp'; then $(CYGPATH_W) 'Reader/AMR_WBP_Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/AMR_WBP_Reader.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AMR_WBP_Reader.Tpo $(DEPDIR)/sirannon-AMR_WBP_Reader.Po
#	source='Reader/AMR_WBP_Reader.cpp' object='sirannon-AMR_WBP_Reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AMR_WBP_Reader.obj `if test -f 'Reader/AMR_WBP_Reader.cpp'; then $(CYGPATH_W) 'Reader/AMR_WBP_Reader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/AMR_WBP_Reader.cpp'; fi`

sirannon-FakeReader.o: Reader/FakeReader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FakeReader.o -MD -MP -MF $(DEPDIR)/sirannon-FakeReader.Tpo -c -o sirannon-FakeReader.o `test -f 'Reader/FakeReader.cpp' || echo '$(srcdir)/'`Reader/FakeReader.cpp
	$(am__mv) $(DEPDIR)/sirannon-FakeReader.Tpo $(DEPDIR)/sirannon-FakeReader.Po
#	source='Reader/FakeReader.cpp' object='sirannon-FakeReader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FakeReader.o `test -f 'Reader/FakeReader.cpp' || echo '$(srcdir)/'`Reader/FakeReader.cpp

sirannon-FakeReader.obj: Reader/FakeReader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FakeReader.obj -MD -MP -MF $(DEPDIR)/sirannon-FakeReader.Tpo -c -o sirannon-FakeReader.obj `if test -f 'Reader/FakeReader.cpp'; then $(CYGPATH_W) 'Reader/FakeReader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/FakeReader.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-FakeReader.Tpo $(DEPDIR)/sirannon-FakeReader.Po
#	source='Reader/FakeReader.cpp' object='sirannon-FakeReader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FakeReader.obj `if test -f 'Reader/FakeReader.cpp'; then $(CYGPATH_W) 'Reader/FakeReader.cpp'; else $(CYGPATH_W) '$(srcdir)/Reader/FakeReader.cpp'; fi`

sirannon-Packetizer.o: Packetizer/Packetizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Packetizer.o -MD -MP -MF $(DEPDIR)/sirannon-Packetizer.Tpo -c -o sirannon-Packetizer.o `test -f 'Packetizer/Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/Packetizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-Packetizer.Tpo $(DEPDIR)/sirannon-Packetizer.Po
#	source='Packetizer/Packetizer.cpp' object='sirannon-Packetizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Packetizer.o `test -f 'Packetizer/Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/Packetizer.cpp

sirannon-Packetizer.obj: Packetizer/Packetizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Packetizer.obj -MD -MP -MF $(DEPDIR)/sirannon-Packetizer.Tpo -c -o sirannon-Packetizer.obj `if test -f 'Packetizer/Packetizer.cpp'; then $(CYGPATH_W) 'Packetizer/Packetizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/Packetizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Packetizer.Tpo $(DEPDIR)/sirannon-Packetizer.Po
#	source='Packetizer/Packetizer.cpp' object='sirannon-Packetizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Packetizer.obj `if test -f 'Packetizer/Packetizer.cpp'; then $(CYGPATH_W) 'Packetizer/Packetizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/Packetizer.cpp'; fi`

sirannon-Unpacketizer.o: Packetizer/Unpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Unpacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-Unpacketizer.Tpo -c -o sirannon-Unpacketizer.o `test -f 'Packetizer/Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/Unpacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-Unpacketizer.Tpo $(DEPDIR)/sirannon-Unpacketizer.Po
#	source='Packetizer/Unpacketizer.cpp' object='sirannon-Unpacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Unpacketizer.o `test -f 'Packetizer/Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/Unpacketizer.cpp

sirannon-Unpacketizer.obj: Packetizer/Unpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Unpacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-Unpacketizer.Tpo -c -o sirannon-Unpacketizer.obj `if test -f 'Packetizer/Unpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/Unpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/Unpacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Unpacketizer.Tpo $(DEPDIR)/sirannon-Unpacketizer.Po
#	source='Packetizer/Unpacketizer.cpp' object='sirannon-Unpacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Unpacketizer.obj `if test -f 'Packetizer/Unpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/Unpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/Unpacketizer.cpp'; fi`

sirannon-PESPacketizer.o: Packetizer/PESPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-PESPacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-PESPacketizer.Tpo -c -o sirannon-PESPacketizer.o `test -f 'Packetizer/PESPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/PESPacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-PESPacketizer.Tpo $(DEPDIR)/sirannon-PESPacketizer.Po
#	source='Packetizer/PESPacketizer.cpp' object='sirannon-PESPacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-PESPacketizer.o `test -f 'Packetizer/PESPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/PESPacketizer.cpp

sirannon-PESPacketizer.obj: Packetizer/PESPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-PESPacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-PESPacketizer.Tpo -c -o sirannon-PESPacketizer.obj `if test -f 'Packetizer/PESPacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/PESPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/PESPacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-PESPacketizer.Tpo $(DEPDIR)/sirannon-PESPacketizer.Po
#	source='Packetizer/PESPacketizer.cpp' object='sirannon-PESPacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-PESPacketizer.obj `if test -f 'Packetizer/PESPacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/PESPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/PESPacketizer.cpp'; fi`

sirannon-MP2Packetizer.o: Packetizer/MP2Packetizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MP2Packetizer.o -MD -MP -MF $(DEPDIR)/sirannon-MP2Packetizer.Tpo -c -o sirannon-MP2Packetizer.o `test -f 'Packetizer/MP2Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/MP2Packetizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-MP2Packetizer.Tpo $(DEPDIR)/sirannon-MP2Packetizer.Po
#	source='Packetizer/MP2Packetizer.cpp' object='sirannon-MP2Packetizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MP2Packetizer.o `test -f 'Packetizer/MP2Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/MP2Packetizer.cpp

sirannon-MP2Packetizer.obj: Packetizer/MP2Packetizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MP2Packetizer.obj -MD -MP -MF $(DEPDIR)/sirannon-MP2Packetizer.Tpo -c -o sirannon-MP2Packetizer.obj `if test -f 'Packetizer/MP2Packetizer.cpp'; then $(CYGPATH_W) 'Packetizer/MP2Packetizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/MP2Packetizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-MP2Packetizer.Tpo $(DEPDIR)/sirannon-MP2Packetizer.Po
#	source='Packetizer/MP2Packetizer.cpp' object='sirannon-MP2Packetizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MP2Packetizer.obj `if test -f 'Packetizer/MP2Packetizer.cpp'; then $(CYGPATH_W) 'Packetizer/MP2Packetizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/MP2Packetizer.cpp'; fi`

sirannon-MP4Packetizer.o: Packetizer/MP4Packetizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MP4Packetizer.o -MD -MP -MF $(DEPDIR)/sirannon-MP4Packetizer.Tpo -c -o sirannon-MP4Packetizer.o `test -f 'Packetizer/MP4Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/MP4Packetizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-MP4Packetizer.Tpo $(DEPDIR)/sirannon-MP4Packetizer.Po
#	source='Packetizer/MP4Packetizer.cpp' object='sirannon-MP4Packetizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MP4Packetizer.o `test -f 'Packetizer/MP4Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/MP4Packetizer.cpp

sirannon-MP4Packetizer.obj: Packetizer/MP4Packetizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MP4Packetizer.obj -MD -MP -MF $(DEPDIR)/sirannon-MP4Packetizer.Tpo -c -o sirannon-MP4Packetizer.obj `if test -f 'Packetizer/MP4Packetizer.cpp'; then $(CYGPATH_W) 'Packetizer/MP4Packetizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/MP4Packetizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-MP4Packetizer.Tpo $(DEPDIR)/sirannon-MP4Packetizer.Po
#	source='Packetizer/MP4Packetizer.cpp' object='sirannon-MP4Packetizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MP4Packetizer.obj `if test -f 'Packetizer/MP4Packetizer.cpp'; then $(CYGPATH_W) 'Packetizer/MP4Packetizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/MP4Packetizer.cpp'; fi`

sirannon-AVCPacketizer.o: Packetizer/AVCPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AVCPacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-AVCPacketizer.Tpo -c -o sirannon-AVCPacketizer.o `test -f 'Packetizer/AVCPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AVCPacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-AVCPacketizer.Tpo $(DEPDIR)/sirannon-AVCPacketizer.Po
#	source='Packetizer/AVCPacketizer.cpp' object='sirannon-AVCPacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AVCPacketizer.o `test -f 'Packetizer/AVCPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AVCPacketizer.cpp

sirannon-AVCPacketizer.obj: Packetizer/AVCPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AVCPacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-AVCPacketizer.Tpo -c -o sirannon-AVCPacketizer.obj `if test -f 'Packetizer/AVCPacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/AVCPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AVCPacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AVCPacketizer.Tpo $(DEPDIR)/sirannon-AVCPacketizer.Po
#	source='Packetizer/AVCPacketizer.cpp' object='sirannon-AVCPacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AVCPacketizer.obj `if test -f 'Packetizer/AVCPacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/AVCPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AVCPacketizer.cpp'; fi`

sirannon-AMRPacketizer.o: Packetizer/AMRPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AMRPacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-AMRPacketizer.Tpo -c -o sirannon-AMRPacketizer.o `test -f 'Packetizer/AMRPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AMRPacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-AMRPacketizer.Tpo $(DEPDIR)/sirannon-AMRPacketizer.Po
#	source='Packetizer/AMRPacketizer.cpp' object='sirannon-AMRPacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AMRPacketizer.o `test -f 'Packetizer/AMRPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AMRPacketizer.cpp

sirannon-AMRPacketizer.obj: Packetizer/AMRPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AMRPacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-AMRPacketizer.Tpo -c -o sirannon-AMRPacketizer.obj `if test -f 'Packetizer/AMRPacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/AMRPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AMRPacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AMRPacketizer.Tpo $(DEPDIR)/sirannon-AMRPacketizer.Po
#	source='Packetizer/AMRPacketizer.cpp' object='sirannon-AMRPacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AMRPacketizer.obj `if test -f 'Packetizer/AMRPacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/AMRPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AMRPacketizer.cpp'; fi`

sirannon-AMR_WBP_Packetizer.o: Packetizer/AMR_WBP_Packetizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AMR_WBP_Packetizer.o -MD -MP -MF $(DEPDIR)/sirannon-AMR_WBP_Packetizer.Tpo -c -o sirannon-AMR_WBP_Packetizer.o `test -f 'Packetizer/AMR_WBP_Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/AMR_WBP_Packetizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-AMR_WBP_Packetizer.Tpo $(DEPDIR)/sirannon-AMR_WBP_Packetizer.Po
#	source='Packetizer/AMR_WBP_Packetizer.cpp' object='sirannon-AMR_WBP_Packetizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AMR_WBP_Packetizer.o `test -f 'Packetizer/AMR_WBP_Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/AMR_WBP_Packetizer.cpp

sirannon-AMR_WBP_Packetizer.obj: Packetizer/AMR_WBP_Packetizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AMR_WBP_Packetizer.obj -MD -MP -MF $(DEPDIR)/sirannon-AMR_WBP_Packetizer.Tpo -c -o sirannon-AMR_WBP_Packetizer.obj `if test -f 'Packetizer/AMR_WBP_Packetizer.cpp'; then $(CYGPATH_W) 'Packetizer/AMR_WBP_Packetizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AMR_WBP_Packetizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AMR_WBP_Packetizer.Tpo $(DEPDIR)/sirannon-AMR_WBP_Packetizer.Po
#	source='Packetizer/AMR_WBP_Packetizer.cpp' object='sirannon-AMR_WBP_Packetizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AMR_WBP_Packetizer.obj `if test -f 'Packetizer/AMR_WBP_Packetizer.cpp'; then $(CYGPATH_W) 'Packetizer/AMR_WBP_Packetizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AMR_WBP_Packetizer.cpp'; fi`

sirannon-AC3Packetizer.o: Packetizer/AC3Packetizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AC3Packetizer.o -MD -MP -MF $(DEPDIR)/sirannon-AC3Packetizer.Tpo -c -o sirannon-AC3Packetizer.o `test -f 'Packetizer/AC3Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/AC3Packetizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-AC3Packetizer.Tpo $(DEPDIR)/sirannon-AC3Packetizer.Po
#	source='Packetizer/AC3Packetizer.cpp' object='sirannon-AC3Packetizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AC3Packetizer.o `test -f 'Packetizer/AC3Packetizer.cpp' || echo '$(srcdir)/'`Packetizer/AC3Packetizer.cpp

sirannon-AC3Packetizer.obj: Packetizer/AC3Packetizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AC3Packetizer.obj -MD -MP -MF $(DEPDIR)/sirannon-AC3Packetizer.Tpo -c -o sirannon-AC3Packetizer.obj `if test -f 'Packetizer/AC3Packetizer.cpp'; then $(CYGPATH_W) 'Packetizer/AC3Packetizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AC3Packetizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AC3Packetizer.Tpo $(DEPDIR)/sirannon-AC3Packetizer.Po
#	source='Packetizer/AC3Packetizer.cpp' object='sirannon-AC3Packetizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AC3Packetizer.obj `if test -f 'Packetizer/AC3Packetizer.cpp'; then $(CYGPATH_W) 'Packetizer/AC3Packetizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AC3Packetizer.cpp'; fi`

sirannon-SirannonPacketizer.o: Packetizer/SirannonPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SirannonPacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-SirannonPacketizer.Tpo -c -o sirannon-SirannonPacketizer.o `test -f 'Packetizer/SirannonPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/SirannonPacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-SirannonPacketizer.Tpo $(DEPDIR)/sirannon-SirannonPacketizer.Po
#	source='Packetizer/SirannonPacketizer.cpp' object='sirannon-SirannonPacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SirannonPacketizer.o `test -f 'Packetizer/SirannonPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/SirannonPacketizer.cpp

sirannon-SirannonPacketizer.obj: Packetizer/SirannonPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SirannonPacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-SirannonPacketizer.Tpo -c -o sirannon-SirannonPacketizer.obj `if test -f 'Packetizer/SirannonPacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/SirannonPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/SirannonPacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-SirannonPacketizer.Tpo $(DEPDIR)/sirannon-SirannonPacketizer.Po
#	source='Packetizer/SirannonPacketizer.cpp' object='sirannon-SirannonPacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SirannonPacketizer.obj `if test -f 'Packetizer/SirannonPacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/SirannonPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/SirannonPacketizer.cpp'; fi`

sirannon-AVCUnpacketizer.o: Packetizer/AVCUnpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AVCUnpacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-AVCUnpacketizer.Tpo -c -o sirannon-AVCUnpacketizer.o `test -f 'Packetizer/AVCUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AVCUnpacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-AVCUnpacketizer.Tpo $(DEPDIR)/sirannon-AVCUnpacketizer.Po
#	source='Packetizer/AVCUnpacketizer.cpp' object='sirannon-AVCUnpacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AVCUnpacketizer.o `test -f 'Packetizer/AVCUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AVCUnpacketizer.cpp

sirannon-AVCUnpacketizer.obj: Packetizer/AVCUnpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AVCUnpacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-AVCUnpacketizer.Tpo -c -o sirannon-AVCUnpacketizer.obj `if test -f 'Packetizer/AVCUnpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/AVCUnpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AVCUnpacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AVCUnpacketizer.Tpo $(DEPDIR)/sirannon-AVCUnpacketizer.Po
#	source='Packetizer/AVCUnpacketizer.cpp' object='sirannon-AVCUnpacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AVCUnpacketizer.obj `if test -f 'Packetizer/AVCUnpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/AVCUnpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AVCUnpacketizer.cpp'; fi`

sirannon-MP4Unpacketizer.o: Packetizer/MP4Unpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MP4Unpacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-MP4Unpacketizer.Tpo -c -o sirannon-MP4Unpacketizer.o `test -f 'Packetizer/MP4Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/MP4Unpacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-MP4Unpacketizer.Tpo $(DEPDIR)/sirannon-MP4Unpacketizer.Po
#	source='Packetizer/MP4Unpacketizer.cpp' object='sirannon-MP4Unpacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MP4Unpacketizer.o `test -f 'Packetizer/MP4Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/MP4Unpacketizer.cpp

sirannon-MP4Unpacketizer.obj: Packetizer/MP4Unpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MP4Unpacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-MP4Unpacketizer.Tpo -c -o sirannon-MP4Unpacketizer.obj `if test -f 'Packetizer/MP4Unpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/MP4Unpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/MP4Unpacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-MP4Unpacketizer.Tpo $(DEPDIR)/sirannon-MP4Unpacketizer.Po
#	source='Packetizer/MP4Unpacketizer.cpp' object='sirannon-MP4Unpacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MP4Unpacketizer.obj `if test -f 'Packetizer/MP4Unpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/MP4Unpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/MP4Unpacketizer.cpp'; fi`

sirannon-PESUnpacketizer.o: Packetizer/PESUnpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-PESUnpacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-PESUnpacketizer.Tpo -c -o sirannon-PESUnpacketizer.o `test -f 'Packetizer/PESUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/PESUnpacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-PESUnpacketizer.Tpo $(DEPDIR)/sirannon-PESUnpacketizer.Po
#	source='Packetizer/PESUnpacketizer.cpp' object='sirannon-PESUnpacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-PESUnpacketizer.o `test -f 'Packetizer/PESUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/PESUnpacketizer.cpp

sirannon-PESUnpacketizer.obj: Packetizer/PESUnpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-PESUnpacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-PESUnpacketizer.Tpo -c -o sirannon-PESUnpacketizer.obj `if test -f 'Packetizer/PESUnpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/PESUnpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/PESUnpacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-PESUnpacketizer.Tpo $(DEPDIR)/sirannon-PESUnpacketizer.Po
#	source='Packetizer/PESUnpacketizer.cpp' object='sirannon-PESUnpacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-PESUnpacketizer.obj `if test -f 'Packetizer/PESUnpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/PESUnpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/PESUnpacketizer.cpp'; fi`

sirannon-MP2Unpacketizer.o: Packetizer/MP2Unpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MP2Unpacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-MP2Unpacketizer.Tpo -c -o sirannon-MP2Unpacketizer.o `test -f 'Packetizer/MP2Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/MP2Unpacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-MP2Unpacketizer.Tpo $(DEPDIR)/sirannon-MP2Unpacketizer.Po
#	source='Packetizer/MP2Unpacketizer.cpp' object='sirannon-MP2Unpacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MP2Unpacketizer.o `test -f 'Packetizer/MP2Unpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/MP2Unpacketizer.cpp

sirannon-MP2Unpacketizer.obj: Packetizer/MP2Unpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MP2Unpacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-MP2Unpacketizer.Tpo -c -o sirannon-MP2Unpacketizer.obj `if test -f 'Packetizer/MP2Unpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/MP2Unpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/MP2Unpacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-MP2Unpacketizer.Tpo $(DEPDIR)/sirannon-MP2Unpacketizer.Po
#	source='Packetizer/MP2Unpacketizer.cpp' object='sirannon-MP2Unpacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MP2Unpacketizer.obj `if test -f 'Packetizer/MP2Unpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/MP2Unpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/MP2Unpacketizer.cpp'; fi`

sirannon-AMRUnpacketizer.o: Packetizer/AMRUnpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AMRUnpacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-AMRUnpacketizer.Tpo -c -o sirannon-AMRUnpacketizer.o `test -f 'Packetizer/AMRUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AMRUnpacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-AMRUnpacketizer.Tpo $(DEPDIR)/sirannon-AMRUnpacketizer.Po
#	source='Packetizer/AMRUnpacketizer.cpp' object='sirannon-AMRUnpacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AMRUnpacketizer.o `test -f 'Packetizer/AMRUnpacketizer.cpp' || echo '$(srcdir)/'`Packetizer/AMRUnpacketizer.cpp

sirannon-AMRUnpacketizer.obj: Packetizer/AMRUnpacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AMRUnpacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-AMRUnpacketizer.Tpo -c -o sirannon-AMRUnpacketizer.obj `if test -f 'Packetizer/AMRUnpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/AMRUnpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AMRUnpacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AMRUnpacketizer.Tpo $(DEPDIR)/sirannon-AMRUnpacketizer.Po
#	source='Packetizer/AMRUnpacketizer.cpp' object='sirannon-AMRUnpacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AMRUnpacketizer.obj `if test -f 'Packetizer/AMRUnpacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/AMRUnpacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/AMRUnpacketizer.cpp'; fi`

sirannon-DefaultPacketizer.o: Packetizer/DefaultPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-DefaultPacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-DefaultPacketizer.Tpo -c -o sirannon-DefaultPacketizer.o `test -f 'Packetizer/DefaultPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/DefaultPacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-DefaultPacketizer.Tpo $(DEPDIR)/sirannon-DefaultPacketizer.Po
#	source='Packetizer/DefaultPacketizer.cpp' object='sirannon-DefaultPacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-DefaultPacketizer.o `test -f 'Packetizer/DefaultPacketizer.cpp' || echo '$(srcdir)/'`Packetizer/DefaultPacketizer.cpp

sirannon-DefaultPacketizer.obj: Packetizer/DefaultPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-DefaultPacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-DefaultPacketizer.Tpo -c -o sirannon-DefaultPacketizer.obj `if test -f 'Packetizer/DefaultPacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/DefaultPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/DefaultPacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-DefaultPacketizer.Tpo $(DEPDIR)/sirannon-DefaultPacketizer.Po
#	source='Packetizer/DefaultPacketizer.cpp' object='sirannon-DefaultPacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-DefaultPacketizer.obj `if test -f 'Packetizer/DefaultPacketizer.cpp'; then $(CYGPATH_W) 'Packetizer/DefaultPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Packetizer/DefaultPacketizer.cpp'; fi`

sirannon-Multiplexer.o: Multiplexer/Multiplexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Multiplexer.o -MD -MP -MF $(DEPDIR)/sirannon-Multiplexer.Tpo -c -o sirannon-Multiplexer.o `test -f 'Multiplexer/Multiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/Multiplexer.cpp
	$(am__mv) $(DEPDIR)/sirannon-Multiplexer.Tpo $(DEPDIR)/sirannon-Multiplexer.Po
#	source='Multiplexer/Multiplexer.cpp' object='sirannon-Multiplexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Multiplexer.o `test -f 'Multiplexer/Multiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/Multiplexer.cpp

sirannon-Multiplexer.obj: Multiplexer/Multiplexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Multiplexer.obj -MD -MP -MF $(DEPDIR)/sirannon-Multiplexer.Tpo -c -o sirannon-Multiplexer.obj `if test -f 'Multiplexer/Multiplexer.cpp'; then $(CYGPATH_W) 'Multiplexer/Multiplexer.cpp'; else $(CYGPATH_W) '$(srcdir)/Multiplexer/Multiplexer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Multiplexer.Tpo $(DEPDIR)/sirannon-Multiplexer.Po
#	source='Multiplexer/Multiplexer.cpp' object='sirannon-Multiplexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Multiplexer.obj `if test -f 'Multiplexer/Multiplexer.cpp'; then $(CYGPATH_W) 'Multiplexer/Multiplexer.cpp'; else $(CYGPATH_W) '$(srcdir)/Multiplexer/Multiplexer.cpp'; fi`

sirannon-TSMultiplexer.o: Multiplexer/TSMultiplexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TSMultiplexer.o -MD -MP -MF $(DEPDIR)/sirannon-TSMultiplexer.Tpo -c -o sirannon-TSMultiplexer.o `test -f 'Multiplexer/TSMultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/TSMultiplexer.cpp
	$(am__mv) $(DEPDIR)/sirannon-TSMultiplexer.Tpo $(DEPDIR)/sirannon-TSMultiplexer.Po
#	source='Multiplexer/TSMultiplexer.cpp' object='sirannon-TSMultiplexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TSMultiplexer.o `test -f 'Multiplexer/TSMultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/TSMultiplexer.cpp

sirannon-TSMultiplexer.obj: Multiplexer/TSMultiplexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TSMultiplexer.obj -MD -MP -MF $(DEPDIR)/sirannon-TSMultiplexer.Tpo -c -o sirannon-TSMultiplexer.obj `if test -f 'Multiplexer/TSMultiplexer.cpp'; then $(CYGPATH_W) 'Multiplexer/TSMultiplexer.cpp'; else $(CYGPATH_W) '$(srcdir)/Multiplexer/TSMultiplexer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-TSMultiplexer.Tpo $(DEPDIR)/sirannon-TSMultiplexer.Po
#	source='Multiplexer/TSMultiplexer.cpp' object='sirannon-TSMultiplexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TSMultiplexer.obj `if test -f 'Multiplexer/TSMultiplexer.cpp'; then $(CYGPATH_W) 'Multiplexer/TSMultiplexer.cpp'; else $(CYGPATH_W) '$(srcdir)/Multiplexer/TSMultiplexer.cpp'; fi`

sirannon-TSDemultiplexer.o: Multiplexer/TSDemultiplexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TSDemultiplexer.o -MD -MP -MF $(DEPDIR)/sirannon-TSDemultiplexer.Tpo -c -o sirannon-TSDemultiplexer.o `test -f 'Multiplexer/TSDemultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/TSDemultiplexer.cpp
	$(am__mv) $(DEPDIR)/sirannon-TSDemultiplexer.Tpo $(DEPDIR)/sirannon-TSDemultiplexer.Po
#	source='Multiplexer/TSDemultiplexer.cpp' object='sirannon-TSDemultiplexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TSDemultiplexer.o `test -f 'Multiplexer/TSDemultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/TSDemultiplexer.cpp

sirannon-TSDemultiplexer.obj: Multiplexer/TSDemultiplexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TSDemultiplexer.obj -MD -MP -MF $(DEPDIR)/sirannon-TSDemultiplexer.Tpo -c -o sirannon-TSDemultiplexer.obj `if test -f 'Multiplexer/TSDemultiplexer.cpp'; then $(CYGPATH_W) 'Multiplexer/TSDemultiplexer.cpp'; else $(CYGPATH_W) '$(srcdir)/Multiplexer/TSDemultiplexer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-TSDemultiplexer.Tpo $(DEPDIR)/sirannon-TSDemultiplexer.Po
#	source='Multiplexer/TSDemultiplexer.cpp' object='sirannon-TSDemultiplexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TSDemultiplexer.obj `if test -f 'Multiplexer/TSDemultiplexer.cpp'; then $(CYGPATH_W) 'Multiplexer/TSDemultiplexer.cpp'; else $(CYGPATH_W) '$(srcdir)/Multiplexer/TSDemultiplexer.cpp'; fi`

sirannon-FFmpegMultiplexer.o: Multiplexer/FFmpegMultiplexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FFmpegMultiplexer.o -MD -MP -MF $(DEPDIR)/sirannon-FFmpegMultiplexer.Tpo -c -o sirannon-FFmpegMultiplexer.o `test -f 'Multiplexer/FFmpegMultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/FFmpegMultiplexer.cpp
	$(am__mv) $(DEPDIR)/sirannon-FFmpegMultiplexer.Tpo $(DEPDIR)/sirannon-FFmpegMultiplexer.Po
#	source='Multiplexer/FFmpegMultiplexer.cpp' object='sirannon-FFmpegMultiplexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FFmpegMultiplexer.o `test -f 'Multiplexer/FFmpegMultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/FFmpegMultiplexer.cpp

sirannon-FFmpegMultiplexer.obj: Multiplexer/FFmpegMultiplexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FFmpegMultiplexer.obj -MD -MP -MF $(DEPDIR)/sirannon-FFmpegMultiplexer.Tpo -c -o sirannon-FFmpegMultiplexer.obj `if test -f 'Multiplexer/FFmpegMultiplexer.cpp'; then $(CYGPATH_W) 'Multiplexer/FFmpegMultiplexer.cpp'; else $(CYGPATH_W) '$(srcdir)/Multiplexer/FFmpegMultiplexer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-FFmpegMultiplexer.Tpo $(DEPDIR)/sirannon-FFmpegMultiplexer.Po
#	source='Multiplexer/FFmpegMultiplexer.cpp' object='sirannon-FFmpegMultiplexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FFmpegMultiplexer.obj `if test -f 'Multiplexer/FFmpegMultiplexer.cpp'; then $(CYGPATH_W) 'Multiplexer/FFmpegMultiplexer.cpp'; else $(CYGPATH_W) '$(srcdir)/Multiplexer/FFmpegMultiplexer.cpp'; fi`

sirannon-FFmpegDemultiplexer.o: Multiplexer/FFmpegDemultiplexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FFmpegDemultiplexer.o -MD -MP -MF $(DEPDIR)/sirannon-FFmpegDemultiplexer.Tpo -c -o sirannon-FFmpegDemultiplexer.o `test -f 'Multiplexer/FFmpegDemultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/FFmpegDemultiplexer.cpp
	$(am__mv) $(DEPDIR)/sirannon-FFmpegDemultiplexer.Tpo $(DEPDIR)/sirannon-FFmpegDemultiplexer.Po
#	source='Multiplexer/FFmpegDemultiplexer.cpp' object='sirannon-FFmpegDemultiplexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FFmpegDemultiplexer.o `test -f 'Multiplexer/FFmpegDemultiplexer.cpp' || echo '$(srcdir)/'`Multiplexer/FFmpegDemultiplexer.cpp

sirannon-FFmpegDemultiplexer.obj: Multiplexer/FFmpegDemultiplexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FFmpegDemultiplexer.obj -MD -MP -MF $(DEPDIR)/sirannon-FFmpegDemultiplexer.Tpo -c -o sirannon-FFmpegDemultiplexer.obj `if test -f 'Multiplexer/FFmpegDemultiplexer.cpp'; then $(CYGPATH_W) 'Multiplexer/FFmpegDemultiplexer.cpp'; else $(CYGPATH_W) '$(srcdir)/Multiplexer/FFmpegDemultiplexer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-FFmpegDemultiplexer.Tpo $(DEPDIR)/sirannon-FFmpegDemultiplexer.Po
#	source='Multiplexer/FFmpegDemultiplexer.cpp' object='sirannon-FFmpegDemultiplexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FFmpegDemultiplexer.obj `if test -f 'Multiplexer/FFmpegDemultiplexer.cpp'; then $(CYGPATH_W) 'Multiplexer/FFmpegDemultiplexer.cpp'; else $(CYGPATH_W) '$(srcdir)/Multiplexer/FFmpegDemultiplexer.cpp'; fi`

sirannon-Scheduler.o: Scheduler/Scheduler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Scheduler.o -MD -MP -MF $(DEPDIR)/sirannon-Scheduler.Tpo -c -o sirannon-Scheduler.o `test -f 'Scheduler/Scheduler.cpp' || echo '$(srcdir)/'`Scheduler/Scheduler.cpp
	$(am__mv) $(DEPDIR)/sirannon-Scheduler.Tpo $(DEPDIR)/sirannon-Scheduler.Po
#	source='Scheduler/Scheduler.cpp' object='sirannon-Scheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Scheduler.o `test -f 'Scheduler/Scheduler.cpp' || echo '$(srcdir)/'`Scheduler/Scheduler.cpp

sirannon-Scheduler.obj: Scheduler/Scheduler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Scheduler.obj -MD -MP -MF $(DEPDIR)/sirannon-Scheduler.Tpo -c -o sirannon-Scheduler.obj `if test -f 'Scheduler/Scheduler.cpp'; then $(CYGPATH_W) 'Scheduler/Scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/Scheduler/Scheduler.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Scheduler.Tpo $(DEPDIR)/sirannon-Scheduler.Po
#	source='Scheduler/Scheduler.cpp' object='sirannon-Scheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Scheduler.obj `if test -f 'Scheduler/Scheduler.cpp'; then $(CYGPATH_W) 'Scheduler/Scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/Scheduler/Scheduler.cpp'; fi`

sirannon-Communicator.o: Communicator/Communicator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Communicator.o -MD -MP -MF $(DEPDIR)/sirannon-Communicator.Tpo -c -o sirannon-Communicator.o `test -f 'Communicator/Communicator.cpp' || echo '$(srcdir)/'`Communicator/Communicator.cpp
	$(am__mv) $(DEPDIR)/sirannon-Communicator.Tpo $(DEPDIR)/sirannon-Communicator.Po
#	source='Communicator/Communicator.cpp' object='sirannon-Communicator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Communicator.o `test -f 'Communicator/Communicator.cpp' || echo '$(srcdir)/'`Communicator/Communicator.cpp

sirannon-Communicator.obj: Communicator/Communicator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Communicator.obj -MD -MP -MF $(DEPDIR)/sirannon-Communicator.Tpo -c -o sirannon-Communicator.obj `if test -f 'Communicator/Communicator.cpp'; then $(CYGPATH_W) 'Communicator/Communicator.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/Communicator.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Communicator.Tpo $(DEPDIR)/sirannon-Communicator.Po
#	source='Communicator/Communicator.cpp' object='sirannon-Communicator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Communicator.obj `if test -f 'Communicator/Communicator.cpp'; then $(CYGPATH_W) 'Communicator/Communicator.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/Communicator.cpp'; fi`

sirannon-MediaServer.o: Communicator/MediaServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MediaServer.o -MD -MP -MF $(DEPDIR)/sirannon-MediaServer.Tpo -c -o sirannon-MediaServer.o `test -f 'Communicator/MediaServer.cpp' || echo '$(srcdir)/'`Communicator/MediaServer.cpp
	$(am__mv) $(DEPDIR)/sirannon-MediaServer.Tpo $(DEPDIR)/sirannon-MediaServer.Po
#	source='Communicator/MediaServer.cpp' object='sirannon-MediaServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MediaServer.o `test -f 'Communicator/MediaServer.cpp' || echo '$(srcdir)/'`Communicator/MediaServer.cpp

sirannon-MediaServer.obj: Communicator/MediaServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MediaServer.obj -MD -MP -MF $(DEPDIR)/sirannon-MediaServer.Tpo -c -o sirannon-MediaServer.obj `if test -f 'Communicator/MediaServer.cpp'; then $(CYGPATH_W) 'Communicator/MediaServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/MediaServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-MediaServer.Tpo $(DEPDIR)/sirannon-MediaServer.Po
#	source='Communicator/MediaServer.cpp' object='sirannon-MediaServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MediaServer.obj `if test -f 'Communicator/MediaServer.cpp'; then $(CYGPATH_W) 'Communicator/MediaServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/MediaServer.cpp'; fi`

sirannon-MediaSession.o: Communicator/MediaSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MediaSession.o -MD -MP -MF $(DEPDIR)/sirannon-MediaSession.Tpo -c -o sirannon-MediaSession.o `test -f 'Communicator/MediaSession.cpp' || echo '$(srcdir)/'`Communicator/MediaSession.cpp
	$(am__mv) $(DEPDIR)/sirannon-MediaSession.Tpo $(DEPDIR)/sirannon-MediaSession.Po
#	source='Communicator/MediaSession.cpp' object='sirannon-MediaSession.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MediaSession.o `test -f 'Communicator/MediaSession.cpp' || echo '$(srcdir)/'`Communicator/MediaSession.cpp

sirannon-MediaSession.obj: Communicator/MediaSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MediaSession.obj -MD -MP -MF $(DEPDIR)/sirannon-MediaSession.Tpo -c -o sirannon-MediaSession.obj `if test -f 'Communicator/MediaSession.cpp'; then $(CYGPATH_W) 'Communicator/MediaSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/MediaSession.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-MediaSession.Tpo $(DEPDIR)/sirannon-MediaSession.Po
#	source='Communicator/MediaSession.cpp' object='sirannon-MediaSession.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MediaSession.obj `if test -f 'Communicator/MediaSession.cpp'; then $(CYGPATH_W) 'Communicator/MediaSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/MediaSession.cpp'; fi`

sirannon-RTPTransmitter.o: Communicator/RTPTransmitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTPTransmitter.o -MD -MP -MF $(DEPDIR)/sirannon-RTPTransmitter.Tpo -c -o sirannon-RTPTransmitter.o `test -f 'Communicator/RTPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/RTPTransmitter.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTPTransmitter.Tpo $(DEPDIR)/sirannon-RTPTransmitter.Po
#	source='Communicator/RTPTransmitter.cpp' object='sirannon-RTPTransmitter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTPTransmitter.o `test -f 'Communicator/RTPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/RTPTransmitter.cpp

sirannon-RTPTransmitter.obj: Communicator/RTPTransmitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTPTransmitter.obj -MD -MP -MF $(DEPDIR)/sirannon-RTPTransmitter.Tpo -c -o sirannon-RTPTransmitter.obj `if test -f 'Communicator/RTPTransmitter.cpp'; then $(CYGPATH_W) 'Communicator/RTPTransmitter.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTPTransmitter.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTPTransmitter.Tpo $(DEPDIR)/sirannon-RTPTransmitter.Po
#	source='Communicator/RTPTransmitter.cpp' object='sirannon-RTPTransmitter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTPTransmitter.obj `if test -f 'Communicator/RTPTransmitter.cpp'; then $(CYGPATH_W) 'Communicator/RTPTransmitter.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTPTransmitter.cpp'; fi`

sirannon-RTPReceiver.o: Communicator/RTPReceiver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTPReceiver.o -MD -MP -MF $(DEPDIR)/sirannon-RTPReceiver.Tpo -c -o sirannon-RTPReceiver.o `test -f 'Communicator/RTPReceiver.cpp' || echo '$(srcdir)/'`Communicator/RTPReceiver.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTPReceiver.Tpo $(DEPDIR)/sirannon-RTPReceiver.Po
#	source='Communicator/RTPReceiver.cpp' object='sirannon-RTPReceiver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTPReceiver.o `test -f 'Communicator/RTPReceiver.cpp' || echo '$(srcdir)/'`Communicator/RTPReceiver.cpp

sirannon-RTPReceiver.obj: Communicator/RTPReceiver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTPReceiver.obj -MD -MP -MF $(DEPDIR)/sirannon-RTPReceiver.Tpo -c -o sirannon-RTPReceiver.obj `if test -f 'Communicator/RTPReceiver.cpp'; then $(CYGPATH_W) 'Communicator/RTPReceiver.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTPReceiver.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTPReceiver.Tpo $(DEPDIR)/sirannon-RTPReceiver.Po
#	source='Communicator/RTPReceiver.cpp' object='sirannon-RTPReceiver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTPReceiver.obj `if test -f 'Communicator/RTPReceiver.cpp'; then $(CYGPATH_W) 'Communicator/RTPReceiver.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTPReceiver.cpp'; fi`

sirannon-UDPTransmitter.o: Communicator/UDPTransmitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-UDPTransmitter.o -MD -MP -MF $(DEPDIR)/sirannon-UDPTransmitter.Tpo -c -o sirannon-UDPTransmitter.o `test -f 'Communicator/UDPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/UDPTransmitter.cpp
	$(am__mv) $(DEPDIR)/sirannon-UDPTransmitter.Tpo $(DEPDIR)/sirannon-UDPTransmitter.Po
#	source='Communicator/UDPTransmitter.cpp' object='sirannon-UDPTransmitter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-UDPTransmitter.o `test -f 'Communicator/UDPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/UDPTransmitter.cpp

sirannon-UDPTransmitter.obj: Communicator/UDPTransmitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-UDPTransmitter.obj -MD -MP -MF $(DEPDIR)/sirannon-UDPTransmitter.Tpo -c -o sirannon-UDPTransmitter.obj `if test -f 'Communicator/UDPTransmitter.cpp'; then $(CYGPATH_W) 'Communicator/UDPTransmitter.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/UDPTransmitter.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-UDPTransmitter.Tpo $(DEPDIR)/sirannon-UDPTransmitter.Po
#	source='Communicator/UDPTransmitter.cpp' object='sirannon-UDPTransmitter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-UDPTransmitter.obj `if test -f 'Communicator/UDPTransmitter.cpp'; then $(CYGPATH_W) 'Communicator/UDPTransmitter.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/UDPTransmitter.cpp'; fi`

sirannon-UDPReceiver.o: Communicator/UDPReceiver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-UDPReceiver.o -MD -MP -MF $(DEPDIR)/sirannon-UDPReceiver.Tpo -c -o sirannon-UDPReceiver.o `test -f 'Communicator/UDPReceiver.cpp' || echo '$(srcdir)/'`Communicator/UDPReceiver.cpp
	$(am__mv) $(DEPDIR)/sirannon-UDPReceiver.Tpo $(DEPDIR)/sirannon-UDPReceiver.Po
#	source='Communicator/UDPReceiver.cpp' object='sirannon-UDPReceiver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-UDPReceiver.o `test -f 'Communicator/UDPReceiver.cpp' || echo '$(srcdir)/'`Communicator/UDPReceiver.cpp

sirannon-UDPReceiver.obj: Communicator/UDPReceiver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-UDPReceiver.obj -MD -MP -MF $(DEPDIR)/sirannon-UDPReceiver.Tpo -c -o sirannon-UDPReceiver.obj `if test -f 'Communicator/UDPReceiver.cpp'; then $(CYGPATH_W) 'Communicator/UDPReceiver.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/UDPReceiver.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-UDPReceiver.Tpo $(DEPDIR)/sirannon-UDPReceiver.Po
#	source='Communicator/UDPReceiver.cpp' object='sirannon-UDPReceiver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-UDPReceiver.obj `if test -f 'Communicator/UDPReceiver.cpp'; then $(CYGPATH_W) 'Communicator/UDPReceiver.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/UDPReceiver.cpp'; fi`

sirannon-TCPTransmitter.o: Communicator/TCPTransmitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TCPTransmitter.o -MD -MP -MF $(DEPDIR)/sirannon-TCPTransmitter.Tpo -c -o sirannon-TCPTransmitter.o `test -f 'Communicator/TCPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/TCPTransmitter.cpp
	$(am__mv) $(DEPDIR)/sirannon-TCPTransmitter.Tpo $(DEPDIR)/sirannon-TCPTransmitter.Po
#	source='Communicator/TCPTransmitter.cpp' object='sirannon-TCPTransmitter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TCPTransmitter.o `test -f 'Communicator/TCPTransmitter.cpp' || echo '$(srcdir)/'`Communicator/TCPTransmitter.cpp

sirannon-TCPTransmitter.obj: Communicator/TCPTransmitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TCPTransmitter.obj -MD -MP -MF $(DEPDIR)/sirannon-TCPTransmitter.Tpo -c -o sirannon-TCPTransmitter.obj `if test -f 'Communicator/TCPTransmitter.cpp'; then $(CYGPATH_W) 'Communicator/TCPTransmitter.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/TCPTransmitter.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-TCPTransmitter.Tpo $(DEPDIR)/sirannon-TCPTransmitter.Po
#	source='Communicator/TCPTransmitter.cpp' object='sirannon-TCPTransmitter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TCPTransmitter.obj `if test -f 'Communicator/TCPTransmitter.cpp'; then $(CYGPATH_W) 'Communicator/TCPTransmitter.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/TCPTransmitter.cpp'; fi`

sirannon-TCPReceiver.o: Communicator/TCPReceiver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TCPReceiver.o -MD -MP -MF $(DEPDIR)/sirannon-TCPReceiver.Tpo -c -o sirannon-TCPReceiver.o `test -f 'Communicator/TCPReceiver.cpp' || echo '$(srcdir)/'`Communicator/TCPReceiver.cpp
	$(am__mv) $(DEPDIR)/sirannon-TCPReceiver.Tpo $(DEPDIR)/sirannon-TCPReceiver.Po
#	source='Communicator/TCPReceiver.cpp' object='sirannon-TCPReceiver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TCPReceiver.o `test -f 'Communicator/TCPReceiver.cpp' || echo '$(srcdir)/'`Communicator/TCPReceiver.cpp

sirannon-TCPReceiver.obj: Communicator/TCPReceiver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TCPReceiver.obj -MD -MP -MF $(DEPDIR)/sirannon-TCPReceiver.Tpo -c -o sirannon-TCPReceiver.obj `if test -f 'Communicator/TCPReceiver.cpp'; then $(CYGPATH_W) 'Communicator/TCPReceiver.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/TCPReceiver.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-TCPReceiver.Tpo $(DEPDIR)/sirannon-TCPReceiver.Po
#	source='Communicator/TCPReceiver.cpp' object='sirannon-TCPReceiver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TCPReceiver.obj `if test -f 'Communicator/TCPReceiver.cpp'; then $(CYGPATH_W) 'Communicator/TCPReceiver.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/TCPReceiver.cpp'; fi`

sirannon-GigabitTransmitter.o: Communicator/GigabitTransmitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-GigabitTransmitter.o -MD -MP -MF $(DEPDIR)/sirannon-GigabitTransmitter.Tpo -c -o sirannon-GigabitTransmitter.o `test -f 'Communicator/GigabitTransmitter.cpp' || echo '$(srcdir)/'`Communicator/GigabitTransmitter.cpp
	$(am__mv) $(DEPDIR)/sirannon-GigabitTransmitter.Tpo $(DEPDIR)/sirannon-GigabitTransmitter.Po
#	source='Communicator/GigabitTransmitter.cpp' object='sirannon-GigabitTransmitter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-GigabitTransmitter.o `test -f 'Communicator/GigabitTransmitter.cpp' || echo '$(srcdir)/'`Communicator/GigabitTransmitter.cpp

sirannon-GigabitTransmitter.obj: Communicator/GigabitTransmitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-GigabitTransmitter.obj -MD -MP -MF $(DEPDIR)/sirannon-GigabitTransmitter.Tpo -c -o sirannon-GigabitTransmitter.obj `if test -f 'Communicator/GigabitTransmitter.cpp'; then $(CYGPATH_W) 'Communicator/GigabitTransmitter.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/GigabitTransmitter.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-GigabitTransmitter.Tpo $(DEPDIR)/sirannon-GigabitTransmitter.Po
#	source='Communicator/GigabitTransmitter.cpp' object='sirannon-GigabitTransmitter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-GigabitTransmitter.obj `if test -f 'Communicator/GigabitTransmitter.cpp'; then $(CYGPATH_W) 'Communicator/GigabitTransmitter.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/GigabitTransmitter.cpp'; fi`

sirannon-HTTPConnection.o: Communicator/HTTP/HTTPConnection.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-HTTPConnection.o -MD -MP -MF $(DEPDIR)/sirannon-HTTPConnection.Tpo -c -o sirannon-HTTPConnection.o `test -f 'Communicator/HTTP/HTTPConnection.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPConnection.cpp
	$(am__mv) $(DEPDIR)/sirannon-HTTPConnection.Tpo $(DEPDIR)/sirannon-HTTPConnection.Po
#	source='Communicator/HTTP/HTTPConnection.cpp' object='sirannon-HTTPConnection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-HTTPConnection.o `test -f 'Communicator/HTTP/HTTPConnection.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPConnection.cpp

sirannon-HTTPConnection.obj: Communicator/HTTP/HTTPConnection.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-HTTPConnection.obj -MD -MP -MF $(DEPDIR)/sirannon-HTTPConnection.Tpo -c -o sirannon-HTTPConnection.obj `if test -f 'Communicator/HTTP/HTTPConnection.cpp'; then $(CYGPATH_W) 'Communicator/HTTP/HTTPConnection.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/HTTP/HTTPConnection.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-HTTPConnection.Tpo $(DEPDIR)/sirannon-HTTPConnection.Po
#	source='Communicator/HTTP/HTTPConnection.cpp' object='sirannon-HTTPConnection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-HTTPConnection.obj `if test -f 'Communicator/HTTP/HTTPConnection.cpp'; then $(CYGPATH_W) 'Communicator/HTTP/HTTPConnection.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/HTTP/HTTPConnection.cpp'; fi`

sirannon-HTTPServer.o: Communicator/HTTP/HTTPServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-HTTPServer.o -MD -MP -MF $(DEPDIR)/sirannon-HTTPServer.Tpo -c -o sirannon-HTTPServer.o `test -f 'Communicator/HTTP/HTTPServer.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPServer.cpp
	$(am__mv) $(DEPDIR)/sirannon-HTTPServer.Tpo $(DEPDIR)/sirannon-HTTPServer.Po
#	source='Communicator/HTTP/HTTPServer.cpp' object='sirannon-HTTPServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-HTTPServer.o `test -f 'Communicator/HTTP/HTTPServer.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPServer.cpp

sirannon-HTTPServer.obj: Communicator/HTTP/HTTPServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-HTTPServer.obj -MD -MP -MF $(DEPDIR)/sirannon-HTTPServer.Tpo -c -o sirannon-HTTPServer.obj `if test -f 'Communicator/HTTP/HTTPServer.cpp'; then $(CYGPATH_W) 'Communicator/HTTP/HTTPServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/HTTP/HTTPServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-HTTPServer.Tpo $(DEPDIR)/sirannon-HTTPServer.Po
#	source='Communicator/HTTP/HTTPServer.cpp' object='sirannon-HTTPServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-HTTPServer.obj `if test -f 'Communicator/HTTP/HTTPServer.cpp'; then $(CYGPATH_W) 'Communicator/HTTP/HTTPServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/HTTP/HTTPServer.cpp'; fi`

sirannon-HTTPSession.o: Communicator/HTTP/HTTPSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-HTTPSession.o -MD -MP -MF $(DEPDIR)/sirannon-HTTPSession.Tpo -c -o sirannon-HTTPSession.o `test -f 'Communicator/HTTP/HTTPSession.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPSession.cpp
	$(am__mv) $(DEPDIR)/sirannon-HTTPSession.Tpo $(DEPDIR)/sirannon-HTTPSession.Po
#	source='Communicator/HTTP/HTTPSession.cpp' object='sirannon-HTTPSession.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-HTTPSession.o `test -f 'Communicator/HTTP/HTTPSession.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPSession.cpp

sirannon-HTTPSession.obj: Communicator/HTTP/HTTPSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-HTTPSession.obj -MD -MP -MF $(DEPDIR)/sirannon-HTTPSession.Tpo -c -o sirannon-HTTPSession.obj `if test -f 'Communicator/HTTP/HTTPSession.cpp'; then $(CYGPATH_W) 'Communicator/HTTP/HTTPSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/HTTP/HTTPSession.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-HTTPSession.Tpo $(DEPDIR)/sirannon-HTTPSession.Po
#	source='Communicator/HTTP/HTTPSession.cpp' object='sirannon-HTTPSession.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-HTTPSession.obj `if test -f 'Communicator/HTTP/HTTPSession.cpp'; then $(CYGPATH_W) 'Communicator/HTTP/HTTPSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/HTTP/HTTPSession.cpp'; fi`

sirannon-HTTPClient.o: Communicator/HTTP/HTTPClient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-HTTPClient.o -MD -MP -MF $(DEPDIR)/sirannon-HTTPClient.Tpo -c -o sirannon-HTTPClient.o `test -f 'Communicator/HTTP/HTTPClient.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPClient.cpp
	$(am__mv) $(DEPDIR)/sirannon-HTTPClient.Tpo $(DEPDIR)/sirannon-HTTPClient.Po
#	source='Communicator/HTTP/HTTPClient.cpp' object='sirannon-HTTPClient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-HTTPClient.o `test -f 'Communicator/HTTP/HTTPClient.cpp' || echo '$(srcdir)/'`Communicator/HTTP/HTTPClient.cpp

sirannon-HTTPClient.obj: Communicator/HTTP/HTTPClient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-HTTPClient.obj -MD -MP -MF $(DEPDIR)/sirannon-HTTPClient.Tpo -c -o sirannon-HTTPClient.obj `if test -f 'Communicator/HTTP/HTTPClient.cpp'; then $(CYGPATH_W) 'Communicator/HTTP/HTTPClient.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/HTTP/HTTPClient.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-HTTPClient.Tpo $(DEPDIR)/sirannon-HTTPClient.Po
#	source='Communicator/HTTP/HTTPClient.cpp' object='sirannon-HTTPClient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-HTTPClient.obj `if test -f 'Communicator/HTTP/HTTPClient.cpp'; then $(CYGPATH_W) 'Communicator/HTTP/HTTPClient.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/HTTP/HTTPClient.cpp'; fi`

sirannon-RTSPSession.o: Communicator/RTSP/RTSPSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTSPSession.o -MD -MP -MF $(DEPDIR)/sirannon-RTSPSession.Tpo -c -o sirannon-RTSPSession.o `test -f 'Communicator/RTSP/RTSPSession.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPSession.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTSPSession.Tpo $(DEPDIR)/sirannon-RTSPSession.Po
#	source='Communicator/RTSP/RTSPSession.cpp' object='sirannon-RTSPSession.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTSPSession.o `test -f 'Communicator/RTSP/RTSPSession.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPSession.cpp

sirannon-RTSPSession.obj: Communicator/RTSP/RTSPSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTSPSession.obj -MD -MP -MF $(DEPDIR)/sirannon-RTSPSession.Tpo -c -o sirannon-RTSPSession.obj `if test -f 'Communicator/RTSP/RTSPSession.cpp'; then $(CYGPATH_W) 'Communicator/RTSP/RTSPSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTSP/RTSPSession.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTSPSession.Tpo $(DEPDIR)/sirannon-RTSPSession.Po
#	source='Communicator/RTSP/RTSPSession.cpp' object='sirannon-RTSPSession.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTSPSession.obj `if test -f 'Communicator/RTSP/RTSPSession.cpp'; then $(CYGPATH_W) 'Communicator/RTSP/RTSPSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTSP/RTSPSession.cpp'; fi`

sirannon-RTSPServer.o: Communicator/RTSP/RTSPServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTSPServer.o -MD -MP -MF $(DEPDIR)/sirannon-RTSPServer.Tpo -c -o sirannon-RTSPServer.o `test -f 'Communicator/RTSP/RTSPServer.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPServer.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTSPServer.Tpo $(DEPDIR)/sirannon-RTSPServer.Po
#	source='Communicator/RTSP/RTSPServer.cpp' object='sirannon-RTSPServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTSPServer.o `test -f 'Communicator/RTSP/RTSPServer.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPServer.cpp

sirannon-RTSPServer.obj: Communicator/RTSP/RTSPServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTSPServer.obj -MD -MP -MF $(DEPDIR)/sirannon-RTSPServer.Tpo -c -o sirannon-RTSPServer.obj `if test -f 'Communicator/RTSP/RTSPServer.cpp'; then $(CYGPATH_W) 'Communicator/RTSP/RTSPServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTSP/RTSPServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTSPServer.Tpo $(DEPDIR)/sirannon-RTSPServer.Po
#	source='Communicator/RTSP/RTSPServer.cpp' object='sirannon-RTSPServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTSPServer.obj `if test -f 'Communicator/RTSP/RTSPServer.cpp'; then $(CYGPATH_W) 'Communicator/RTSP/RTSPServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTSP/RTSPServer.cpp'; fi`

sirannon-RTSPClient.o: Communicator/RTSP/RTSPClient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTSPClient.o -MD -MP -MF $(DEPDIR)/sirannon-RTSPClient.Tpo -c -o sirannon-RTSPClient.o `test -f 'Communicator/RTSP/RTSPClient.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPClient.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTSPClient.Tpo $(DEPDIR)/sirannon-RTSPClient.Po
#	source='Communicator/RTSP/RTSPClient.cpp' object='sirannon-RTSPClient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTSPClient.o `test -f 'Communicator/RTSP/RTSPClient.cpp' || echo '$(srcdir)/'`Communicator/RTSP/RTSPClient.cpp

sirannon-RTSPClient.obj: Communicator/RTSP/RTSPClient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTSPClient.obj -MD -MP -MF $(DEPDIR)/sirannon-RTSPClient.Tpo -c -o sirannon-RTSPClient.obj `if test -f 'Communicator/RTSP/RTSPClient.cpp'; then $(CYGPATH_W) 'Communicator/RTSP/RTSPClient.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTSP/RTSPClient.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTSPClient.Tpo $(DEPDIR)/sirannon-RTSPClient.Po
#	source='Communicator/RTSP/RTSPClient.cpp' object='sirannon-RTSPClient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTSPClient.obj `if test -f 'Communicator/RTSP/RTSPClient.cpp'; then $(CYGPATH_W) 'Communicator/RTSP/RTSPClient.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTSP/RTSPClient.cpp'; fi`

sirannon-RTMP_AMF.o: Communicator/RTMP/RTMP_AMF.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMP_AMF.o -MD -MP -MF $(DEPDIR)/sirannon-RTMP_AMF.Tpo -c -o sirannon-RTMP_AMF.o `test -f 'Communicator/RTMP/RTMP_AMF.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMP_AMF.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTMP_AMF.Tpo $(DEPDIR)/sirannon-RTMP_AMF.Po
#	source='Communicator/RTMP/RTMP_AMF.cpp' object='sirannon-RTMP_AMF.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMP_AMF.o `test -f 'Communicator/RTMP/RTMP_AMF.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMP_AMF.cpp

sirannon-RTMP_AMF.obj: Communicator/RTMP/RTMP_AMF.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMP_AMF.obj -MD -MP -MF $(DEPDIR)/sirannon-RTMP_AMF.Tpo -c -o sirannon-RTMP_AMF.obj `if test -f 'Communicator/RTMP/RTMP_AMF.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMP_AMF.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMP_AMF.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTMP_AMF.Tpo $(DEPDIR)/sirannon-RTMP_AMF.Po
#	source='Communicator/RTMP/RTMP_AMF.cpp' object='sirannon-RTMP_AMF.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMP_AMF.obj `if test -f 'Communicator/RTMP/RTMP_AMF.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMP_AMF.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMP_AMF.cpp'; fi`

sirannon-RTMPHandshake.o: Communicator/RTMP/RTMPHandshake.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPHandshake.o -MD -MP -MF $(DEPDIR)/sirannon-RTMPHandshake.Tpo -c -o sirannon-RTMPHandshake.o `test -f 'Communicator/RTMP/RTMPHandshake.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPHandshake.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTMPHandshake.Tpo $(DEPDIR)/sirannon-RTMPHandshake.Po
#	source='Communicator/RTMP/RTMPHandshake.cpp' object='sirannon-RTMPHandshake.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPHandshake.o `test -f 'Communicator/RTMP/RTMPHandshake.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPHandshake.cpp

sirannon-RTMPHandshake.obj: Communicator/RTMP/RTMPHandshake.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPHandshake.obj -MD -MP -MF $(DEPDIR)/sirannon-RTMPHandshake.Tpo -c -o sirannon-RTMPHandshake.obj `if test -f 'Communicator/RTMP/RTMPHandshake.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPHandshake.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPHandshake.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTMPHandshake.Tpo $(DEPDIR)/sirannon-RTMPHandshake.Po
#	source='Communicator/RTMP/RTMPHandshake.cpp' object='sirannon-RTMPHandshake.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPHandshake.obj `if test -f 'Communicator/RTMP/RTMPHandshake.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPHandshake.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPHandshake.cpp'; fi`

sirannon-RTMPChunkStream.o: Communicator/RTMP/RTMPChunkStream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPChunkStream.o -MD -MP -MF $(DEPDIR)/sirannon-RTMPChunkStream.Tpo -c -o sirannon-RTMPChunkStream.o `test -f 'Communicator/RTMP/RTMPChunkStream.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPChunkStream.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTMPChunkStream.Tpo $(DEPDIR)/sirannon-RTMPChunkStream.Po
#	source='Communicator/RTMP/RTMPChunkStream.cpp' object='sirannon-RTMPChunkStream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPChunkStream.o `test -f 'Communicator/RTMP/RTMPChunkStream.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPChunkStream.cpp

sirannon-RTMPChunkStream.obj: Communicator/RTMP/RTMPChunkStream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPChunkStream.obj -MD -MP -MF $(DEPDIR)/sirannon-RTMPChunkStream.Tpo -c -o sirannon-RTMPChunkStream.obj `if test -f 'Communicator/RTMP/RTMPChunkStream.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPChunkStream.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPChunkStream.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTMPChunkStream.Tpo $(DEPDIR)/sirannon-RTMPChunkStream.Po
#	source='Communicator/RTMP/RTMPChunkStream.cpp' object='sirannon-RTMPChunkStream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPChunkStream.obj `if test -f 'Communicator/RTMP/RTMPChunkStream.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPChunkStream.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPChunkStream.cpp'; fi`

sirannon-RTMPSession.o: Communicator/RTMP/RTMPSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPSession.o -MD -MP -MF $(DEPDIR)/sirannon-RTMPSession.Tpo -c -o sirannon-RTMPSession.o `test -f 'Communicator/RTMP/RTMPSession.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPSession.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTMPSession.Tpo $(DEPDIR)/sirannon-RTMPSession.Po
#	source='Communicator/RTMP/RTMPSession.cpp' object='sirannon-RTMPSession.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPSession.o `test -f 'Communicator/RTMP/RTMPSession.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPSession.cpp

sirannon-RTMPSession.obj: Communicator/RTMP/RTMPSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPSession.obj -MD -MP -MF $(DEPDIR)/sirannon-RTMPSession.Tpo -c -o sirannon-RTMPSession.obj `if test -f 'Communicator/RTMP/RTMPSession.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPSession.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTMPSession.Tpo $(DEPDIR)/sirannon-RTMPSession.Po
#	source='Communicator/RTMP/RTMPSession.cpp' object='sirannon-RTMPSession.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPSession.obj `if test -f 'Communicator/RTMP/RTMPSession.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPSession.cpp'; fi`

sirannon-RTMPTConnection.o: Communicator/RTMP/RTMPTConnection.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPTConnection.o -MD -MP -MF $(DEPDIR)/sirannon-RTMPTConnection.Tpo -c -o sirannon-RTMPTConnection.o `test -f 'Communicator/RTMP/RTMPTConnection.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTConnection.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTMPTConnection.Tpo $(DEPDIR)/sirannon-RTMPTConnection.Po
#	source='Communicator/RTMP/RTMPTConnection.cpp' object='sirannon-RTMPTConnection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPTConnection.o `test -f 'Communicator/RTMP/RTMPTConnection.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTConnection.cpp

sirannon-RTMPTConnection.obj: Communicator/RTMP/RTMPTConnection.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPTConnection.obj -MD -MP -MF $(DEPDIR)/sirannon-RTMPTConnection.Tpo -c -o sirannon-RTMPTConnection.obj `if test -f 'Communicator/RTMP/RTMPTConnection.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPTConnection.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPTConnection.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTMPTConnection.Tpo $(DEPDIR)/sirannon-RTMPTConnection.Po
#	source='Communicator/RTMP/RTMPTConnection.cpp' object='sirannon-RTMPTConnection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPTConnection.obj `if test -f 'Communicator/RTMP/RTMPTConnection.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPTConnection.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPTConnection.cpp'; fi`

sirannon-RTMPServer.o: Communicator/RTMP/RTMPServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPServer.o -MD -MP -MF $(DEPDIR)/sirannon-RTMPServer.Tpo -c -o sirannon-RTMPServer.o `test -f 'Communicator/RTMP/RTMPServer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPServer.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTMPServer.Tpo $(DEPDIR)/sirannon-RTMPServer.Po
#	source='Communicator/RTMP/RTMPServer.cpp' object='sirannon-RTMPServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPServer.o `test -f 'Communicator/RTMP/RTMPServer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPServer.cpp

sirannon-RTMPServer.obj: Communicator/RTMP/RTMPServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPServer.obj -MD -MP -MF $(DEPDIR)/sirannon-RTMPServer.Tpo -c -o sirannon-RTMPServer.obj `if test -f 'Communicator/RTMP/RTMPServer.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTMPServer.Tpo $(DEPDIR)/sirannon-RTMPServer.Po
#	source='Communicator/RTMP/RTMPServer.cpp' object='sirannon-RTMPServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPServer.obj `if test -f 'Communicator/RTMP/RTMPServer.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPServer.cpp'; fi`

sirannon-RTMPTServer.o: Communicator/RTMP/RTMPTServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPTServer.o -MD -MP -MF $(DEPDIR)/sirannon-RTMPTServer.Tpo -c -o sirannon-RTMPTServer.o `test -f 'Communicator/RTMP/RTMPTServer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTServer.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTMPTServer.Tpo $(DEPDIR)/sirannon-RTMPTServer.Po
#	source='Communicator/RTMP/RTMPTServer.cpp' object='sirannon-RTMPTServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPTServer.o `test -f 'Communicator/RTMP/RTMPTServer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTServer.cpp

sirannon-RTMPTServer.obj: Communicator/RTMP/RTMPTServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPTServer.obj -MD -MP -MF $(DEPDIR)/sirannon-RTMPTServer.Tpo -c -o sirannon-RTMPTServer.obj `if test -f 'Communicator/RTMP/RTMPTServer.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPTServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPTServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTMPTServer.Tpo $(DEPDIR)/sirannon-RTMPTServer.Po
#	source='Communicator/RTMP/RTMPTServer.cpp' object='sirannon-RTMPTServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPTServer.obj `if test -f 'Communicator/RTMP/RTMPTServer.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPTServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPTServer.cpp'; fi`

sirannon-RTMPPacketizer.o: Communicator/RTMP/RTMPPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPPacketizer.o -MD -MP -MF $(DEPDIR)/sirannon-RTMPPacketizer.Tpo -c -o sirannon-RTMPPacketizer.o `test -f 'Communicator/RTMP/RTMPPacketizer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPPacketizer.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTMPPacketizer.Tpo $(DEPDIR)/sirannon-RTMPPacketizer.Po
#	source='Communicator/RTMP/RTMPPacketizer.cpp' object='sirannon-RTMPPacketizer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPPacketizer.o `test -f 'Communicator/RTMP/RTMPPacketizer.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPPacketizer.cpp

sirannon-RTMPPacketizer.obj: Communicator/RTMP/RTMPPacketizer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPPacketizer.obj -MD -MP -MF $(DEPDIR)/sirannon-RTMPPacketizer.Tpo -c -o sirannon-RTMPPacketizer.obj `if test -f 'Communicator/RTMP/RTMPPacketizer.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPPacketizer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTMPPacketizer.Tpo $(DEPDIR)/sirannon-RTMPPacketizer.Po
#	source='Communicator/RTMP/RTMPPacketizer.cpp' object='sirannon-RTMPPacketizer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPPacketizer.obj `if test -f 'Communicator/RTMP/RTMPPacketizer.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPPacketizer.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPPacketizer.cpp'; fi`

sirannon-RTMPClient.o: Communicator/RTMP/RTMPClient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPClient.o -MD -MP -MF $(DEPDIR)/sirannon-RTMPClient.Tpo -c -o sirannon-RTMPClient.o `test -f 'Communicator/RTMP/RTMPClient.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPClient.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTMPClient.Tpo $(DEPDIR)/sirannon-RTMPClient.Po
#	source='Communicator/RTMP/RTMPClient.cpp' object='sirannon-RTMPClient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPClient.o `test -f 'Communicator/RTMP/RTMPClient.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPClient.cpp

sirannon-RTMPClient.obj: Communicator/RTMP/RTMPClient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPClient.obj -MD -MP -MF $(DEPDIR)/sirannon-RTMPClient.Tpo -c -o sirannon-RTMPClient.obj `if test -f 'Communicator/RTMP/RTMPClient.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPClient.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPClient.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTMPClient.Tpo $(DEPDIR)/sirannon-RTMPClient.Po
#	source='Communicator/RTMP/RTMPClient.cpp' object='sirannon-RTMPClient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPClient.obj `if test -f 'Communicator/RTMP/RTMPClient.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPClient.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPClient.cpp'; fi`

sirannon-RTMPTClient.o: Communicator/RTMP/RTMPTClient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPTClient.o -MD -MP -MF $(DEPDIR)/sirannon-RTMPTClient.Tpo -c -o sirannon-RTMPTClient.o `test -f 'Communicator/RTMP/RTMPTClient.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTClient.cpp
	$(am__mv) $(DEPDIR)/sirannon-RTMPTClient.Tpo $(DEPDIR)/sirannon-RTMPTClient.Po
#	source='Communicator/RTMP/RTMPTClient.cpp' object='sirannon-RTMPTClient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPTClient.o `test -f 'Communicator/RTMP/RTMPTClient.cpp' || echo '$(srcdir)/'`Communicator/RTMP/RTMPTClient.cpp

sirannon-RTMPTClient.obj: Communicator/RTMP/RTMPTClient.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RTMPTClient.obj -MD -MP -MF $(DEPDIR)/sirannon-RTMPTClient.Tpo -c -o sirannon-RTMPTClient.obj `if test -f 'Communicator/RTMP/RTMPTClient.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPTClient.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPTClient.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RTMPTClient.Tpo $(DEPDIR)/sirannon-RTMPTClient.Po
#	source='Communicator/RTMP/RTMPTClient.cpp' object='sirannon-RTMPTClient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RTMPTClient.obj `if test -f 'Communicator/RTMP/RTMPTClient.cpp'; then $(CYGPATH_W) 'Communicator/RTMP/RTMPTClient.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/RTMP/RTMPTClient.cpp'; fi`

sirannon-Classifier.o: Classifier/Classifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Classifier.o -MD -MP -MF $(DEPDIR)/sirannon-Classifier.Tpo -c -o sirannon-Classifier.o `test -f 'Classifier/Classifier.cpp' || echo '$(srcdir)/'`Classifier/Classifier.cpp
	$(am__mv) $(DEPDIR)/sirannon-Classifier.Tpo $(DEPDIR)/sirannon-Classifier.Po
#	source='Classifier/Classifier.cpp' object='sirannon-Classifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Classifier.o `test -f 'Classifier/Classifier.cpp' || echo '$(srcdir)/'`Classifier/Classifier.cpp

sirannon-Classifier.obj: Classifier/Classifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Classifier.obj -MD -MP -MF $(DEPDIR)/sirannon-Classifier.Tpo -c -o sirannon-Classifier.obj `if test -f 'Classifier/Classifier.cpp'; then $(CYGPATH_W) 'Classifier/Classifier.cpp'; else $(CYGPATH_W) '$(srcdir)/Classifier/Classifier.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Classifier.Tpo $(DEPDIR)/sirannon-Classifier.Po
#	source='Classifier/Classifier.cpp' object='sirannon-Classifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Classifier.obj `if test -f 'Classifier/Classifier.cpp'; then $(CYGPATH_W) 'Classifier/Classifier.cpp'; else $(CYGPATH_W) '$(srcdir)/Classifier/Classifier.cpp'; fi`

sirannon-SVCClassifier.o: Classifier/SVCClassifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SVCClassifier.o -MD -MP -MF $(DEPDIR)/sirannon-SVCClassifier.Tpo -c -o sirannon-SVCClassifier.o `test -f 'Classifier/SVCClassifier.cpp' || echo '$(srcdir)/'`Classifier/SVCClassifier.cpp
	$(am__mv) $(DEPDIR)/sirannon-SVCClassifier.Tpo $(DEPDIR)/sirannon-SVCClassifier.Po
#	source='Classifier/SVCClassifier.cpp' object='sirannon-SVCClassifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SVCClassifier.o `test -f 'Classifier/SVCClassifier.cpp' || echo '$(srcdir)/'`Classifier/SVCClassifier.cpp

sirannon-SVCClassifier.obj: Classifier/SVCClassifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SVCClassifier.obj -MD -MP -MF $(DEPDIR)/sirannon-SVCClassifier.Tpo -c -o sirannon-SVCClassifier.obj `if test -f 'Classifier/SVCClassifier.cpp'; then $(CYGPATH_W) 'Classifier/SVCClassifier.cpp'; else $(CYGPATH_W) '$(srcdir)/Classifier/SVCClassifier.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-SVCClassifier.Tpo $(DEPDIR)/sirannon-SVCClassifier.Po
#	source='Classifier/SVCClassifier.cpp' object='sirannon-SVCClassifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SVCClassifier.obj `if test -f 'Classifier/SVCClassifier.cpp'; then $(CYGPATH_W) 'Classifier/SVCClassifier.cpp'; else $(CYGPATH_W) '$(srcdir)/Classifier/SVCClassifier.cpp'; fi`

sirannon-Writer.o: Writer/Writer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Writer.o -MD -MP -MF $(DEPDIR)/sirannon-Writer.Tpo -c -o sirannon-Writer.o `test -f 'Writer/Writer.cpp' || echo '$(srcdir)/'`Writer/Writer.cpp
	$(am__mv) $(DEPDIR)/sirannon-Writer.Tpo $(DEPDIR)/sirannon-Writer.Po
#	source='Writer/Writer.cpp' object='sirannon-Writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Writer.o `test -f 'Writer/Writer.cpp' || echo '$(srcdir)/'`Writer/Writer.cpp

sirannon-Writer.obj: Writer/Writer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Writer.obj -MD -MP -MF $(DEPDIR)/sirannon-Writer.Tpo -c -o sirannon-Writer.obj `if test -f 'Writer/Writer.cpp'; then $(CYGPATH_W) 'Writer/Writer.cpp'; else $(CYGPATH_W) '$(srcdir)/Writer/Writer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Writer.Tpo $(DEPDIR)/sirannon-Writer.Po
#	source='Writer/Writer.cpp' object='sirannon-Writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Writer.obj `if test -f 'Writer/Writer.cpp'; then $(CYGPATH_W) 'Writer/Writer.cpp'; else $(CYGPATH_W) '$(srcdir)/Writer/Writer.cpp'; fi`

sirannon-FFmpegWriter.o: Writer/FFmpegWriter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FFmpegWriter.o -MD -MP -MF $(DEPDIR)/sirannon-FFmpegWriter.Tpo -c -o sirannon-FFmpegWriter.o `test -f 'Writer/FFmpegWriter.cpp' || echo '$(srcdir)/'`Writer/FFmpegWriter.cpp
	$(am__mv) $(DEPDIR)/sirannon-FFmpegWriter.Tpo $(DEPDIR)/sirannon-FFmpegWriter.Po
#	source='Writer/FFmpegWriter.cpp' object='sirannon-FFmpegWriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FFmpegWriter.o `test -f 'Writer/FFmpegWriter.cpp' || echo '$(srcdir)/'`Writer/FFmpegWriter.cpp

sirannon-FFmpegWriter.obj: Writer/FFmpegWriter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FFmpegWriter.obj -MD -MP -MF $(DEPDIR)/sirannon-FFmpegWriter.Tpo -c -o sirannon-FFmpegWriter.obj `if test -f 'Writer/FFmpegWriter.cpp'; then $(CYGPATH_W) 'Writer/FFmpegWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/Writer/FFmpegWriter.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-FFmpegWriter.Tpo $(DEPDIR)/sirannon-FFmpegWriter.Po
#	source='Writer/FFmpegWriter.cpp' object='sirannon-FFmpegWriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FFmpegWriter.obj `if test -f 'Writer/FFmpegWriter.cpp'; then $(CYGPATH_W) 'Writer/FFmpegWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/Writer/FFmpegWriter.cpp'; fi`

sirannon-FrameTransformer.o: Transform/FrameTransformer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FrameTransformer.o -MD -MP -MF $(DEPDIR)/sirannon-FrameTransformer.Tpo -c -o sirannon-FrameTransformer.o `test -f 'Transform/FrameTransformer.cpp' || echo '$(srcdir)/'`Transform/FrameTransformer.cpp
	$(am__mv) $(DEPDIR)/sirannon-FrameTransformer.Tpo $(DEPDIR)/sirannon-FrameTransformer.Po
#	source='Transform/FrameTransformer.cpp' object='sirannon-FrameTransformer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FrameTransformer.o `test -f 'Transform/FrameTransformer.cpp' || echo '$(srcdir)/'`Transform/FrameTransformer.cpp

sirannon-FrameTransformer.obj: Transform/FrameTransformer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FrameTransformer.obj -MD -MP -MF $(DEPDIR)/sirannon-FrameTransformer.Tpo -c -o sirannon-FrameTransformer.obj `if test -f 'Transform/FrameTransformer.cpp'; then $(CYGPATH_W) 'Transform/FrameTransformer.cpp'; else $(CYGPATH_W) '$(srcdir)/Transform/FrameTransformer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-FrameTransformer.Tpo $(DEPDIR)/sirannon-FrameTransformer.Po
#	source='Transform/FrameTransformer.cpp' object='sirannon-FrameTransformer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FrameTransformer.obj `if test -f 'Transform/FrameTransformer.cpp'; then $(CYGPATH_W) 'Transform/FrameTransformer.cpp'; else $(CYGPATH_W) '$(srcdir)/Transform/FrameTransformer.cpp'; fi`

sirannon-Transcoder.o: Transform/Transcoder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Transcoder.o -MD -MP -MF $(DEPDIR)/sirannon-Transcoder.Tpo -c -o sirannon-Transcoder.o `test -f 'Transform/Transcoder.cpp' || echo '$(srcdir)/'`Transform/Transcoder.cpp
	$(am__mv) $(DEPDIR)/sirannon-Transcoder.Tpo $(DEPDIR)/sirannon-Transcoder.Po
#	source='Transform/Transcoder.cpp' object='sirannon-Transcoder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Transcoder.o `test -f 'Transform/Transcoder.cpp' || echo '$(srcdir)/'`Transform/Transcoder.cpp

sirannon-Transcoder.obj: Transform/Transcoder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Transcoder.obj -MD -MP -MF $(DEPDIR)/sirannon-Transcoder.Tpo -c -o sirannon-Transcoder.obj `if test -f 'Transform/Transcoder.cpp'; then $(CYGPATH_W) 'Transform/Transcoder.cpp'; else $(CYGPATH_W) '$(srcdir)/Transform/Transcoder.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Transcoder.Tpo $(DEPDIR)/sirannon-Transcoder.Po
#	source='Transform/Transcoder.cpp' object='sirannon-Transcoder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Transcoder.obj `if test -f 'Transform/Transcoder.cpp'; then $(CYGPATH_W) 'Transform/Transcoder.cpp'; else $(CYGPATH_W) '$(srcdir)/Transform/Transcoder.cpp'; fi`

sirannon-TranscoderAudio.o: Transform/TranscoderAudio.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TranscoderAudio.o -MD -MP -MF $(DEPDIR)/sirannon-TranscoderAudio.Tpo -c -o sirannon-TranscoderAudio.o `test -f 'Transform/TranscoderAudio.cpp' || echo '$(srcdir)/'`Transform/TranscoderAudio.cpp
	$(am__mv) $(DEPDIR)/sirannon-TranscoderAudio.Tpo $(DEPDIR)/sirannon-TranscoderAudio.Po
#	source='Transform/TranscoderAudio.cpp' object='sirannon-TranscoderAudio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TranscoderAudio.o `test -f 'Transform/TranscoderAudio.cpp' || echo '$(srcdir)/'`Transform/TranscoderAudio.cpp

sirannon-TranscoderAudio.obj: Transform/TranscoderAudio.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-TranscoderAudio.obj -MD -MP -MF $(DEPDIR)/sirannon-TranscoderAudio.Tpo -c -o sirannon-TranscoderAudio.obj `if test -f 'Transform/TranscoderAudio.cpp'; then $(CYGPATH_W) 'Transform/TranscoderAudio.cpp'; else $(CYGPATH_W) '$(srcdir)/Transform/TranscoderAudio.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-TranscoderAudio.Tpo $(DEPDIR)/sirannon-TranscoderAudio.Po
#	source='Transform/TranscoderAudio.cpp' object='sirannon-TranscoderAudio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-TranscoderAudio.obj `if test -f 'Transform/TranscoderAudio.cpp'; then $(CYGPATH_W) 'Transform/TranscoderAudio.cpp'; else $(CYGPATH_W) '$(srcdir)/Transform/TranscoderAudio.cpp'; fi`

sirannon-FFmpegDecoder.o: Transform/FFmpegDecoder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FFmpegDecoder.o -MD -MP -MF $(DEPDIR)/sirannon-FFmpegDecoder.Tpo -c -o sirannon-FFmpegDecoder.o `test -f 'Transform/FFmpegDecoder.cpp' || echo '$(srcdir)/'`Transform/FFmpegDecoder.cpp
	$(am__mv) $(DEPDIR)/sirannon-FFmpegDecoder.Tpo $(DEPDIR)/sirannon-FFmpegDecoder.Po
#	source='Transform/FFmpegDecoder.cpp' object='sirannon-FFmpegDecoder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FFmpegDecoder.o `test -f 'Transform/FFmpegDecoder.cpp' || echo '$(srcdir)/'`Transform/FFmpegDecoder.cpp

sirannon-FFmpegDecoder.obj: Transform/FFmpegDecoder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FFmpegDecoder.obj -MD -MP -MF $(DEPDIR)/sirannon-FFmpegDecoder.Tpo -c -o sirannon-FFmpegDecoder.obj `if test -f 'Transform/FFmpegDecoder.cpp'; then $(CYGPATH_W) 'Transform/FFmpegDecoder.cpp'; else $(CYGPATH_W) '$(srcdir)/Transform/FFmpegDecoder.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-FFmpegDecoder.Tpo $(DEPDIR)/sirannon-FFmpegDecoder.Po
#	source='Transform/FFmpegDecoder.cpp' object='sirannon-FFmpegDecoder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FFmpegDecoder.obj `if test -f 'Transform/FFmpegDecoder.cpp'; then $(CYGPATH_W) 'Transform/FFmpegDecoder.cpp'; else $(CYGPATH_W) '$(srcdir)/Transform/FFmpegDecoder.cpp'; fi`

sirannon-FrameTagger.o: Misc/FrameTagger.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FrameTagger.o -MD -MP -MF $(DEPDIR)/sirannon-FrameTagger.Tpo -c -o sirannon-FrameTagger.o `test -f 'Misc/FrameTagger.cpp' || echo '$(srcdir)/'`Misc/FrameTagger.cpp
	$(am__mv) $(DEPDIR)/sirannon-FrameTagger.Tpo $(DEPDIR)/sirannon-FrameTagger.Po
#	source='Misc/FrameTagger.cpp' object='sirannon-FrameTagger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FrameTagger.o `test -f 'Misc/FrameTagger.cpp' || echo '$(srcdir)/'`Misc/FrameTagger.cpp

sirannon-FrameTagger.obj: Misc/FrameTagger.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FrameTagger.obj -MD -MP -MF $(DEPDIR)/sirannon-FrameTagger.Tpo -c -o sirannon-FrameTagger.obj `if test -f 'Misc/FrameTagger.cpp'; then $(CYGPATH_W) 'Misc/FrameTagger.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/FrameTagger.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-FrameTagger.Tpo $(DEPDIR)/sirannon-FrameTagger.Po
#	source='Misc/FrameTagger.cpp' object='sirannon-FrameTagger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FrameTagger.obj `if test -f 'Misc/FrameTagger.cpp'; then $(CYGPATH_W) 'Misc/FrameTagger.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/FrameTagger.cpp'; fi`

sirannon-Logger.o: Misc/Logger.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Logger.o -MD -MP -MF $(DEPDIR)/sirannon-Logger.Tpo -c -o sirannon-Logger.o `test -f 'Misc/Logger.cpp' || echo '$(srcdir)/'`Misc/Logger.cpp
	$(am__mv) $(DEPDIR)/sirannon-Logger.Tpo $(DEPDIR)/sirannon-Logger.Po
#	source='Misc/Logger.cpp' object='sirannon-Logger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Logger.o `test -f 'Misc/Logger.cpp' || echo '$(srcdir)/'`Misc/Logger.cpp

sirannon-Logger.obj: Misc/Logger.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Logger.obj -MD -MP -MF $(DEPDIR)/sirannon-Logger.Tpo -c -o sirannon-Logger.obj `if test -f 'Misc/Logger.cpp'; then $(CYGPATH_W) 'Misc/Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/Logger.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Logger.Tpo $(DEPDIR)/sirannon-Logger.Po
#	source='Misc/Logger.cpp' object='sirannon-Logger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Logger.obj `if test -f 'Misc/Logger.cpp'; then $(CYGPATH_W) 'Misc/Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/Logger.cpp'; fi`

sirannon-Statistics.o: Misc/Statistics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Statistics.o -MD -MP -MF $(DEPDIR)/sirannon-Statistics.Tpo -c -o sirannon-Statistics.o `test -f 'Misc/Statistics.cpp' || echo '$(srcdir)/'`Misc/Statistics.cpp
	$(am__mv) $(DEPDIR)/sirannon-Statistics.Tpo $(DEPDIR)/sirannon-Statistics.Po
#	source='Misc/Statistics.cpp' object='sirannon-Statistics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Statistics.o `test -f 'Misc/Statistics.cpp' || echo '$(srcdir)/'`Misc/Statistics.cpp

sirannon-Statistics.obj: Misc/Statistics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Statistics.obj -MD -MP -MF $(DEPDIR)/sirannon-Statistics.Tpo -c -o sirannon-Statistics.obj `if test -f 'Misc/Statistics.cpp'; then $(CYGPATH_W) 'Misc/Statistics.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/Statistics.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Statistics.Tpo $(DEPDIR)/sirannon-Statistics.Po
#	source='Misc/Statistics.cpp' object='sirannon-Statistics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Statistics.obj `if test -f 'Misc/Statistics.cpp'; then $(CYGPATH_W) 'Misc/Statistics.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/Statistics.cpp'; fi`

sirannon-Example.o: Misc/Example.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Example.o -MD -MP -MF $(DEPDIR)/sirannon-Example.Tpo -c -o sirannon-Example.o `test -f 'Misc/Example.cpp' || echo '$(srcdir)/'`Misc/Example.cpp
	$(am__mv) $(DEPDIR)/sirannon-Example.Tpo $(DEPDIR)/sirannon-Example.Po
#	source='Misc/Example.cpp' object='sirannon-Example.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Example.o `test -f 'Misc/Example.cpp' || echo '$(srcdir)/'`Misc/Example.cpp

sirannon-Example.obj: Misc/Example.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Example.obj -MD -MP -MF $(DEPDIR)/sirannon-Example.Tpo -c -o sirannon-Example.obj `if test -f 'Misc/Example.cpp'; then $(CYGPATH_W) 'Misc/Example.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/Example.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Example.Tpo $(DEPDIR)/sirannon-Example.Po
#	source='Misc/Example.cpp' object='sirannon-Example.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Example.obj `if test -f 'Misc/Example.cpp'; then $(CYGPATH_W) 'Misc/Example.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/Example.cpp'; fi`

sirannon-GOPSplitter.o: Misc/GOPSplitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-GOPSplitter.o -MD -MP -MF $(DEPDIR)/sirannon-GOPSplitter.Tpo -c -o sirannon-GOPSplitter.o `test -f 'Misc/GOPSplitter.cpp' || echo '$(srcdir)/'`Misc/GOPSplitter.cpp
	$(am__mv) $(DEPDIR)/sirannon-GOPSplitter.Tpo $(DEPDIR)/sirannon-GOPSplitter.Po
#	source='Misc/GOPSplitter.cpp' object='sirannon-GOPSplitter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-GOPSplitter.o `test -f 'Misc/GOPSplitter.cpp' || echo '$(srcdir)/'`Misc/GOPSplitter.cpp

sirannon-GOPSplitter.obj: Misc/GOPSplitter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-GOPSplitter.obj -MD -MP -MF $(DEPDIR)/sirannon-GOPSplitter.Tpo -c -o sirannon-GOPSplitter.obj `if test -f 'Misc/GOPSplitter.cpp'; then $(CYGPATH_W) 'Misc/GOPSplitter.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/GOPSplitter.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-GOPSplitter.Tpo $(DEPDIR)/sirannon-GOPSplitter.Po
#	source='Misc/GOPSplitter.cpp' object='sirannon-GOPSplitter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-GOPSplitter.obj `if test -f 'Misc/GOPSplitter.cpp'; then $(CYGPATH_W) 'Misc/GOPSplitter.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/GOPSplitter.cpp'; fi`

sirannon-PcapWriter.o: Misc/PcapWriter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-PcapWriter.o -MD -MP -MF $(DEPDIR)/sirannon-PcapWriter.Tpo -c -o sirannon-PcapWriter.o `test -f 'Misc/PcapWriter.cpp' || echo '$(srcdir)/'`Misc/PcapWriter.cpp
	$(am__mv) $(DEPDIR)/sirannon-PcapWriter.Tpo $(DEPDIR)/sirannon-PcapWriter.Po
#	source='Misc/PcapWriter.cpp' object='sirannon-PcapWriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-PcapWriter.o `test -f 'Misc/PcapWriter.cpp' || echo '$(srcdir)/'`Misc/PcapWriter.cpp

sirannon-PcapWriter.obj: Misc/PcapWriter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-PcapWriter.obj -MD -MP -MF $(DEPDIR)/sirannon-PcapWriter.Tpo -c -o sirannon-PcapWriter.obj `if test -f 'Misc/PcapWriter.cpp'; then $(CYGPATH_W) 'Misc/PcapWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/PcapWriter.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-PcapWriter.Tpo $(DEPDIR)/sirannon-PcapWriter.Po
#	source='Misc/PcapWriter.cpp' object='sirannon-PcapWriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-PcapWriter.obj `if test -f 'Misc/PcapWriter.cpp'; then $(CYGPATH_W) 'Misc/PcapWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/PcapWriter.cpp'; fi`

sirannon-YUVDisplay.o: Misc/YUVDisplay.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-YUVDisplay.o -MD -MP -MF $(DEPDIR)/sirannon-YUVDisplay.Tpo -c -o sirannon-YUVDisplay.o `test -f 'Misc/YUVDisplay.cpp' || echo '$(srcdir)/'`Misc/YUVDisplay.cpp
	$(am__mv) $(DEPDIR)/sirannon-YUVDisplay.Tpo $(DEPDIR)/sirannon-YUVDisplay.Po
#	source='Misc/YUVDisplay.cpp' object='sirannon-YUVDisplay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-YUVDisplay.o `test -f 'Misc/YUVDisplay.cpp' || echo '$(srcdir)/'`Misc/YUVDisplay.cpp

sirannon-YUVDisplay.obj: Misc/YUVDisplay.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-YUVDisplay.obj -MD -MP -MF $(DEPDIR)/sirannon-YUVDisplay.Tpo -c -o sirannon-YUVDisplay.obj `if test -f 'Misc/YUVDisplay.cpp'; then $(CYGPATH_W) 'Misc/YUVDisplay.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/YUVDisplay.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-YUVDisplay.Tpo $(DEPDIR)/sirannon-YUVDisplay.Po
#	source='Misc/YUVDisplay.cpp' object='sirannon-YUVDisplay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-YUVDisplay.obj `if test -f 'Misc/YUVDisplay.cpp'; then $(CYGPATH_W) 'Misc/YUVDisplay.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/YUVDisplay.cpp'; fi`

sirannon-Restamp.o: Misc/Restamp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Restamp.o -MD -MP -MF $(DEPDIR)/sirannon-Restamp.Tpo -c -o sirannon-Restamp.o `test -f 'Misc/Restamp.cpp' || echo '$(srcdir)/'`Misc/Restamp.cpp
	$(am__mv) $(DEPDIR)/sirannon-Restamp.Tpo $(DEPDIR)/sirannon-Restamp.Po
#	source='Misc/Restamp.cpp' object='sirannon-Restamp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Restamp.o `test -f 'Misc/Restamp.cpp' || echo '$(srcdir)/'`Misc/Restamp.cpp

sirannon-Restamp.obj: Misc/Restamp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Restamp.obj -MD -MP -MF $(DEPDIR)/sirannon-Restamp.Tpo -c -o sirannon-Restamp.obj `if test -f 'Misc/Restamp.cpp'; then $(CYGPATH_W) 'Misc/Restamp.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/Restamp.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Restamp.Tpo $(DEPDIR)/sirannon-Restamp.Po
#	source='Misc/Restamp.cpp' object='sirannon-Restamp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Restamp.obj `if test -f 'Misc/Restamp.cpp'; then $(CYGPATH_W) 'Misc/Restamp.cpp'; else $(CYGPATH_W) '$(srcdir)/Misc/Restamp.cpp'; fi`

sirannon-Boost.o: Common/Boost.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Boost.o -MD -MP -MF $(DEPDIR)/sirannon-Boost.Tpo -c -o sirannon-Boost.o `test -f 'Common/Boost.cpp' || echo '$(srcdir)/'`Common/Boost.cpp
	$(am__mv) $(DEPDIR)/sirannon-Boost.Tpo $(DEPDIR)/sirannon-Boost.Po
#	source='Common/Boost.cpp' object='sirannon-Boost.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Boost.o `test -f 'Common/Boost.cpp' || echo '$(srcdir)/'`Common/Boost.cpp

sirannon-Boost.obj: Common/Boost.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Boost.obj -MD -MP -MF $(DEPDIR)/sirannon-Boost.Tpo -c -o sirannon-Boost.obj `if test -f 'Common/Boost.cpp'; then $(CYGPATH_W) 'Common/Boost.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Boost.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Boost.Tpo $(DEPDIR)/sirannon-Boost.Po
#	source='Common/Boost.cpp' object='sirannon-Boost.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Boost.obj `if test -f 'Common/Boost.cpp'; then $(CYGPATH_W) 'Common/Boost.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Boost.cpp'; fi`

sirannon-ffmpeg.o: Common/ffmpeg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-ffmpeg.o -MD -MP -MF $(DEPDIR)/sirannon-ffmpeg.Tpo -c -o sirannon-ffmpeg.o `test -f 'Common/ffmpeg.cpp' || echo '$(srcdir)/'`Common/ffmpeg.cpp
	$(am__mv) $(DEPDIR)/sirannon-ffmpeg.Tpo $(DEPDIR)/sirannon-ffmpeg.Po
#	source='Common/ffmpeg.cpp' object='sirannon-ffmpeg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-ffmpeg.o `test -f 'Common/ffmpeg.cpp' || echo '$(srcdir)/'`Common/ffmpeg.cpp

sirannon-ffmpeg.obj: Common/ffmpeg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-ffmpeg.obj -MD -MP -MF $(DEPDIR)/sirannon-ffmpeg.Tpo -c -o sirannon-ffmpeg.obj `if test -f 'Common/ffmpeg.cpp'; then $(CYGPATH_W) 'Common/ffmpeg.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/ffmpeg.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-ffmpeg.Tpo $(DEPDIR)/sirannon-ffmpeg.Po
#	source='Common/ffmpeg.cpp' object='sirannon-ffmpeg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-ffmpeg.obj `if test -f 'Common/ffmpeg.cpp'; then $(CYGPATH_W) 'Common/ffmpeg.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/ffmpeg.cpp'; fi`

sirannon-h264_avc.o: Common/h264_avc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-h264_avc.o -MD -MP -MF $(DEPDIR)/sirannon-h264_avc.Tpo -c -o sirannon-h264_avc.o `test -f 'Common/h264_avc.cpp' || echo '$(srcdir)/'`Common/h264_avc.cpp
	$(am__mv) $(DEPDIR)/sirannon-h264_avc.Tpo $(DEPDIR)/sirannon-h264_avc.Po
#	source='Common/h264_avc.cpp' object='sirannon-h264_avc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-h264_avc.o `test -f 'Common/h264_avc.cpp' || echo '$(srcdir)/'`Common/h264_avc.cpp

sirannon-h264_avc.obj: Common/h264_avc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-h264_avc.obj -MD -MP -MF $(DEPDIR)/sirannon-h264_avc.Tpo -c -o sirannon-h264_avc.obj `if test -f 'Common/h264_avc.cpp'; then $(CYGPATH_W) 'Common/h264_avc.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/h264_avc.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-h264_avc.Tpo $(DEPDIR)/sirannon-h264_avc.Po
#	source='Common/h264_avc.cpp' object='sirannon-h264_avc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-h264_avc.obj `if test -f 'Common/h264_avc.cpp'; then $(CYGPATH_W) 'Common/h264_avc.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/h264_avc.cpp'; fi`

sirannon-sha2.o: Common/sha2.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-sha2.o -MD -MP -MF $(DEPDIR)/sirannon-sha2.Tpo -c -o sirannon-sha2.o `test -f 'Common/sha2.cpp' || echo '$(srcdir)/'`Common/sha2.cpp
	$(am__mv) $(DEPDIR)/sirannon-sha2.Tpo $(DEPDIR)/sirannon-sha2.Po
#	source='Common/sha2.cpp' object='sirannon-sha2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-sha2.o `test -f 'Common/sha2.cpp' || echo '$(srcdir)/'`Common/sha2.cpp

sirannon-sha2.obj: Common/sha2.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-sha2.obj -MD -MP -MF $(DEPDIR)/sirannon-sha2.Tpo -c -o sirannon-sha2.obj `if test -f 'Common/sha2.cpp'; then $(CYGPATH_W) 'Common/sha2.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/sha2.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-sha2.Tpo $(DEPDIR)/sirannon-sha2.Po
#	source='Common/sha2.cpp' object='sirannon-sha2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-sha2.obj `if test -f 'Common/sha2.cpp'; then $(CYGPATH_W) 'Common/sha2.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/sha2.cpp'; fi`

sirannon-hmac_sha2.o: Common/hmac_sha2.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-hmac_sha2.o -MD -MP -MF $(DEPDIR)/sirannon-hmac_sha2.Tpo -c -o sirannon-hmac_sha2.o `test -f 'Common/hmac_sha2.cpp' || echo '$(srcdir)/'`Common/hmac_sha2.cpp
	$(am__mv) $(DEPDIR)/sirannon-hmac_sha2.Tpo $(DEPDIR)/sirannon-hmac_sha2.Po
#	source='Common/hmac_sha2.cpp' object='sirannon-hmac_sha2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-hmac_sha2.o `test -f 'Common/hmac_sha2.cpp' || echo '$(srcdir)/'`Common/hmac_sha2.cpp

sirannon-hmac_sha2.obj: Common/hmac_sha2.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-hmac_sha2.obj -MD -MP -MF $(DEPDIR)/sirannon-hmac_sha2.Tpo -c -o sirannon-hmac_sha2.obj `if test -f 'Common/hmac_sha2.cpp'; then $(CYGPATH_W) 'Common/hmac_sha2.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/hmac_sha2.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-hmac_sha2.Tpo $(DEPDIR)/sirannon-hmac_sha2.Po
#	source='Common/hmac_sha2.cpp' object='sirannon-hmac_sha2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-hmac_sha2.obj `if test -f 'Common/hmac_sha2.cpp'; then $(CYGPATH_W) 'Common/hmac_sha2.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/hmac_sha2.cpp'; fi`

sirannon-PortManager.o: Common/PortManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-PortManager.o -MD -MP -MF $(DEPDIR)/sirannon-PortManager.Tpo -c -o sirannon-PortManager.o `test -f 'Common/PortManager.cpp' || echo '$(srcdir)/'`Common/PortManager.cpp
	$(am__mv) $(DEPDIR)/sirannon-PortManager.Tpo $(DEPDIR)/sirannon-PortManager.Po
#	source='Common/PortManager.cpp' object='sirannon-PortManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-PortManager.o `test -f 'Common/PortManager.cpp' || echo '$(srcdir)/'`Common/PortManager.cpp

sirannon-PortManager.obj: Common/PortManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-PortManager.obj -MD -MP -MF $(DEPDIR)/sirannon-PortManager.Tpo -c -o sirannon-PortManager.obj `if test -f 'Common/PortManager.cpp'; then $(CYGPATH_W) 'Common/PortManager.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/PortManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-PortManager.Tpo $(DEPDIR)/sirannon-PortManager.Po
#	source='Common/PortManager.cpp' object='sirannon-PortManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-PortManager.obj `if test -f 'Common/PortManager.cpp'; then $(CYGPATH_W) 'Common/PortManager.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/PortManager.cpp'; fi`

sirannon-FileManager.o: Common/FileManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FileManager.o -MD -MP -MF $(DEPDIR)/sirannon-FileManager.Tpo -c -o sirannon-FileManager.o `test -f 'Common/FileManager.cpp' || echo '$(srcdir)/'`Common/FileManager.cpp
	$(am__mv) $(DEPDIR)/sirannon-FileManager.Tpo $(DEPDIR)/sirannon-FileManager.Po
#	source='Common/FileManager.cpp' object='sirannon-FileManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FileManager.o `test -f 'Common/FileManager.cpp' || echo '$(srcdir)/'`Common/FileManager.cpp

sirannon-FileManager.obj: Common/FileManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-FileManager.obj -MD -MP -MF $(DEPDIR)/sirannon-FileManager.Tpo -c -o sirannon-FileManager.obj `if test -f 'Common/FileManager.cpp'; then $(CYGPATH_W) 'Common/FileManager.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/FileManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-FileManager.Tpo $(DEPDIR)/sirannon-FileManager.Po
#	source='Common/FileManager.cpp' object='sirannon-FileManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-FileManager.obj `if test -f 'Common/FileManager.cpp'; then $(CYGPATH_W) 'Common/FileManager.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/FileManager.cpp'; fi`

sirannon-RandomGenerator.o: Common/RandomGenerator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RandomGenerator.o -MD -MP -MF $(DEPDIR)/sirannon-RandomGenerator.Tpo -c -o sirannon-RandomGenerator.o `test -f 'Common/RandomGenerator.cpp' || echo '$(srcdir)/'`Common/RandomGenerator.cpp
	$(am__mv) $(DEPDIR)/sirannon-RandomGenerator.Tpo $(DEPDIR)/sirannon-RandomGenerator.Po
#	source='Common/RandomGenerator.cpp' object='sirannon-RandomGenerator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RandomGenerator.o `test -f 'Common/RandomGenerator.cpp' || echo '$(srcdir)/'`Common/RandomGenerator.cpp

sirannon-RandomGenerator.obj: Common/RandomGenerator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-RandomGenerator.obj -MD -MP -MF $(DEPDIR)/sirannon-RandomGenerator.Tpo -c -o sirannon-RandomGenerator.obj `if test -f 'Common/RandomGenerator.cpp'; then $(CYGPATH_W) 'Common/RandomGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/RandomGenerator.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-RandomGenerator.Tpo $(DEPDIR)/sirannon-RandomGenerator.Po
#	source='Common/RandomGenerator.cpp' object='sirannon-RandomGenerator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-RandomGenerator.obj `if test -f 'Common/RandomGenerator.cpp'; then $(CYGPATH_W) 'Common/RandomGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/RandomGenerator.cpp'; fi`

sirannon-Utils.o: Common/Utils.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Utils.o -MD -MP -MF $(DEPDIR)/sirannon-Utils.Tpo -c -o sirannon-Utils.o `test -f 'Common/Utils.cpp' || echo '$(srcdir)/'`Common/Utils.cpp
	$(am__mv) $(DEPDIR)/sirannon-Utils.Tpo $(DEPDIR)/sirannon-Utils.Po
#	source='Common/Utils.cpp' object='sirannon-Utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Utils.o `test -f 'Common/Utils.cpp' || echo '$(srcdir)/'`Common/Utils.cpp

sirannon-Utils.obj: Common/Utils.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Utils.obj -MD -MP -MF $(DEPDIR)/sirannon-Utils.Tpo -c -o sirannon-Utils.obj `if test -f 'Common/Utils.cpp'; then $(CYGPATH_W) 'Common/Utils.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Utils.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Utils.Tpo $(DEPDIR)/sirannon-Utils.Po
#	source='Common/Utils.cpp' object='sirannon-Utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Utils.obj `if test -f 'Common/Utils.cpp'; then $(CYGPATH_W) 'Common/Utils.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Utils.cpp'; fi`

sirannon-Frame.o: Common/Frame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Frame.o -MD -MP -MF $(DEPDIR)/sirannon-Frame.Tpo -c -o sirannon-Frame.o `test -f 'Common/Frame.cpp' || echo '$(srcdir)/'`Common/Frame.cpp
	$(am__mv) $(DEPDIR)/sirannon-Frame.Tpo $(DEPDIR)/sirannon-Frame.Po
#	source='Common/Frame.cpp' object='sirannon-Frame.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Frame.o `test -f 'Common/Frame.cpp' || echo '$(srcdir)/'`Common/Frame.cpp

sirannon-Frame.obj: Common/Frame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Frame.obj -MD -MP -MF $(DEPDIR)/sirannon-Frame.Tpo -c -o sirannon-Frame.obj `if test -f 'Common/Frame.cpp'; then $(CYGPATH_W) 'Common/Frame.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Frame.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Frame.Tpo $(DEPDIR)/sirannon-Frame.Po
#	source='Common/Frame.cpp' object='sirannon-Frame.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Frame.obj `if test -f 'Common/Frame.cpp'; then $(CYGPATH_W) 'Common/Frame.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Frame.cpp'; fi`

sirannon-sdp.o: Common/sdp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-sdp.o -MD -MP -MF $(DEPDIR)/sirannon-sdp.Tpo -c -o sirannon-sdp.o `test -f 'Common/sdp.cpp' || echo '$(srcdir)/'`Common/sdp.cpp
	$(am__mv) $(DEPDIR)/sirannon-sdp.Tpo $(DEPDIR)/sirannon-sdp.Po
#	source='Common/sdp.cpp' object='sirannon-sdp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-sdp.o `test -f 'Common/sdp.cpp' || echo '$(srcdir)/'`Common/sdp.cpp

sirannon-sdp.obj: Common/sdp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-sdp.obj -MD -MP -MF $(DEPDIR)/sirannon-sdp.Tpo -c -o sirannon-sdp.obj `if test -f 'Common/sdp.cpp'; then $(CYGPATH_W) 'Common/sdp.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/sdp.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-sdp.Tpo $(DEPDIR)/sirannon-sdp.Po
#	source='Common/sdp.cpp' object='sirannon-sdp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-sdp.obj `if test -f 'Common/sdp.cpp'; then $(CYGPATH_W) 'Common/sdp.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/sdp.cpp'; fi`

sirannon-SirannonSocket.o: Common/SirannonSocket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SirannonSocket.o -MD -MP -MF $(DEPDIR)/sirannon-SirannonSocket.Tpo -c -o sirannon-SirannonSocket.o `test -f 'Common/SirannonSocket.cpp' || echo '$(srcdir)/'`Common/SirannonSocket.cpp
	$(am__mv) $(DEPDIR)/sirannon-SirannonSocket.Tpo $(DEPDIR)/sirannon-SirannonSocket.Po
#	source='Common/SirannonSocket.cpp' object='sirannon-SirannonSocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SirannonSocket.o `test -f 'Common/SirannonSocket.cpp' || echo '$(srcdir)/'`Common/SirannonSocket.cpp

sirannon-SirannonSocket.obj: Common/SirannonSocket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SirannonSocket.obj -MD -MP -MF $(DEPDIR)/sirannon-SirannonSocket.Tpo -c -o sirannon-SirannonSocket.obj `if test -f 'Common/SirannonSocket.cpp'; then $(CYGPATH_W) 'Common/SirannonSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/SirannonSocket.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-SirannonSocket.Tpo $(DEPDIR)/sirannon-SirannonSocket.Po
#	source='Common/SirannonSocket.cpp' object='sirannon-SirannonSocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SirannonSocket.obj `if test -f 'Common/SirannonSocket.cpp'; then $(CYGPATH_W) 'Common/SirannonSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/SirannonSocket.cpp'; fi`

sirannon-Flash.o: Common/Flash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Flash.o -MD -MP -MF $(DEPDIR)/sirannon-Flash.Tpo -c -o sirannon-Flash.o `test -f 'Common/Flash.cpp' || echo '$(srcdir)/'`Common/Flash.cpp
	$(am__mv) $(DEPDIR)/sirannon-Flash.Tpo $(DEPDIR)/sirannon-Flash.Po
#	source='Common/Flash.cpp' object='sirannon-Flash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Flash.o `test -f 'Common/Flash.cpp' || echo '$(srcdir)/'`Common/Flash.cpp

sirannon-Flash.obj: Common/Flash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Flash.obj -MD -MP -MF $(DEPDIR)/sirannon-Flash.Tpo -c -o sirannon-Flash.obj `if test -f 'Common/Flash.cpp'; then $(CYGPATH_W) 'Common/Flash.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Flash.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Flash.Tpo $(DEPDIR)/sirannon-Flash.Po
#	source='Common/Flash.cpp' object='sirannon-Flash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Flash.obj `if test -f 'Common/Flash.cpp'; then $(CYGPATH_W) 'Common/Flash.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Flash.cpp'; fi`

sirannon-Bits.o: Common/Bits.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Bits.o -MD -MP -MF $(DEPDIR)/sirannon-Bits.Tpo -c -o sirannon-Bits.o `test -f 'Common/Bits.cpp' || echo '$(srcdir)/'`Common/Bits.cpp
	$(am__mv) $(DEPDIR)/sirannon-Bits.Tpo $(DEPDIR)/sirannon-Bits.Po
#	source='Common/Bits.cpp' object='sirannon-Bits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Bits.o `test -f 'Common/Bits.cpp' || echo '$(srcdir)/'`Common/Bits.cpp

sirannon-Bits.obj: Common/Bits.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Bits.obj -MD -MP -MF $(DEPDIR)/sirannon-Bits.Tpo -c -o sirannon-Bits.obj `if test -f 'Common/Bits.cpp'; then $(CYGPATH_W) 'Common/Bits.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Bits.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Bits.Tpo $(DEPDIR)/sirannon-Bits.Po
#	source='Common/Bits.cpp' object='sirannon-Bits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Bits.obj `if test -f 'Common/Bits.cpp'; then $(CYGPATH_W) 'Common/Bits.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Bits.cpp'; fi`

sirannon-Url.o: Common/Url.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Url.o -MD -MP -MF $(DEPDIR)/sirannon-Url.Tpo -c -o sirannon-Url.o `test -f 'Common/Url.cpp' || echo '$(srcdir)/'`Common/Url.cpp
	$(am__mv) $(DEPDIR)/sirannon-Url.Tpo $(DEPDIR)/sirannon-Url.Po
#	source='Common/Url.cpp' object='sirannon-Url.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Url.o `test -f 'Common/Url.cpp' || echo '$(srcdir)/'`Common/Url.cpp

sirannon-Url.obj: Common/Url.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Url.obj -MD -MP -MF $(DEPDIR)/sirannon-Url.Tpo -c -o sirannon-Url.obj `if test -f 'Common/Url.cpp'; then $(CYGPATH_W) 'Common/Url.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Url.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Url.Tpo $(DEPDIR)/sirannon-Url.Po
#	source='Common/Url.cpp' object='sirannon-Url.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Url.obj `if test -f 'Common/Url.cpp'; then $(CYGPATH_W) 'Common/Url.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Url.cpp'; fi`

sirannon-Base64.o: Common/Base64.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Base64.o -MD -MP -MF $(DEPDIR)/sirannon-Base64.Tpo -c -o sirannon-Base64.o `test -f 'Common/Base64.cpp' || echo '$(srcdir)/'`Common/Base64.cpp
	$(am__mv) $(DEPDIR)/sirannon-Base64.Tpo $(DEPDIR)/sirannon-Base64.Po
#	source='Common/Base64.cpp' object='sirannon-Base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Base64.o `test -f 'Common/Base64.cpp' || echo '$(srcdir)/'`Common/Base64.cpp

sirannon-Base64.obj: Common/Base64.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Base64.obj -MD -MP -MF $(DEPDIR)/sirannon-Base64.Tpo -c -o sirannon-Base64.obj `if test -f 'Common/Base64.cpp'; then $(CYGPATH_W) 'Common/Base64.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Base64.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Base64.Tpo $(DEPDIR)/sirannon-Base64.Po
#	source='Common/Base64.cpp' object='sirannon-Base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Base64.obj `if test -f 'Common/Base64.cpp'; then $(CYGPATH_W) 'Common/Base64.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/Base64.cpp'; fi`

sirannon-IPAddress.o: Common/IPAddress.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-IPAddress.o -MD -MP -MF $(DEPDIR)/sirannon-IPAddress.Tpo -c -o sirannon-IPAddress.o `test -f 'Common/IPAddress.cpp' || echo '$(srcdir)/'`Common/IPAddress.cpp
	$(am__mv) $(DEPDIR)/sirannon-IPAddress.Tpo $(DEPDIR)/sirannon-IPAddress.Po
#	source='Common/IPAddress.cpp' object='sirannon-IPAddress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-IPAddress.o `test -f 'Common/IPAddress.cpp' || echo '$(srcdir)/'`Common/IPAddress.cpp

sirannon-IPAddress.obj: Common/IPAddress.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-IPAddress.obj -MD -MP -MF $(DEPDIR)/sirannon-IPAddress.Tpo -c -o sirannon-IPAddress.obj `if test -f 'Common/IPAddress.cpp'; then $(CYGPATH_W) 'Common/IPAddress.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/IPAddress.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-IPAddress.Tpo $(DEPDIR)/sirannon-IPAddress.Po
#	source='Common/IPAddress.cpp' object='sirannon-IPAddress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-IPAddress.obj `if test -f 'Common/IPAddress.cpp'; then $(CYGPATH_W) 'Common/IPAddress.cpp'; else $(CYGPATH_W) '$(srcdir)/Common/IPAddress.cpp'; fi`

sirannon-SirannonException.o: Core/SirannonException.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SirannonException.o -MD -MP -MF $(DEPDIR)/sirannon-SirannonException.Tpo -c -o sirannon-SirannonException.o `test -f 'Core/SirannonException.cpp' || echo '$(srcdir)/'`Core/SirannonException.cpp
	$(am__mv) $(DEPDIR)/sirannon-SirannonException.Tpo $(DEPDIR)/sirannon-SirannonException.Po
#	source='Core/SirannonException.cpp' object='sirannon-SirannonException.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SirannonException.o `test -f 'Core/SirannonException.cpp' || echo '$(srcdir)/'`Core/SirannonException.cpp

sirannon-SirannonException.obj: Core/SirannonException.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SirannonException.obj -MD -MP -MF $(DEPDIR)/sirannon-SirannonException.Tpo -c -o sirannon-SirannonException.obj `if test -f 'Core/SirannonException.cpp'; then $(CYGPATH_W) 'Core/SirannonException.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/SirannonException.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-SirannonException.Tpo $(DEPDIR)/sirannon-SirannonException.Po
#	source='Core/SirannonException.cpp' object='sirannon-SirannonException.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SirannonException.obj `if test -f 'Core/SirannonException.cpp'; then $(CYGPATH_W) 'Core/SirannonException.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/SirannonException.cpp'; fi`

sirannon-SirannonTime.o: Core/SirannonTime.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SirannonTime.o -MD -MP -MF $(DEPDIR)/sirannon-SirannonTime.Tpo -c -o sirannon-SirannonTime.o `test -f 'Core/SirannonTime.cpp' || echo '$(srcdir)/'`Core/SirannonTime.cpp
	$(am__mv) $(DEPDIR)/sirannon-SirannonTime.Tpo $(DEPDIR)/sirannon-SirannonTime.Po
#	source='Core/SirannonTime.cpp' object='sirannon-SirannonTime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SirannonTime.o `test -f 'Core/SirannonTime.cpp' || echo '$(srcdir)/'`Core/SirannonTime.cpp

sirannon-SirannonTime.obj: Core/SirannonTime.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SirannonTime.obj -MD -MP -MF $(DEPDIR)/sirannon-SirannonTime.Tpo -c -o sirannon-SirannonTime.obj `if test -f 'Core/SirannonTime.cpp'; then $(CYGPATH_W) 'Core/SirannonTime.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/SirannonTime.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-SirannonTime.Tpo $(DEPDIR)/sirannon-SirannonTime.Po
#	source='Core/SirannonTime.cpp' object='sirannon-SirannonTime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SirannonTime.obj `if test -f 'Core/SirannonTime.cpp'; then $(CYGPATH_W) 'Core/SirannonTime.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/SirannonTime.cpp'; fi`

sirannon-XMLStream.o: Core/XMLStream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-XMLStream.o -MD -MP -MF $(DEPDIR)/sirannon-XMLStream.Tpo -c -o sirannon-XMLStream.o `test -f 'Core/XMLStream.cpp' || echo '$(srcdir)/'`Core/XMLStream.cpp
	$(am__mv) $(DEPDIR)/sirannon-XMLStream.Tpo $(DEPDIR)/sirannon-XMLStream.Po
#	source='Core/XMLStream.cpp' object='sirannon-XMLStream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-XMLStream.o `test -f 'Core/XMLStream.cpp' || echo '$(srcdir)/'`Core/XMLStream.cpp

sirannon-XMLStream.obj: Core/XMLStream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-XMLStream.obj -MD -MP -MF $(DEPDIR)/sirannon-XMLStream.Tpo -c -o sirannon-XMLStream.obj `if test -f 'Core/XMLStream.cpp'; then $(CYGPATH_W) 'Core/XMLStream.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/XMLStream.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-XMLStream.Tpo $(DEPDIR)/sirannon-XMLStream.Po
#	source='Core/XMLStream.cpp' object='sirannon-XMLStream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-XMLStream.obj `if test -f 'Core/XMLStream.cpp'; then $(CYGPATH_W) 'Core/XMLStream.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/XMLStream.cpp'; fi`

sirannon-Block.o: Core/Block.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Block.o -MD -MP -MF $(DEPDIR)/sirannon-Block.Tpo -c -o sirannon-Block.o `test -f 'Core/Block.cpp' || echo '$(srcdir)/'`Core/Block.cpp
	$(am__mv) $(DEPDIR)/sirannon-Block.Tpo $(DEPDIR)/sirannon-Block.Po
#	source='Core/Block.cpp' object='sirannon-Block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Block.o `test -f 'Core/Block.cpp' || echo '$(srcdir)/'`Core/Block.cpp

sirannon-Block.obj: Core/Block.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Block.obj -MD -MP -MF $(DEPDIR)/sirannon-Block.Tpo -c -o sirannon-Block.obj `if test -f 'Core/Block.cpp'; then $(CYGPATH_W) 'Core/Block.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/Block.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Block.Tpo $(DEPDIR)/sirannon-Block.Po
#	source='Core/Block.cpp' object='sirannon-Block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Block.obj `if test -f 'Core/Block.cpp'; then $(CYGPATH_W) 'Core/Block.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/Block.cpp'; fi`

sirannon-System.o: Core/System.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-System.o -MD -MP -MF $(DEPDIR)/sirannon-System.Tpo -c -o sirannon-System.o `test -f 'Core/System.cpp' || echo '$(srcdir)/'`Core/System.cpp
	$(am__mv) $(DEPDIR)/sirannon-System.Tpo $(DEPDIR)/sirannon-System.Po
#	source='Core/System.cpp' object='sirannon-System.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-System.o `test -f 'Core/System.cpp' || echo '$(srcdir)/'`Core/System.cpp

sirannon-System.obj: Core/System.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-System.obj -MD -MP -MF $(DEPDIR)/sirannon-System.Tpo -c -o sirannon-System.obj `if test -f 'Core/System.cpp'; then $(CYGPATH_W) 'Core/System.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/System.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-System.Tpo $(DEPDIR)/sirannon-System.Po
#	source='Core/System.cpp' object='sirannon-System.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-System.obj `if test -f 'Core/System.cpp'; then $(CYGPATH_W) 'Core/System.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/System.cpp'; fi`

sirannon-OSSupport.o: Core/OSSupport.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-OSSupport.o -MD -MP -MF $(DEPDIR)/sirannon-OSSupport.Tpo -c -o sirannon-OSSupport.o `test -f 'Core/OSSupport.cpp' || echo '$(srcdir)/'`Core/OSSupport.cpp
	$(am__mv) $(DEPDIR)/sirannon-OSSupport.Tpo $(DEPDIR)/sirannon-OSSupport.Po
#	source='Core/OSSupport.cpp' object='sirannon-OSSupport.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-OSSupport.o `test -f 'Core/OSSupport.cpp' || echo '$(srcdir)/'`Core/OSSupport.cpp

sirannon-OSSupport.obj: Core/OSSupport.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-OSSupport.obj -MD -MP -MF $(DEPDIR)/sirannon-OSSupport.Tpo -c -o sirannon-OSSupport.obj `if test -f 'Core/OSSupport.cpp'; then $(CYGPATH_W) 'Core/OSSupport.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/OSSupport.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-OSSupport.Tpo $(DEPDIR)/sirannon-OSSupport.Po
#	source='Core/OSSupport.cpp' object='sirannon-OSSupport.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-OSSupport.obj `if test -f 'Core/OSSupport.cpp'; then $(CYGPATH_W) 'Core/OSSupport.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/OSSupport.cpp'; fi`

sirannon-ConnectionInterface.o: Core/ConnectionInterface.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-ConnectionInterface.o -MD -MP -MF $(DEPDIR)/sirannon-ConnectionInterface.Tpo -c -o sirannon-ConnectionInterface.o `test -f 'Core/ConnectionInterface.cpp' || echo '$(srcdir)/'`Core/ConnectionInterface.cpp
	$(am__mv) $(DEPDIR)/sirannon-ConnectionInterface.Tpo $(DEPDIR)/sirannon-ConnectionInterface.Po
#	source='Core/ConnectionInterface.cpp' object='sirannon-ConnectionInterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-ConnectionInterface.o `test -f 'Core/ConnectionInterface.cpp' || echo '$(srcdir)/'`Core/ConnectionInterface.cpp

sirannon-ConnectionInterface.obj: Core/ConnectionInterface.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-ConnectionInterface.obj -MD -MP -MF $(DEPDIR)/sirannon-ConnectionInterface.Tpo -c -o sirannon-ConnectionInterface.obj `if test -f 'Core/ConnectionInterface.cpp'; then $(CYGPATH_W) 'Core/ConnectionInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/ConnectionInterface.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-ConnectionInterface.Tpo $(DEPDIR)/sirannon-ConnectionInterface.Po
#	source='Core/ConnectionInterface.cpp' object='sirannon-ConnectionInterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-ConnectionInterface.obj `if test -f 'Core/ConnectionInterface.cpp'; then $(CYGPATH_W) 'Core/ConnectionInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/ConnectionInterface.cpp'; fi`

sirannon-Link.o: Core/Link.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Link.o -MD -MP -MF $(DEPDIR)/sirannon-Link.Tpo -c -o sirannon-Link.o `test -f 'Core/Link.cpp' || echo '$(srcdir)/'`Core/Link.cpp
	$(am__mv) $(DEPDIR)/sirannon-Link.Tpo $(DEPDIR)/sirannon-Link.Po
#	source='Core/Link.cpp' object='sirannon-Link.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Link.o `test -f 'Core/Link.cpp' || echo '$(srcdir)/'`Core/Link.cpp

sirannon-Link.obj: Core/Link.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-Link.obj -MD -MP -MF $(DEPDIR)/sirannon-Link.Tpo -c -o sirannon-Link.obj `if test -f 'Core/Link.cpp'; then $(CYGPATH_W) 'Core/Link.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/Link.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-Link.Tpo $(DEPDIR)/sirannon-Link.Po
#	source='Core/Link.cpp' object='sirannon-Link.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-Link.obj `if test -f 'Core/Link.cpp'; then $(CYGPATH_W) 'Core/Link.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/Link.cpp'; fi`

sirannon-MediaPacket.o: Core/MediaPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MediaPacket.o -MD -MP -MF $(DEPDIR)/sirannon-MediaPacket.Tpo -c -o sirannon-MediaPacket.o `test -f 'Core/MediaPacket.cpp' || echo '$(srcdir)/'`Core/MediaPacket.cpp
	$(am__mv) $(DEPDIR)/sirannon-MediaPacket.Tpo $(DEPDIR)/sirannon-MediaPacket.Po
#	source='Core/MediaPacket.cpp' object='sirannon-MediaPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MediaPacket.o `test -f 'Core/MediaPacket.cpp' || echo '$(srcdir)/'`Core/MediaPacket.cpp

sirannon-MediaPacket.obj: Core/MediaPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MediaPacket.obj -MD -MP -MF $(DEPDIR)/sirannon-MediaPacket.Tpo -c -o sirannon-MediaPacket.obj `if test -f 'Core/MediaPacket.cpp'; then $(CYGPATH_W) 'Core/MediaPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/MediaPacket.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-MediaPacket.Tpo $(DEPDIR)/sirannon-MediaPacket.Po
#	source='Core/MediaPacket.cpp' object='sirannon-MediaPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MediaPacket.obj `if test -f 'Core/MediaPacket.cpp'; then $(CYGPATH_W) 'Core/MediaPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/MediaPacket.cpp'; fi`

sirannon-MediaDescriptor.o: Core/MediaDescriptor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MediaDescriptor.o -MD -MP -MF $(DEPDIR)/sirannon-MediaDescriptor.Tpo -c -o sirannon-MediaDescriptor.o `test -f 'Core/MediaDescriptor.cpp' || echo '$(srcdir)/'`Core/MediaDescriptor.cpp
	$(am__mv) $(DEPDIR)/sirannon-MediaDescriptor.Tpo $(DEPDIR)/sirannon-MediaDescriptor.Po
#	source='Core/MediaDescriptor.cpp' object='sirannon-MediaDescriptor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MediaDescriptor.o `test -f 'Core/MediaDescriptor.cpp' || echo '$(srcdir)/'`Core/MediaDescriptor.cpp

sirannon-MediaDescriptor.obj: Core/MediaDescriptor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MediaDescriptor.obj -MD -MP -MF $(DEPDIR)/sirannon-MediaDescriptor.Tpo -c -o sirannon-MediaDescriptor.obj `if test -f 'Core/MediaDescriptor.cpp'; then $(CYGPATH_W) 'Core/MediaDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/MediaDescriptor.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-MediaDescriptor.Tpo $(DEPDIR)/sirannon-MediaDescriptor.Po
#	source='Core/MediaDescriptor.cpp' object='sirannon-MediaDescriptor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MediaDescriptor.obj `if test -f 'Core/MediaDescriptor.cpp'; then $(CYGPATH_W) 'Core/MediaDescriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/MediaDescriptor.cpp'; fi`

sirannon-ProcessorManager.o: Core/ProcessorManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-ProcessorManager.o -MD -MP -MF $(DEPDIR)/sirannon-ProcessorManager.Tpo -c -o sirannon-ProcessorManager.o `test -f 'Core/ProcessorManager.cpp' || echo '$(srcdir)/'`Core/ProcessorManager.cpp
	$(am__mv) $(DEPDIR)/sirannon-ProcessorManager.Tpo $(DEPDIR)/sirannon-ProcessorManager.Po
#	source='Core/ProcessorManager.cpp' object='sirannon-ProcessorManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-ProcessorManager.o `test -f 'Core/ProcessorManager.cpp' || echo '$(srcdir)/'`Core/ProcessorManager.cpp

sirannon-ProcessorManager.obj: Core/ProcessorManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-ProcessorManager.obj -MD -MP -MF $(DEPDIR)/sirannon-ProcessorManager.Tpo -c -o sirannon-ProcessorManager.obj `if test -f 'Core/ProcessorManager.cpp'; then $(CYGPATH_W) 'Core/ProcessorManager.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/ProcessorManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-ProcessorManager.Tpo $(DEPDIR)/sirannon-ProcessorManager.Po
#	source='Core/ProcessorManager.cpp' object='sirannon-ProcessorManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-ProcessorManager.obj `if test -f 'Core/ProcessorManager.cpp'; then $(CYGPATH_W) 'Core/ProcessorManager.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/ProcessorManager.cpp'; fi`

sirannon-MemoryManager.o: Core/MemoryManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MemoryManager.o -MD -MP -MF $(DEPDIR)/sirannon-MemoryManager.Tpo -c -o sirannon-MemoryManager.o `test -f 'Core/MemoryManager.cpp' || echo '$(srcdir)/'`Core/MemoryManager.cpp
	$(am__mv) $(DEPDIR)/sirannon-MemoryManager.Tpo $(DEPDIR)/sirannon-MemoryManager.Po
#	source='Core/MemoryManager.cpp' object='sirannon-MemoryManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MemoryManager.o `test -f 'Core/MemoryManager.cpp' || echo '$(srcdir)/'`Core/MemoryManager.cpp

sirannon-MemoryManager.obj: Core/MemoryManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MemoryManager.obj -MD -MP -MF $(DEPDIR)/sirannon-MemoryManager.Tpo -c -o sirannon-MemoryManager.obj `if test -f 'Core/MemoryManager.cpp'; then $(CYGPATH_W) 'Core/MemoryManager.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/MemoryManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-MemoryManager.Tpo $(DEPDIR)/sirannon-MemoryManager.Po
#	source='Core/MemoryManager.cpp' object='sirannon-MemoryManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MemoryManager.obj `if test -f 'Core/MemoryManager.cpp'; then $(CYGPATH_W) 'Core/MemoryManager.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/MemoryManager.cpp'; fi`

sirannon-SirannonPrint.o: Core/SirannonPrint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SirannonPrint.o -MD -MP -MF $(DEPDIR)/sirannon-SirannonPrint.Tpo -c -o sirannon-SirannonPrint.o `test -f 'Core/SirannonPrint.cpp' || echo '$(srcdir)/'`Core/SirannonPrint.cpp
	$(am__mv) $(DEPDIR)/sirannon-SirannonPrint.Tpo $(DEPDIR)/sirannon-SirannonPrint.Po
#	source='Core/SirannonPrint.cpp' object='sirannon-SirannonPrint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SirannonPrint.o `test -f 'Core/SirannonPrint.cpp' || echo '$(srcdir)/'`Core/SirannonPrint.cpp

sirannon-SirannonPrint.obj: Core/SirannonPrint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-SirannonPrint.obj -MD -MP -MF $(DEPDIR)/sirannon-SirannonPrint.Tpo -c -o sirannon-SirannonPrint.obj `if test -f 'Core/SirannonPrint.cpp'; then $(CYGPATH_W) 'Core/SirannonPrint.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/SirannonPrint.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-SirannonPrint.Tpo $(DEPDIR)/sirannon-SirannonPrint.Po
#	source='Core/SirannonPrint.cpp' object='sirannon-SirannonPrint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-SirannonPrint.obj `if test -f 'Core/SirannonPrint.cpp'; then $(CYGPATH_W) 'Core/SirannonPrint.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/SirannonPrint.cpp'; fi`

sirannon-sirannon.o: sirannon.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-sirannon.o -MD -MP -MF $(DEPDIR)/sirannon-sirannon.Tpo -c -o sirannon-sirannon.o `test -f 'sirannon.cpp' || echo '$(srcdir)/'`sirannon.cpp
	$(am__mv) $(DEPDIR)/sirannon-sirannon.Tpo $(DEPDIR)/sirannon-sirannon.Po
#	source='sirannon.cpp' object='sirannon-sirannon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-sirannon.o `test -f 'sirannon.cpp' || echo '$(srcdir)/'`sirannon.cpp

sirannon-sirannon.obj: sirannon.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-sirannon.obj -MD -MP -MF $(DEPDIR)/sirannon-sirannon.Tpo -c -o sirannon-sirannon.obj `if test -f 'sirannon.cpp'; then $(CYGPATH_W) 'sirannon.cpp'; else $(CYGPATH_W) '$(srcdir)/sirannon.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-sirannon.Tpo $(DEPDIR)/sirannon-sirannon.Po
#	source='sirannon.cpp' object='sirannon-sirannon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-sirannon.obj `if test -f 'sirannon.cpp'; then $(CYGPATH_W) 'sirannon.cpp'; else $(CYGPATH_W) '$(srcdir)/sirannon.cpp'; fi`

sirannon-MediaProcessor.o: Core/MediaProcessor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MediaProcessor.o -MD -MP -MF $(DEPDIR)/sirannon-MediaProcessor.Tpo -c -o sirannon-MediaProcessor.o `test -f 'Core/MediaProcessor.cpp' || echo '$(srcdir)/'`Core/MediaProcessor.cpp
	$(am__mv) $(DEPDIR)/sirannon-MediaProcessor.Tpo $(DEPDIR)/sirannon-MediaProcessor.Po
#	source='Core/MediaProcessor.cpp' object='sirannon-MediaProcessor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MediaProcessor.o `test -f 'Core/MediaProcessor.cpp' || echo '$(srcdir)/'`Core/MediaProcessor.cpp

sirannon-MediaProcessor.obj: Core/MediaProcessor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-MediaProcessor.obj -MD -MP -MF $(DEPDIR)/sirannon-MediaProcessor.Tpo -c -o sirannon-MediaProcessor.obj `if test -f 'Core/MediaProcessor.cpp'; then $(CYGPATH_W) 'Core/MediaProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/MediaProcessor.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-MediaProcessor.Tpo $(DEPDIR)/sirannon-MediaProcessor.Po
#	source='Core/MediaProcessor.cpp' object='sirannon-MediaProcessor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-MediaProcessor.obj `if test -f 'Core/MediaProcessor.cpp'; then $(CYGPATH_W) 'Core/MediaProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/Core/MediaProcessor.cpp'; fi`

sirannon-AQUAServer.o: Private/AQUAServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AQUAServer.o -MD -MP -MF $(DEPDIR)/sirannon-AQUAServer.Tpo -c -o sirannon-AQUAServer.o `test -f 'Private/AQUAServer.cpp' || echo '$(srcdir)/'`Private/AQUAServer.cpp
	$(am__mv) $(DEPDIR)/sirannon-AQUAServer.Tpo $(DEPDIR)/sirannon-AQUAServer.Po
#	source='Private/AQUAServer.cpp' object='sirannon-AQUAServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AQUAServer.o `test -f 'Private/AQUAServer.cpp' || echo '$(srcdir)/'`Private/AQUAServer.cpp

sirannon-AQUAServer.obj: Private/AQUAServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AQUAServer.obj -MD -MP -MF $(DEPDIR)/sirannon-AQUAServer.Tpo -c -o sirannon-AQUAServer.obj `if test -f 'Private/AQUAServer.cpp'; then $(CYGPATH_W) 'Private/AQUAServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/AQUAServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AQUAServer.Tpo $(DEPDIR)/sirannon-AQUAServer.Po
#	source='Private/AQUAServer.cpp' object='sirannon-AQUAServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AQUAServer.obj `if test -f 'Private/AQUAServer.cpp'; then $(CYGPATH_W) 'Private/AQUAServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/AQUAServer.cpp'; fi`

sirannon-AQUAWriter.o: Private/AQUAWriter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AQUAWriter.o -MD -MP -MF $(DEPDIR)/sirannon-AQUAWriter.Tpo -c -o sirannon-AQUAWriter.o `test -f 'Private/AQUAWriter.cpp' || echo '$(srcdir)/'`Private/AQUAWriter.cpp
	$(am__mv) $(DEPDIR)/sirannon-AQUAWriter.Tpo $(DEPDIR)/sirannon-AQUAWriter.Po
#	source='Private/AQUAWriter.cpp' object='sirannon-AQUAWriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AQUAWriter.o `test -f 'Private/AQUAWriter.cpp' || echo '$(srcdir)/'`Private/AQUAWriter.cpp

sirannon-AQUAWriter.obj: Private/AQUAWriter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AQUAWriter.obj -MD -MP -MF $(DEPDIR)/sirannon-AQUAWriter.Tpo -c -o sirannon-AQUAWriter.obj `if test -f 'Private/AQUAWriter.cpp'; then $(CYGPATH_W) 'Private/AQUAWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/AQUAWriter.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AQUAWriter.Tpo $(DEPDIR)/sirannon-AQUAWriter.Po
#	source='Private/AQUAWriter.cpp' object='sirannon-AQUAWriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AQUAWriter.obj `if test -f 'Private/AQUAWriter.cpp'; then $(CYGPATH_W) 'Private/AQUAWriter.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/AQUAWriter.cpp'; fi`

sirannon-DIORServer.o: Private/DIORServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-DIORServer.o -MD -MP -MF $(DEPDIR)/sirannon-DIORServer.Tpo -c -o sirannon-DIORServer.o `test -f 'Private/DIORServer.cpp' || echo '$(srcdir)/'`Private/DIORServer.cpp
	$(am__mv) $(DEPDIR)/sirannon-DIORServer.Tpo $(DEPDIR)/sirannon-DIORServer.Po
#	source='Private/DIORServer.cpp' object='sirannon-DIORServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-DIORServer.o `test -f 'Private/DIORServer.cpp' || echo '$(srcdir)/'`Private/DIORServer.cpp

sirannon-DIORServer.obj: Private/DIORServer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-DIORServer.obj -MD -MP -MF $(DEPDIR)/sirannon-DIORServer.Tpo -c -o sirannon-DIORServer.obj `if test -f 'Private/DIORServer.cpp'; then $(CYGPATH_W) 'Private/DIORServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/DIORServer.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-DIORServer.Tpo $(DEPDIR)/sirannon-DIORServer.Po
#	source='Private/DIORServer.cpp' object='sirannon-DIORServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-DIORServer.obj `if test -f 'Private/DIORServer.cpp'; then $(CYGPATH_W) 'Private/DIORServer.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/DIORServer.cpp'; fi`

sirannon-AQUASession.o: Private/AQUASession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AQUASession.o -MD -MP -MF $(DEPDIR)/sirannon-AQUASession.Tpo -c -o sirannon-AQUASession.o `test -f 'Private/AQUASession.cpp' || echo '$(srcdir)/'`Private/AQUASession.cpp
	$(am__mv) $(DEPDIR)/sirannon-AQUASession.Tpo $(DEPDIR)/sirannon-AQUASession.Po
#	source='Private/AQUASession.cpp' object='sirannon-AQUASession.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AQUASession.o `test -f 'Private/AQUASession.cpp' || echo '$(srcdir)/'`Private/AQUASession.cpp

sirannon-AQUASession.obj: Private/AQUASession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AQUASession.obj -MD -MP -MF $(DEPDIR)/sirannon-AQUASession.Tpo -c -o sirannon-AQUASession.obj `if test -f 'Private/AQUASession.cpp'; then $(CYGPATH_W) 'Private/AQUASession.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/AQUASession.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AQUASession.Tpo $(DEPDIR)/sirannon-AQUASession.Po
#	source='Private/AQUASession.cpp' object='sirannon-AQUASession.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AQUASession.obj `if test -f 'Private/AQUASession.cpp'; then $(CYGPATH_W) 'Private/AQUASession.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/AQUASession.cpp'; fi`

sirannon-AQUAMonitor.o: Private/AQUAMonitor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AQUAMonitor.o -MD -MP -MF $(DEPDIR)/sirannon-AQUAMonitor.Tpo -c -o sirannon-AQUAMonitor.o `test -f 'Private/AQUAMonitor.cpp' || echo '$(srcdir)/'`Private/AQUAMonitor.cpp
	$(am__mv) $(DEPDIR)/sirannon-AQUAMonitor.Tpo $(DEPDIR)/sirannon-AQUAMonitor.Po
#	source='Private/AQUAMonitor.cpp' object='sirannon-AQUAMonitor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AQUAMonitor.o `test -f 'Private/AQUAMonitor.cpp' || echo '$(srcdir)/'`Private/AQUAMonitor.cpp

sirannon-AQUAMonitor.obj: Private/AQUAMonitor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-AQUAMonitor.obj -MD -MP -MF $(DEPDIR)/sirannon-AQUAMonitor.Tpo -c -o sirannon-AQUAMonitor.obj `if test -f 'Private/AQUAMonitor.cpp'; then $(CYGPATH_W) 'Private/AQUAMonitor.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/AQUAMonitor.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-AQUAMonitor.Tpo $(DEPDIR)/sirannon-AQUAMonitor.Po
#	source='Private/AQUAMonitor.cpp' object='sirannon-AQUAMonitor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-AQUAMonitor.obj `if test -f 'Private/AQUAMonitor.cpp'; then $(CYGPATH_W) 'Private/AQUAMonitor.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/AQUAMonitor.cpp'; fi`

sirannon-DIORSession.o: Private/DIORSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-DIORSession.o -MD -MP -MF $(DEPDIR)/sirannon-DIORSession.Tpo -c -o sirannon-DIORSession.o `test -f 'Private/DIORSession.cpp' || echo '$(srcdir)/'`Private/DIORSession.cpp
	$(am__mv) $(DEPDIR)/sirannon-DIORSession.Tpo $(DEPDIR)/sirannon-DIORSession.Po
#	source='Private/DIORSession.cpp' object='sirannon-DIORSession.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-DIORSession.o `test -f 'Private/DIORSession.cpp' || echo '$(srcdir)/'`Private/DIORSession.cpp

sirannon-DIORSession.obj: Private/DIORSession.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-DIORSession.obj -MD -MP -MF $(DEPDIR)/sirannon-DIORSession.Tpo -c -o sirannon-DIORSession.obj `if test -f 'Private/DIORSession.cpp'; then $(CYGPATH_W) 'Private/DIORSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/DIORSession.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-DIORSession.Tpo $(DEPDIR)/sirannon-DIORSession.Po
#	source='Private/DIORSession.cpp' object='sirannon-DIORSession.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-DIORSession.obj `if test -f 'Private/DIORSession.cpp'; then $(CYGPATH_W) 'Private/DIORSession.cpp'; else $(CYGPATH_W) '$(srcdir)/Private/DIORSession.cpp'; fi`

sirannon-IConcealClassifier.o: Local/IConcealClassifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-IConcealClassifier.o -MD -MP -MF $(DEPDIR)/sirannon-IConcealClassifier.Tpo -c -o sirannon-IConcealClassifier.o `test -f 'Local/IConcealClassifier.cpp' || echo '$(srcdir)/'`Local/IConcealClassifier.cpp
	$(am__mv) $(DEPDIR)/sirannon-IConcealClassifier.Tpo $(DEPDIR)/sirannon-IConcealClassifier.Po
#	source='Local/IConcealClassifier.cpp' object='sirannon-IConcealClassifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-IConcealClassifier.o `test -f 'Local/IConcealClassifier.cpp' || echo '$(srcdir)/'`Local/IConcealClassifier.cpp

sirannon-IConcealClassifier.obj: Local/IConcealClassifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-IConcealClassifier.obj -MD -MP -MF $(DEPDIR)/sirannon-IConcealClassifier.Tpo -c -o sirannon-IConcealClassifier.obj `if test -f 'Local/IConcealClassifier.cpp'; then $(CYGPATH_W) 'Local/IConcealClassifier.cpp'; else $(CYGPATH_W) '$(srcdir)/Local/IConcealClassifier.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-IConcealClassifier.Tpo $(DEPDIR)/sirannon-IConcealClassifier.Po
#	source='Local/IConcealClassifier.cpp' object='sirannon-IConcealClassifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-IConcealClassifier.obj `if test -f 'Local/IConcealClassifier.cpp'; then $(CYGPATH_W) 'Local/IConcealClassifier.cpp'; else $(CYGPATH_W) '$(srcdir)/Local/IConcealClassifier.cpp'; fi`

sirannon-test.o: Local/test.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-test.o -MD -MP -MF $(DEPDIR)/sirannon-test.Tpo -c -o sirannon-test.o `test -f 'Local/test.cpp' || echo '$(srcdir)/'`Local/test.cpp
	$(am__mv) $(DEPDIR)/sirannon-test.Tpo $(DEPDIR)/sirannon-test.Po
#	source='Local/test.cpp' object='sirannon-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-test.o `test -f 'Local/test.cpp' || echo '$(srcdir)/'`Local/test.cpp

sirannon-test.obj: Local/test.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -MT sirannon-test.obj -MD -MP -MF $(DEPDIR)/sirannon-test.Tpo -c -o sirannon-test.obj `if test -f 'Local/test.cpp'; then $(CYGPATH_W) 'Local/test.cpp'; else $(CYGPATH_W) '$(srcdir)/Local/test.cpp'; fi`
	$(am__mv) $(DEPDIR)/sirannon-test.Tpo $(DEPDIR)/sirannon-test.Po
#	source='Local/test.cpp' object='sirannon-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sirannon_CPPFLAGS) $(CPPFLAGS) $(sirannon_CXXFLAGS) $(CXXFLAGS) -c -o sirannon-test.obj `if test -f 'Local/test.cpp'; then $(CYGPATH_W) 'Local/test.cpp'; else $(CYGPATH_W) '$(srcdir)/Local/test.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libsirannonincludeHEADERS: $(libsirannoninclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libsirannonincludedir)" || $(MKDIR_P) "$(DESTDIR)$(libsirannonincludedir)"
	@list='$(libsirannoninclude_HEADERS)'; test -n "$(libsirannonincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libsirannonincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libsirannonincludedir)" || exit $$?; \
	done

uninstall-libsirannonincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libsirannoninclude_HEADERS)'; test -n "$(libsirannonincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libsirannonincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libsirannonincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libsirannonincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libsirannonincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-libsirannonincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libsirannonincludeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES uninstall-libsirannonincludeHEADERS


sirannon-sirannon.$(OBJEXT): $(sirannon_SOURCES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
